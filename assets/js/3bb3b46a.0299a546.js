"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[37740],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>i});var t=n(96540);const o={},l=t.createContext(o);function a(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(l.Provider,{value:s},e.children)}},92170:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Web_and_app_UIs/UDB_ColsMeta/ColsMetaisInputAllowed","title":"ColsMeta.isInputAllowed()","description":"----","source":"@site/docs/Web_and_app_UIs/UDB_ColsMeta/ColsMetaisInputAllowed.md","sourceDirName":"Web_and_app_UIs/UDB_ColsMeta","slug":"/Web_and_app_UIs/UDB_ColsMeta/ColsMetaisInputAllowed","permalink":"/udocs/Web_and_app_UIs/UDB_ColsMeta/ColsMetaisInputAllowed","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"USoft11","permalink":"/udocs/tags/u-soft-11"},{"inline":true,"label":"USoft10","permalink":"/udocs/tags/u-soft-10"}],"version":"current","frontMatter":{"id":"ColsMetaisInputAllowed","tags":["USoft11","USoft10"]},"sidebar":"sidebar","previous":{"title":"ColsMeta.isGroupBy()","permalink":"/udocs/Web_and_app_UIs/UDB_ColsMeta/ColsMetaisGroupBy"},"next":{"title":"ColsMeta.isKey()","permalink":"/udocs/Web_and_app_UIs/UDB_ColsMeta/ColsMetaisKey"}}');var o=n(74848),l=n(28453);const a={id:"ColsMetaisInputAllowed",tags:["USoft11","USoft10"]},i="ColsMeta.isInputAllowed()",r={},d=[{value:"<strong>ColsMeta.isInputAllowed()</strong>",id:"colsmetaisinputallowed-1",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"colsmetaisinputallowed",children:"ColsMeta.isInputAllowed()"})}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.code,{children:"USoft 11``{.vs_11}"})}),"\n",(0,o.jsx)(s.admonition,{type:"danger",children:(0,o.jsxs)(s.p,{children:["This article describes the USoft 10 product only.\nIn USoft 11, the web UI API was revised and improved. For full details, go to:\n",(0,o.jsx)(s.a,{href:"/udocs/Web_and_app_UIs/UDB_udb/Revised_web_UI_API_in_USoft_11",children:"Revised web UI API in USoft 11"})]})}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.code,{children:"USoft 10``{.vs_10}"})}),"\n",(0,o.jsx)(s.admonition,{type:"note",children:(0,o.jsxs)(s.p,{children:["This article is about the ",(0,o.jsx)(s.strong,{children:"isInputAllowed()"})," function of the ",(0,o.jsx)(s.a,{href:"/Web_and_app_UIs/UDB_ColsMeta",children:"ColsMeta object"}),"."]})}),"\n",(0,o.jsx)(s.h2,{id:"colsmetaisinputallowed-1",children:(0,o.jsx)(s.strong,{children:"ColsMeta.isInputAllowed()"})}),"\n",(0,o.jsx)(s.p,{children:"Finds out if new input may be entered for this column. Use this, for example, for a column in an inserted record."}),"\n",(0,o.jsx)(s.p,{children:"Returns a boolean."}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.em,{children:"Syntax"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"$.udbMeta( *ds* ).cols( *cols* ).isInputAllowed()\n"})}),"\n",(0,o.jsxs)(s.p,{children:["The optional ",(0,o.jsx)(s.em,{children:"ds"})," is a ",(0,o.jsx)(s.a,{href:"/udocs/Web_and_app_UIs/UDB_DataSourceMetaContainer/UDB_DataSourceMetaContainer_object",children:"data source selector"}),". The optional ",(0,o.jsx)(s.em,{children:"cols"})," is a ",(0,o.jsx)(s.a,{href:"/udocs/Web_and_app_UIs/UDB_ColsMeta/UDB_ColsMeta_object",children:"column selector"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"Function returns true if new input may be entered for this column, false otherwise."}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.em,{children:"Example"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"if (!updatable && $.udbMeta(this.dsId).cols(this.column).isInputAllowed() &&\n     record.isInserted())\n    updatable = true;\n"})}),"\n",(0,o.jsx)(s.p,{children:"\xa0"})]})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);