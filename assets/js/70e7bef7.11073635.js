"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[88688],{28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(96540);const a={},s=n.createContext(a);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:r},e.children)}},95980:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Continuous_delivery/Delivery_Manager_actions_by_name/Extract_servers","title":"Extract servers","description":"This article is about the Extract serversDelivery Manager action.","source":"@site/docs/Continuous_delivery/Delivery_Manager_actions_by_name/Extract_servers.md","sourceDirName":"Continuous_delivery/Delivery_Manager_actions_by_name","slug":"/Continuous_delivery/Delivery_Manager_actions_by_name/Extract_servers","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Extract_servers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Extract_servers"},"sidebar":"sidebar","previous":{"title":"Export to TDF","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Export_to_TDF"},"next":{"title":"Extract USoft version","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Extract_USoft_version"}}');var a=t(74848),s=t(28453);const i={id:"Extract_servers"},o="Extract servers",c={},l=[{value:"<strong>Extract servers</strong>",id:"extract-servers-1",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Errors",id:"errors",level:3}];function d(e){const r={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"extract-servers",children:"Extract servers"})}),"\n",(0,a.jsx)(r.admonition,{type:"note",children:(0,a.jsxs)(r.p,{children:["This article is about the ",(0,a.jsx)(r.strong,{children:"Extract servers"}),(0,a.jsx)(r.a,{href:"/Continuous_delivery/Delivery_Manager_actions_by_name",children:"Delivery Manager action"}),"."]})}),"\n",(0,a.jsx)(r.h2,{id:"extract-servers-1",children:(0,a.jsx)(r.strong,{children:"Extract servers"})}),"\n",(0,a.jsx)(r.p,{children:'Synchronises the list of servers for "Database account", as kept in Delivery Manager, with the servers actually in existence in Service Definer in "Database account".'}),"\n",(0,a.jsx)(r.p,{children:'"Synchronise" means that'}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:'Any server defined in "Database account" that is not yet known to Delivery Manager is added to the list.'}),"\n",(0,a.jsx)(r.li,{children:'Any server no longer defined in "Database account" is dropped from the list if there are no Task Step Parameters that refer to that server; otherwise an error is raised.'}),"\n",(0,a.jsx)(r.li,{children:'The Publication File Path value for each server in the list is set to the value found in Service Definer in "Database account".'}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Unlike Service Definer, Delivery Manager uses unique Server Object names to identify servers:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:'For each server extracted from "Database account" that is already known in Delivery Manager, the existing Server Object name that identifies it is used.'}),"\n",(0,a.jsx)(r.li,{children:'For each server extracted from "Database account" that is NOT yet known in Delivery Manager, the server name itself is used as a default name for the new Server Object if no other Server Object with that name already exists; otherwise, it\'s an error.'}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"This action requires that USERVICE is declared as an Application in Delivery Manager. Running this action causes a default USERVICE Application record to be created silently if it does not exist."}),"\n",(0,a.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:(0,a.jsx)(r.strong,{children:"Name"})}),(0,a.jsx)(r.th,{children:(0,a.jsx)(r.strong,{children:"Type"})}),(0,a.jsx)(r.th,{children:(0,a.jsx)(r.strong,{children:"Optional?"})})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"Database account"}),(0,a.jsx)(r.td,{children:"Database account"}),(0,a.jsx)(r.td,{children:"No"})]})})]}),"\n",(0,a.jsx)(r.h3,{id:"errors",children:"Errors"}),"\n",(0,a.jsx)(r.p,{children:'An error is raised if Delivery Manager refers to a server extracted earlier from "Database account", that is no longer found in Service Definer in "Database account", but that is still referred to by a Task Step Parameter. This is typically solved by dropping the obsolete Task Step.'}),"\n",(0,a.jsx)(r.p,{children:'An error is raised if Delivery Manager detects a new server, but the name of that server already exists as a Server Object in Delivery Manager (referring to a different server extracted earlier). This is typically solved by renaming that existing Server Object name to something else, and then running "Extract servers" again.'})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);