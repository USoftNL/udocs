"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[85485],{26684:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"Repositories/Object_shopping/Inclusion_rules_for_Implementations","title":"Inclusion rules for Implementations","description":"The list in this help topic shows which objects, in an export, are automatically included when you include an Implementation.","source":"@site/docs/Repositories/Object_shopping/Inclusion_rules_for_Implementations.md","sourceDirName":"Repositories/Object_shopping","slug":"/Repositories/Object_shopping/Inclusion_rules_for_Implementations","permalink":"/udocs/Repositories/Object_shopping/Inclusion_rules_for_Implementations","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Inclusion_rules_for_Implementations"},"sidebar":"sidebar","previous":{"title":"Inclusion rules for EAR diagrams","permalink":"/udocs/Repositories/Object_shopping/Inclusion_rules_for_EAR_diagrams"},"next":{"title":"Inclusion rules for Tables, Views and Relationships","permalink":"/udocs/Repositories/Object_shopping/Inclusion_rules_for_Tables_Views_and_Relationships"}}');var i=t(74848),s=t(28453);const l={id:"Inclusion_rules_for_Implementations"},r="Inclusion rules for Implementations",a={},p=[];function c(n){const e={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"inclusion-rules-for-implementations",children:"Inclusion rules for Implementations"})}),"\n",(0,i.jsx)(e.p,{children:"The list in this help topic shows which objects, in an export, are automatically included when you include an Implementation."}),"\n",(0,i.jsx)(e.p,{children:"What is included depends on the Type of the implementation. In the list, the names surrounded by parentheses (on the first sub-level) refer to the Type of the implementation."}),"\n",(0,i.jsx)(e.p,{children:"For example, the first four lines of the list mean that if an Implementation of Type = Column is included, then the entire Table that the Column is part of, including all the columns in that Table, are included."}),"\n",(0,i.jsx)(e.admonition,{type:"warning",children:(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Components:"})," For a Component Method, the entire Component including all its Methods is included.\n",(0,i.jsx)(e.strong,{children:"Roles:"})," For a Table Right, Column Right, Job Right or Component Right, the entire Role including all its rights is included, except Module Rights.\n",(0,i.jsx)(e.strong,{children:"Jobs:"})," For Job Task or Job SQL, no inclusions are made. To have the Job included, add an Implementation with Type = Job.\n",(0,i.jsx)(e.strong,{children:"ESI"})," (ie., GUI elements): For Controls, Pages and Windows, no inclusions are made. The implementation record itself is also not included."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"Implementation\n. . (Column)\n. . . . Table\n. . . . . . Column\n. . . . . . . . Index Column\n. . . . . . . . . . Index\n. . . . . . (supertype) Table\n. . . . . . . . (etc.)\n. . (Column Right)\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . . . Column Right\n. . . . . . Job Right\n. . . . . . Component Right\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . Job Right\n. . . . . . Component Right\n. . (Component)\n. . . . Component\n. . . . . . Method\n. . . . . . . . Parameter\n. . . . . . Query Protocol Association\n. . . . . . Aggregate Protocol Association\n. . (Component Method)\n. . . . Component\n. . . . . . Method\n. . . . . . . . Parameter\n. . . . . . Query Protocol Association\n. . . . . . Aggregate Protocol Association\n. . (Component Right)\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . . . Column Right\n. . . . . . Job Right\n. . . . . . Component Right\n. . (Constraint)\n. . . . Constraint\n. . (Control (C/S))\n. . (Control (browser))\n. . (Decision)\n. . . . Decision\n. . (Domain)\n. . . . Domain\n. . . . . . (super)Domain\n. . . . . . . . (etc.)\n. . . . . . Allowed Value\n. . . . . . Domain Constraint\n. . . . . . Alternative Input Format\n. . (Domain Constraint)\n. . . . Domain Constraint\n. . (External Element)\n. . (Job)\n. . . . Job\n. . . . . . Job Task\n. . . . . . . . Action Task\n. . . . . . . . Export Task\n. . . . . . . . . . Export Task Set\n. . . . . . . . . . . . Export Task Set Element\n. . . . . . . . Import Task\n. . . . . . . . . . Import Task Set\n. . . . . . . . . . . . Import Task Set Element\n. . . . . . . . . . . . Import Task Set Virtual\n. . . . . . . . Job (executed by Job)\n. . . . . . . . . . Job Task\n. . . . . . . . . . . . (etc.)\n. . . . . . . . SQL Task\n. . . . . . . . . . SQL Task Statement\n. . . . . . Input Parameter Set\n. . . . . . . . Input Parameter Set Element\n. . . . . . Output Parameter Set\n. . . . . . . . Output Parameter Set Element\n. . (Job Right)\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . . . Column Right\n. . . . . . Job Right\n. . . . . . Component Right\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . Job Right\n. . . . . . Component Right\n. . (Job SQL)\n. . (Job Task)\n. . (Logical View)\n. . . . Logical View\n. . . . . . Column\n. . (Menu Line)\n. . (Menu Page)\n. . (Page)\n. . (Page Set)\n. . (Relationship)\n. . . . Relationship\n. . . . . . Table (= parent table)\n. . . . . . . . Column\n. . . . . . . . . . Index Column\n. . . . . . . . . . . . Index\n. . . . . . . . (supertype) Table\n. . . . . . . . . . (etc.)\n. . . . . . Table (= child table)\n. . . . . . . . Column\n. . . . . . . . . . Index Column\n. . . . . . . . . . . . Index\n. . . . . . . . (supertype) Table\n. . . . . . . . . . (etc.)\n. . (Role)\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . Job Right\n. . . . . . Component Right\n. . (Subtype Group)\n. . . . Subtype Definition\n. . . . . . (supertype) Table\n. . . . . . . . (etc.)\n. . . . . . Subtype Definition Element\n. . . . . . . . (subtype) Table\n. . . . . . . . . . (etc.)\n. . (Table)\n. . . . Table\n. . . . . . Column\n. . . . . . . . Index Column\n. . . . . . . . . . Index\n. . . . . . (supertype) Table\n. . . . . . . . (etc.)\n. . (Table Right)\n. . . . Role\n. . . . . . Table Right\n. . . . . . . . Role Condition\n. . . . . . . . Column Right\n. . . . . . Job Right\n. . . . . . Component Right\n. . (Web Service)\n. . . . Web Service Provider\n. . . . . . Method\n. . . . . . . . Parameter\n. . (Window or Dialog)\n. . Implementation Type*\n. . Repository Version*\n"})}),"\n",(0,i.jsx)(e.p,{children:"*\xa0The last two lines mean that for each implementation, Implementation Type and Repository Version are included."})]})}function m(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function l(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);