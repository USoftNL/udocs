"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[97848],{28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function a(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(s.Provider,{value:e},n.children)}},30404:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"Extensions/USXSL_internal_component/USXSL_internal_component","title":"USXSL internal component","description":"This article contains general information about the USXSL internal component.","source":"@site/docs/Extensions/USXSL_internal_component/USXSL_internal_component.md","sourceDirName":"Extensions/USXSL_internal_component","slug":"/Extensions/USXSL_internal_component/","permalink":"/udocs/Extensions/USXSL_internal_component/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"USXSL_internal_component"},"sidebar":"sidebar","previous":{"title":"USXSL internal component","permalink":"/udocs/Extensions/USXSL_internal_component"},"next":{"title":"USXSL.Apply","permalink":"/udocs/Extensions/USXSL_internal_component/USXSLApply"}}');var i=t(74848),s=t(28453);const a={id:"USXSL_internal_component"},r="USXSL internal component",c={},l=[{value:"What is it?",id:"what-is-it",level:2},{value:"Intended use",id:"intended-use",level:2},{value:"Encoding",id:"encoding",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"usxsl-internal-component",children:"USXSL internal component"})}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["This article contains general information about the ",(0,i.jsx)(e.strong,{children:"USXSL"})," internal component.\nFor an alphabetic list of ",(0,i.jsx)(e.a,{href:"/Extensions/USXSL_internal_component",children:"USXSL methods"}),"."]})}),"\n",(0,i.jsx)(e.h2,{id:"what-is-it",children:"What is it?"}),"\n",(0,i.jsx)(e.p,{children:"The USXSL internal component is an\xa0XSLT 1.0 processor that is a 3rd party C++ implementation (Xalan/Xerces) to which USoft has added the capability to mix in USoft application data on condition that you provide this data in a valid XML format."}),"\n",(0,i.jsx)(e.h2,{id:"intended-use",children:"Intended use"}),"\n",(0,i.jsx)(e.p,{children:"The USXSL internal component provides a standard XSLT 1.0 processor in a USoft SQL context. This makes it easy to embed XSLT transformations in your USoft application."}),"\n",(0,i.jsx)(e.p,{children:"Use this component in any way that you would normally use XSLT 1.0:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Apply an XSL transformation to an XML document."}),"\n",(0,i.jsx)(e.li,{children:"Retrieve a value from an XML document."}),"\n",(0,i.jsx)(e.li,{children:"Retrieve a complete node from an XML document."}),"\n",(0,i.jsx)(e.li,{children:"Temporarily store an XML or XSL document in memory."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Use it also to:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Mix USoft application data into an XSLT transformation."}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsx)(e.p,{children:"Consider switching to the USCSXSL component which offers the same as USXSL but also extension functions."})}),"\n",(0,i.jsx)(e.h2,{id:"encoding",children:"Encoding"}),"\n",(0,i.jsx)(e.p,{children:"A different encoding is produced depending on whether the output is internal or external."}),"\n",(0,i.jsx)(e.p,{children:"The USXSL component produces UTF-16 output encoding internally, ie., as long as the output is not written to a file on the file system or passed to a third party by way of a webservice call. This is because with UTF-16 we can easily exchange Unicode characters with controls and other Windows-related interfaces. UTF-16 is also the encoding recommended by Microsoft."}),"\n",(0,i.jsxs)(e.p,{children:['Correspondingly, in this case, the USXSL component produces the attribute encoding="UTF-16" in the XML declaration at the top of the output document. You cannot change this behaviour. It applies regardless of what is the value of the encoding attribute of the <xsl',":output","> instruction in the XSL stylesheet (if such an attribute is present)."]}),"\n",(0,i.jsxs)(e.p,{children:["By default, the USXSL component produces UTF-8 output encoding externally, ie., when the result is written to a file on the file system, as is the case when you call ",(0,i.jsx)(e.strong,{children:"USXSL.Apply2File"}),", or is passed to a third party by way of a webservice call. This is because UTF-8 is a common default in these cases. You can obtain a different external output encoding by specifying it as the encoding attribute of the <xsl",":output","> instruction in the XSL stylesheet, for example:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",children:'<xsl:output encoding="UTF-16"/>\n'})}),"\n",(0,i.jsx)(e.p,{children:"or"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",children:'<xsl:output encoding="ISO-8859-1"/>\n'})}),"\n",(0,i.jsx)(e.p,{children:"\xa0"})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}}}]);