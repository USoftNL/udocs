"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[82122],{28453:(e,n,t)=>{t.d(n,{R:()=>p,x:()=>l});var s=t(96540);const i={},r=s.createContext(i);function p(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:p(e.components),s.createElement(r.Provider,{value:n},e.children)}},50084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Repositories/Blend_directives/pcapply","title":"pc:apply","description":"This article is about the pc:apply Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcapply.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcapply","permalink":"/udocs/Repositories/Blend_directives/pcapply","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcapply"},"sidebar":"sidebar","previous":{"title":"pc:AppendFile","permalink":"/udocs/Repositories/Blend_directives/pcAppendFile"},"next":{"title":"pc:apply2file","permalink":"/udocs/Repositories/Blend_directives/pcapply2file"}}');var i=t(74848),r=t(28453);const p={id:"pcapply"},l="pc",c={},a=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"pc",children:["pc",":apply"]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This article is about the ",(0,i.jsxs)(n.strong,{children:["pc",":apply"]})," ",(0,i.jsx)(n.a,{href:"/Repositories/Blend_directives",children:"Blend directive"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"pc-1",children:(0,i.jsxs)(n.strong,{children:["pc",":apply"]})}),"\n",(0,i.jsx)(n.p,{children:"Applies an XSLT transformation to a specified XML document and writes the result to the standard output."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Syntax"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<pc:apply\n     xml = "*expr >> path*"\n     xsl = "*expr >> path*"\n     [ *variable* = "*value*" ... ]/>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The required ",(0,i.jsx)(n.strong,{children:"xml"})," and ",(0,i.jsx)(n.strong,{children:"xsl"})," are filepaths identifying (respectively) the input XML file and the XSLT stylesheet.\nOptional variable-value pairs may be passed as input parameters to the XSLT stylesheet corresponding to <xsl",":param","> entries within the stylesheet."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"xml"})," and ",(0,i.jsx)(n.strong,{children:"xsl"})," must be absolute filepaths or filepaths relative to the location of the script file. The example illustrates the latter."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<pc:apply\n   xml="../../env.xml"\n   xsl="using/env.xsl"\n   servername="{$servername}"/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);