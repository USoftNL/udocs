"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[41273],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},52270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_removing_interface_objects","title":"XSL for removing interface objects","description":"This help topic contains XSL sample code that you can use in USoft Delivery manager as added XSL or when calling the Apply custom XSL action.","source":"@site/docs/Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_removing_interface_objects.md","sourceDirName":"Continuous_delivery/XSL_sample_code_for_delivery","slug":"/Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_removing_interface_objects","permalink":"/udocs/Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_removing_interface_objects","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"XSL_for_removing_interface_objects"},"sidebar":"sidebar","previous":{"title":"XSL for removing log stamps","permalink":"/udocs/Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_removing_log_stamps"},"next":{"title":"XSL for copying only ADMIN users","permalink":"/udocs/Continuous_delivery/XSL_sample_code_for_delivery/XSL_for_copying_only_ADMIN_users"}}');var o=n(74848),r=n(28453);const i={id:"XSL_for_removing_interface_objects"},c="XSL for removing interface objects",a={},l=[];function d(e){const t={code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"xsl-for-removing-interface-objects",children:"XSL for removing interface objects"})}),"\n",(0,o.jsx)(t.p,{children:"This help topic contains XSL sample code that you can use in USoft Delivery manager as added XSL or when calling the Apply custom XSL action."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Purpose"})}),"\n",(0,o.jsx)(t.p,{children:'This sample removes, from an XML data file, all reference to interface objects. Interface objects are objects obtained by synchronising with a consumed module, as opposed to the application\'s "own" objects. Removing interface objects is a logical step if you transfer the modules to the target environment by a separate path and then plan to re-synchronise there.'}),"\n",(0,o.jsx)(t.p,{children:"Using a similar technique, you can remove:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["GUI definitions. GUI definitions are in tables named ",(0,o.jsx)(t.strong,{children:"T_E_..."})," with the exception of tables named ",(0,o.jsx)(t.strong,{children:"T_E_DECISION..."})," .\xa0"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["SQL Objects. SQL Objects are in tables named ",(0,o.jsx)(t.strong,{children:"T_SQL_..."})," .If you re-import the XML without disabling rules, SQL Objects information is regenerated automatically."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Technical notes"})}),"\n",(0,o.jsxs)(t.p,{children:["The 7 first templates select interface objects. These 7 ",(0,o.jsxs)(t.strong,{children:["xsl",":template"]})," elements have no content. This amounts to the instruction of NOT writing these objects to the output."]}),"\n",(0,o.jsx)(t.p,{children:"The 7 object types are enumerated for maximum control. If you feel confident that only these 7 object types have a MODULE attribute, you could code a single match pattern instead:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"<xsl:template match=\"*[@MODULE!='']\"/>\n"})}),"\n",(0,o.jsx)(t.p,{children:"The default copy template at the end is necessary to copy all the remaining input data to the output data."}),"\n",(0,o.jsxs)(t.p,{children:["For the interface objects, the first templates have higher default priority because a match pattern such as ",(0,o.jsx)(t.strong,{children:"T_TABLE"})," is more specific than the pattern *****."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Sample code"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:'<?xml version="1.0" encoding="windows-1252"?>\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >\n<xsl:output method="xml" encoding="UTF-8" omit-xml-declaration="no"/>\n\n  \x3c!--  suppress interface objects --\x3e\n\n  <xsl:template match="T_TABLE[@MODULE!=\'\']"/>\n  <xsl:template match="T_COLUMN[@MODULE!=\'\']"/>\n  <xsl:template match="T_DOMAIN[@MODULE!=\'\']"/>\n  <xsl:template match="T_DOMAIN_ENUM[@MODULE!=\'\']"/>\n  <xsl:template match="T_JOB[@MODULE!=\'\']"/>\n  <xsl:template match="T_EXT_SET[@MODULE!=\'\']"/>\n  <xsl:template match="T_EXT_SETELEMENT[@MODULE!=\'\']"/>\n\n  \x3c!--  default copy template --\x3e\n\n  <xsl:template match="*|@*|comment()|processing-instruction()|text()">\n    <xsl:copy>\n      <xsl:apply-templates select="*|@*|text()|comment()|processing-instruction()"/>\n    </xsl:copy>\n  </xsl:template>\n\n</xsl:stylesheet>\n'})}),"\n",(0,o.jsx)(t.p,{children:"\xa0"})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);