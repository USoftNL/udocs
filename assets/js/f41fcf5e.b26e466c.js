"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[21537],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},86891:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Services/Predefined_REST_services/Retrieving_data_with_USoft_Table_Resource","title":"Retrieving data with USoft Table Resource","description":"To be able to retrieve data through a REST service based on \\"USoft Table Resource\\" functionality, you first need to:","source":"@site/docs/Services/Predefined_REST_services/Retrieving_data_with_USoft_Table_Resource.md","sourceDirName":"Services/Predefined_REST_services","slug":"/Services/Predefined_REST_services/Retrieving_data_with_USoft_Table_Resource","permalink":"/udocs/Services/Predefined_REST_services/Retrieving_data_with_USoft_Table_Resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Retrieving_data_with_USoft_Table_Resource"},"sidebar":"sidebar","previous":{"title":"Getting table and column Information with USoft Table Resource","permalink":"/udocs/Services/Predefined_REST_services/Getting_table_and_column_Information_with_USoft_Table_Resource"},"next":{"title":"Adding data with USoft Table Resource","permalink":"/udocs/Services/Predefined_REST_services/Adding_data_with_USoft_Table_Resource"}}');var r=t(74848),s=t(28453);const o={id:"Retrieving_data_with_USoft_Table_Resource"},c="Retrieving data with USoft Table Resource",l={},a=[{value:"Retrieving all the data in a table",id:"retrieving-all-the-data-in-a-table",level:2},{value:"Retrieving only records that contain a specific value",id:"retrieving-only-records-that-contain-a-specific-value",level:2},{value:"Retrieving only records with values higher, lower or different than a specific value",id:"retrieving-only-records-with-values-higher-lower-or-different-than-a-specific-value",level:2},{value:"Retrieving only values that match a pattern",id:"retrieving-only-values-that-match-a-pattern",level:2},{value:"Retrieving only specific columns",id:"retrieving-only-specific-columns",level:2},{value:"Sorting the result by a specific column",id:"sorting-the-result-by-a-specific-column",level:2},{value:"Renaming a column in the output",id:"renaming-a-column-in-the-output",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"retrieving-data-with-usoft-table-resource",children:"Retrieving data with USoft Table Resource"})}),"\n",(0,r.jsx)(n.p,{children:'To be able to retrieve data through a REST service based on "USoft Table Resource" functionality, you first need to:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Define a predefined USoft REST service based on "USoft Table Resource",'}),"\n",(0,r.jsx)(n.li,{children:"Associate it with a server and a connection,"}),"\n",(0,r.jsx)(n.li,{children:"Publish it, and"}),"\n",(0,r.jsx)(n.li,{children:"Set up a test environment. \xa0"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'These tasks are explained in help topic " Predefined REST services ".'}),"\n",(0,r.jsx)(n.h2,{id:"retrieving-all-the-data-in-a-table",children:"Retrieving all the data in a table"}),"\n",(0,r.jsx)(n.p,{children:"To retrieve all the data in a table:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING\n"})}),"\n",(0,r.jsxs)(n.p,{children:["2.\xa0Select the HTTP verb ",(0,r.jsx)(n.strong,{children:"GET"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"retrieving-only-records-that-contain-a-specific-value",children:"Retrieving only records that contain a specific value"}),"\n",(0,r.jsx)(n.p,{children:"\xa0To retrieve only records that contain a specific value:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>;\n \xa0<column-name>=<value>[;<column-name>=<value>...]\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["2.\xa0Select the HTTP verb ",(0,r.jsx)(n.strong,{children:"GET"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 1"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING;booking_id=1337\n"})}),"\n",(0,r.jsx)(n.p,{children:"Booking IDs are likely to be unique, so the result will be a single record. However, other search conditions of this type could return multiple records."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 2"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/TOUR;destination=AUSTRALIA;tour_type=ISLAND SUNTANNER\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These are conditions on DIFFERENT columns: all results must meet BOTH conditions. The SQL equivalent is (mark the ",(0,r.jsx)(n.strong,{children:"AND"}),"):\xa0"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 *\nFROM \xa0 \xa0 \xa0 tour\nWHERE \xa0 \xa0 \xa0destination = 'AUSTRALIA'\nAND \xa0 \xa0 \xa0 \xa0tour_type = 'ISLAND SUNTANNER'\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 3"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/TOUR;destination=AUSTRALIA;destination=HOLLAND\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These are conditions on IDENTICAL columns; one of the conditions must apply. The SQL equivalent is (mark the ",(0,r.jsx)(n.strong,{children:"OR"}),"):\xa0"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 *\nFROM \xa0 \xa0 \xa0 tour\nWHERE \xa0 \xa0 \xa0destination = 'AUSTRALIA'\nOR \xa0 \xa0 \xa0 \xa0 destination = 'HOLLAND'\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"retrieving-only-records-with-values-higher-lower-or-different-than-a-specific-value",children:"Retrieving only records with values higher, lower or different than a specific value"}),"\n",(0,r.jsx)(n.p,{children:"To retrieve only records with values higher, lower or different than a specific value:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>;<comp-op><column-name>=<value>\n"})}),"\n",(0,r.jsx)(n.p,{children:"where <comp-op> is one of the following comparison operators:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:">"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Greater than"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<"})}),(0,r.jsx)(n.td,{children:"Smaller than"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"!"})}),(0,r.jsx)(n.td,{children:"Not the same as"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"For example, the URL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING;>num_part=2\n"})}),"\n",(0,r.jsx)(n.p,{children:"retrieves bookings for more than 2 participants, and corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 *\nFROM \xa0 \xa0 \xa0 booking\nWHERE \xa0 \xa0 \xa0num_part > 2 \n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["2.\xa0Select the HTTP verb ",(0,r.jsx)(n.strong,{children:"GET"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"retrieving-only-values-that-match-a-pattern",children:"Retrieving only values that match a pattern"}),"\n",(0,r.jsx)(n.p,{children:"To retrieve only values that match a pattern:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type, taking care to use a tilde (~)in front of the column name(s):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>;~<column-name>=<wildcard-value>\n"})}),"\n",(0,r.jsx)(n.p,{children:"where <wildcard-value> is a value containing one or more times an asterisk (*).\xa0"}),"\n",(0,r.jsx)(n.p,{children:"2.\xa0Select the HTTP verb GET."}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/FLIGHT;~flightnumber=IKL*\n"})}),"\n",(0,r.jsx)(n.p,{children:"retrieves all flights with a flight number starting with KL-, such as KL1009 and KL4451."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/TOUR;~destination=*IA\n"})}),"\n",(0,r.jsx)(n.p,{children:"retrieves all tours with destinations ending in -IA, such as AUSTRALIA and INDONESIA."}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"retrieving-only-specific-columns",children:"Retrieving only specific columns"}),"\n",(0,r.jsx)(n.p,{children:"To retrieve only specific columns:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type, using the columns keyword:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>/columns;<column1>[;column2...]\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the result set, each item only appears once. If there are multiple records with the same value(s) in the column(s) you are retrieving, each value appears only once."}),"\n",(0,r.jsx)(n.p,{children:"2.\xa0Select the HTTP verb GET."}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 1"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;booking_id\n"})}),"\n",(0,r.jsx)(n.p,{children:"This corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 booking_id\nFROM \xa0 \xa0 \xa0 booking\nGROUP BY \xa0 booking_id\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 2"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;person_id;booking_id\n"})}),"\n",(0,r.jsx)(n.p,{children:"This corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 person_id, booking_id\nFROM \xa0 \xa0 \xa0 booking\nGROUP BY \xa0 person_id, booking_id\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 3"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING;booking_id=1337/columns;person_id;booking_id\n"})}),"\n",(0,r.jsx)(n.p,{children:"This corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 person_id, booking_id\nFROM \xa0 \xa0 \xa0 booking\nWHERE \xa0 \xa0 \xa0booking_id = 1337\nGROUP BY \xa0 person_id, booking_id\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"where the GROUP BY happens to be ineffective if booking IDs are unique, in which case the WHERE clause retrieves only a single record."}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"sorting-the-result-by-a-specific-column",children:"Sorting the result by a specific column"}),"\n",(0,r.jsx)(n.p,{children:"To sort the result by a specific column:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type, using the columns keyword:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>/columns;<column1>={ASC|DESC}[;*]\n"})}),"\n",(0,r.jsx)(n.p,{children:"where ASC is for ascending sort order, and DESC for descending sort order."}),"\n",(0,r.jsx)(n.p,{children:"Mentioning a column after the columns keyword implies that other, non-mentioned columns are not retrieved. You can counter this behaviour by adding the [;*] option."}),"\n",(0,r.jsx)(n.p,{children:"2.\xa0Select the HTTP verb GET."}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 1"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;person_id=ASC\n"})}),"\n",(0,r.jsx)(n.p,{children:"This corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 person_id\nFROM \xa0 \xa0 \xa0 booking\nGROUP BY \xa0 person_id\nORDER BY \xa0 person_id ASC\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 2"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;person_id=ASC;*\n"})}),"\n",(0,r.jsx)(n.p,{children:"This corresponds to the SQL statement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 *\nFROM \xa0 \xa0 \xa0 booking\nORDER BY \xa0 person_id ASC\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example 3"})}),"\n",(0,r.jsx)(n.p,{children:'The following request URL retrieves the three MOST RECENT bookings. For more information on the chunk keyword, go to the help topic " REST URL Options ".'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;booking_date=DESC;*?chunk=3\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.h2,{id:"renaming-a-column-in-the-output",children:"Renaming a column in the output"}),"\n",(0,r.jsx)(n.p,{children:"\xa0To rename a column in the output:"}),"\n",(0,r.jsx)(n.p,{children:"1.\xa0Compose a URL of the following type, using the columns keyword:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://<host-name>:<port-number>/<service-uri>/<connection-name>/<table-name>/columns;\n \xa0<column-nameA>[=<column-nameB>];\n \xa0[<column-nameA>[=<column-nameB>]; ...]\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"where column-nameA is the name advertised by the service and column-nameB the label displayed in the output."}),"\n",(0,r.jsx)(n.p,{children:"When you rename in this way, you cannot use the [;*] option. Columns you want to display without renaming them must be enumerated."}),"\n",(0,r.jsx)(n.p,{children:"2.\xa0Select the HTTP verb GET."}),"\n",(0,r.jsx)(n.p,{children:"3.\xa0Send the request. In POSTMAN, press the Send button."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"http://localhost:8090/myservice/myconnection/BOOKING/columns;booking_id;start_date=starts;end_date=ends",children:"http://localhost:8090/myservice/myconnection/BOOKING/columns;booking_id;start_date=starts;end_date=ends"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT \xa0 \xa0 booking_id\n, \xa0 \xa0 \xa0 \xa0 \xa0start_date \xa0 \xa0starts\n, \xa0 \xa0 \xa0 \xa0 \xa0end_date \xa0 \xa0 \xa0ends\nFROM \xa0 \xa0 \xa0 booking\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"}),"\n",(0,r.jsx)(n.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);