"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[37165],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var s=t(96540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},31886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowSet","title":"$.udb(ds).rowSet()","description":"----","source":"@site/docs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowSet.md","sourceDirName":"Web_and_app_UIs/UDB_DataSourceContainer","slug":"/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowSet","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowSet","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"USoft11","permalink":"/udocs/tags/u-soft-11"},{"inline":true,"label":"USoft10","permalink":"/udocs/tags/u-soft-10"}],"version":"current","frontMatter":{"id":"udbdsrowSet","tags":["USoft11","USoft10"]},"sidebar":"sidebar","previous":{"title":"$.udb(ds).rows()","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrows"},"next":{"title":"$.udb(ds).searchCols()","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdssearchCols"}}');var r=t(74848),o=t(28453);const a={id:"udbdsrowSet",tags:["USoft11","USoft10"]},d="$.udb(ds).rowSet()",i={},c=[{value:"<strong>$.udb(ds).rowSet()</strong>",id:"udbdsrowset-1",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"udbdsrowset",children:"$.udb(ds).rowSet()"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"USoft 11``{.vs_11}"})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["This article describes the USoft 10 product only.\nIn USoft 11, the web UI API was revised and improved. For full details, go to:\n",(0,r.jsx)(n.a,{href:"/udocs/Web_and_app_UIs/UDB_udb/Revised_web_UI_API_in_USoft_11",children:"Revised web UI API in USoft 11"})]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"USoft 10``{.vs_10}"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This article is about the ",(0,r.jsx)(n.strong,{children:"rowSet()"})," function of the ",(0,r.jsx)(n.a,{href:"/Web_and_app_UIs/UDB_DataSourceContainer",children:"DataSourceContainer object"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"udbdsrowset-1",children:(0,r.jsx)(n.strong,{children:"$.udb(ds).rowSet()"})}),"\n",(0,r.jsx)(n.p,{children:"Gets a row set of the data source for a specified parent key."}),"\n",(0,r.jsxs)(n.p,{children:["Returns a ",(0,r.jsx)(n.a,{href:"/Web_and_app_UIs/UDB_Rowset",children:"Rowset object"}),". If parent-key refers to an existing Rowset object in the data source, then the details of this Rowset are returned in a Rowset object. Otherwise, the return value is undefined."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Syntax"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"$.udb( *ds* ).rowSet( *parent-key* )\n\n*parent-key*  ::=  { current | *key-string* | *key-object* }\n\n*key-object*  ::=  {\n*data-source-id* : {\n*key-column* : *value*,\n        ...\n  },\n  ...\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The optional ",(0,r.jsx)(n.em,{children:"ds"})," is a ",(0,r.jsx)(n.a,{href:"/udocs/Web_and_app_UIs/UDB_DataSourceMetaContainer/UDB_DataSourceMetaContainer_object",children:"data source selector"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The required parent-key must be one of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The literal string 'current'. This refers to the currently active row set of the data source."}),"\n",(0,r.jsxs)(n.li,{children:["Any other ",(0,r.jsx)(n.em,{children:"key-string"})," representing the row set's parent key. This must be an exact match to any Rowset object in the data source object in the data layer."]}),"\n",(0,r.jsxs)(n.li,{children:["An object that is a struct specifying one or more parent keys for at least one data source. This object is transformed to the corresponding ",(0,r.jsx)(n.em,{children:"key-string"})," at runtime."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"For more on keys strings, go to the Rowset help topic. See also the Rowset.keysString() function."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"var rowSet = $.udb('EMP').rowSet('current');\nif (rowSet.exists()) {\n\u2026\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);