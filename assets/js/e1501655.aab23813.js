"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[57721],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}},30361:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/JDBC_example","title":"JDBC example","description":"Step 1: Loading the USoft JDBC driver classes","source":"@site/docs/Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/JDBC_example.md","sourceDirName":"Modeller_and_Rules_Engine/RDBMS_and_data_connectivity","slug":"/Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/JDBC_example","permalink":"/udocs/Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/JDBC_example","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"JDBC_example"},"sidebar":"sidebar","previous":{"title":"JDBC Rules Engine connectivity","permalink":"/udocs/Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/JDBC_Rules_Engine_connectivity"},"next":{"title":"USoft Remote Rules Service API for ODBC","permalink":"/udocs/Modeller_and_Rules_Engine/RDBMS_and_data_connectivity/USoft_Remote_Rules_Service_API_for_ODBC"}}');var i=t(74848),s=t(28453);const c={id:"JDBC_example"},r="JDBC example",l={},a=[{value:"Step 1: Loading the USoft JDBC driver classes",id:"step-1-loading-the-usoft-jdbc-driver-classes",level:2},{value:"Step 2: Opening a connection to the Rules Engin",id:"step-2-opening-a-connection-to-the-rules-engin",level:2},{value:"Step 3: Selecting records",id:"step-3-selecting-records",level:2},{value:"Step 4: Closing the connection",id:"step-4-closing-the-connection",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"jdbc-example",children:"JDBC example"})}),"\n",(0,i.jsx)(n.h2,{id:"step-1-loading-the-usoft-jdbc-driver-classes",children:"Step 1: Loading the USoft JDBC driver classes"}),"\n",(0,i.jsx)(n.p,{children:"This code illustrates how to load the USoft JDBC driver classes within a Java program:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'//Step 1\ntry\n{\n \xa0 \xa0Class.forName("com.usoft.jrec.JrecDriver");\n}\n \xa0 \xa0catch (ClassNotFoundException e)\n{\n \xa0 \xa0System.err.println("USoft JDBC driver not found: " +\n \xa0 \xa0e.getMessage());\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-2-opening-a-connection-to-the-rules-engin",children:"Step 2: Opening a connection to the Rules Engin"}),"\n",(0,i.jsx)(n.p,{children:"The generic syntax of the connection string is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"jdbc:jrec:application@host:port\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Here is an example code fragment that shows how to connect to a Rules Engine for the TRAVEL application:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'String myconnection = "jdbc:jrec:TRAVEL@localhost:7777";\nString user = "SomeUser";\nString password = "SomePassword";\nConnection c = null;\ntry\n{\n \xa0 \xa0c = DriverManager.getConnection(myconnection, user, password);\n \xa0 \xa0c.setAutoCommit(false);\n}\n \xa0 \xa0catch (SQLException e)\n{\n \xa0 \xa0System.err.println("Can\'t establish connection" + e);\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-3-selecting-records",children:"Step 3: Selecting records"}),"\n",(0,i.jsx)(n.p,{children:"After a connection has been established, the various JDBC classes can be deployed to insert, update and retrieve data. This example code fragment retrieves all records from some PERSON table into a JDBC record set. This PERSON table has been defined in a USoft repository."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'ResultSet set = null;\ntry\n{\n \xa0 \xa0String sql = "SELECT * FROM Person";\n \xa0 \xa0stmnt = c.createStatement();\n \xa0 \xa0set = stmnt.executeQuery(sql);\n}\ncatch (SQLException e)\n{\n \xa0 \xa0System.err.println("Failed t execute query: " + e);\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"A generic way to show the contents of this PERSON table is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'//Step 3, continued\nif (set != null)\n{\n \xa0 \xa0int columns = 0;\n \xa0 \xa0try\n \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0ResultSetMetaData meta = set.getMetaData();\n \xa0 \xa0 \xa0 \xa0columns = meta.getColumnCount();\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n \xa0 \xa0 \xa0 \xa0for (int i=1;i<=columns;i++)\n \xa0 \xa0 \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0System.out.print(meta.getColumnLabel(i) + "(" + meta.getColumnTypeName(i) + ")");\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0System.out.print("\\t\\t");\n \xa0 \xa0 \xa0 \xa0}\n \xa0 \xa0 \xa0 \xa0System.out.println();\n \xa0 \xa0}\n \xa0 \xa0catch (SQLException e) {System.err.println(e); }\n \xa0 \xa0 \xa0 \xa0\n \xa0 \xa0try\n \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0while (set.next())\n \xa0 \xa0 \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0for (int i=1;i<=columns;i++)\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0Object obj = set.getObject(i);\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0System.out.print(obj);\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0System.out.print("\\t");\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0}\n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0System.out.println(); \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0}\n \xa0 \xa0}\n \xa0 \xa0catch (SQLException e){ \xa0 \xa0System.err.println(e); }\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-4-closing-the-connection",children:"Step 4: Closing the connection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'If (c != null)\n{\n \xa0 \xa0try\n \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0c.commit();\n \xa0 \xa0 \xa0 \xa0c.close();\n \xa0 \xa0}\n \xa0 \xa0catch (SQLException e)\n \xa0 \xa0{\n \xa0 \xa0 \xa0 \xa0System.err.println("Close connection failed, " + e);\n \xa0 \xa0}\n}\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);