"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[40858],{28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},89531:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Services/Custom_REST_services/Limiting_the_number_of_records_returned_by_a_REST_service","title":"Limiting the number of records returned by a REST service","description":"You can limit the number of records returned by a REST call that returns multiple records. You do this by passing boundary values that define a subset of the records contained in the query result. Only that subset is returned as the REST response. The boundary values are passed as input parameters in the request URL.","source":"@site/docs/Services/Custom_REST_services/Limiting_the_number_of_records_returned_by_a_REST_service.md","sourceDirName":"Services/Custom_REST_services","slug":"/Services/Custom_REST_services/Limiting_the_number_of_records_returned_by_a_REST_service","permalink":"/udocs/Services/Custom_REST_services/Limiting_the_number_of_records_returned_by_a_REST_service","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Limiting_the_number_of_records_returned_by_a_REST_service"},"sidebar":"sidebar","previous":{"title":"Defining custom REST error handling","permalink":"/udocs/Services/Custom_REST_services/Defining_custom_REST_error_handling"},"next":{"title":"Exposing REST services","permalink":"/udocs/Services/Custom_REST_services/Exposing_REST_services"}}');var s=r(74848),i=r(28453);const o={id:"Limiting_the_number_of_records_returned_by_a_REST_service"},a="Limiting the number of records returned by a REST service",h={},c=[{value:"Defining SQL",id:"defining-sql",level:2},{value:"Generating a REST method based on SQL",id:"generating-a-rest-method-based-on-sql",level:2},{value:"Publishing the solution",id:"publishing-the-solution",level:2},{value:"Testing the implementation",id:"testing-the-implementation",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"limiting-the-number-of-records-returned-by-a-rest-service",children:"Limiting the number of records returned by a REST service"})}),"\n",(0,s.jsx)(t.p,{children:"You can limit the number of records returned by a REST call that returns multiple records. You do this by passing boundary values that define a subset of the records contained in the query result. Only that subset is returned as the REST response. The boundary values are passed as input parameters in the request URL."}),"\n",(0,s.jsx)(t.p,{children:"The following step-by-step instructions are for creating a custom REST service that retrieves a limited set of records from a tour catalogue offered by a travel agency."}),"\n",(0,s.jsx)(t.p,{children:"This example also shows how you can quickly generate a REST service from a SQL statement."}),"\n",(0,s.jsx)(t.p,{children:"In this particular example, matrix parameters are used, but you have a number of other options when designing input parameters."}),"\n",(0,s.jsx)(t.h2,{id:"defining-sql",children:"Defining SQL"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0In the User Application, in SQL Command, write and test a SQL statement that will retrieve all available tours, limiting the number of records that the statement returns, for example to the first 10 records:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT \xa0 RECORDS(1, 10) DESTINATION\n, \xa0 \xa0 \xa0 \xa0TOUR_TYPE\n, \xa0 \xa0 \xa0 \xa0NUM_DAYS\n, \xa0 \xa0 \xa0 \xa0DESCRIPTION\nFROM \xa0 \xa0 TOUR\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"On SQL Server you can alternatively use SELECT TOP 10 DESTINATION..., but unlike RECORDS(), TOP is not converted by USoft to other platforms."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0In USoft Services Definer, create a variant of this statement that has variables for the 2 boundary values. These 2 values will be passed at runtime as variable REST input parameters. To do this, choose Define, SQL Statements from the menu, then create a SQL Statement record with the following values:"}),"\n",(0,s.jsx)(t.p,{children:"Statement Name: GET_TOURS"}),"\n",(0,s.jsx)(t.p,{children:"Statement:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT \xa0 RECORDS(:min, :max) DESTINATION\n, \xa0 \xa0 \xa0 \xa0TOUR_TYPE\n, \xa0 \xa0 \xa0 \xa0NUM_DAYS\n, \xa0 \xa0 \xa0 \xa0DESCRIPTION\nFROM \xa0 \xa0 TOUR\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"3.\xa0Save. Click the Check button. See that the Correct flag is set to Yes."}),"\n",(0,s.jsx)(t.h2,{id:"generating-a-rest-method-based-on-sql",children:"Generating a REST method based on SQL"}),"\n",(0,s.jsx)(t.p,{children:'1.\xa0Define a custom REST service and make sure that this new service is exposed by a Server. For details on how to do these 2 things, step out to help topic " Setting up your own REST service ".'}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0On the Methods tab, create a record for the retrieval method:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Method Name = ",(0,s.jsx)(t.strong,{children:"GetTours"})]}),"\n",(0,s.jsxs)(t.li,{children:["Relative URI Path = ",(0,s.jsx)(t.strong,{children:"/Tours"})]}),"\n",(0,s.jsxs)(t.li,{children:["REST HTTP Verb = ",(0,s.jsx)(t.strong,{children:"GET"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'3.\xa0Press the "Generate from SQL" button.The "Generate Method from SQL Statement" appears.'}),"\n",(0,s.jsxs)(t.p,{children:['4.\xa0In the "Return Structure Name" field, enter ',(0,s.jsx)(t.strong,{children:"MyTourStructure"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"5.\xa0On the SQL Statements tab, click in the record for the GET_TOURS SQL statement."}),"\n",(0,s.jsx)(t.p,{children:"The SQL code is now in view in the box on the right. Check that the Correct flag is set to Yes."}),"\n",(0,s.jsx)(t.p,{children:"6.\xa0Press the Generate button."}),"\n",(0,s.jsx)(t.p,{children:"In the REST Services window or tab, values for Signature, Implementation and Parameters are generated.In the Catalog on the left-hand side, a Structure with name MyTourStructure is offered for inspection."}),"\n",(0,s.jsx)(t.p,{children:"7.\xa0The generated return parameter of the REST method is a structure that may only accommodate a single item. In order to return multiple records, you must use arrays of structures that are able to receive a collection of items. The syntax is:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"structure[]\n"})}),"\n",(0,s.jsx)(t.p,{children:"which, for the example, results in the array data type:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"MyTourStructure[]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Change the Implementation of the method so that it reads:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'MyTourStructure[] result = (MyTourStructure[])sql( MyTourStructure[].class, "GET_TOURS" , new Object[]{ min, max } );\n'})}),"\n",(0,s.jsx)(t.p,{children:"Change the Type of the return parameter to :"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"MyTourStructure[]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"publishing-the-solution",children:"Publishing the solution"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0Choose Define, Servers, and retrieve the record of the Server where you expose the service."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0With input focus on this record, choose Publish, Publish and Restart from the menu."}),"\n",(0,s.jsx)(t.h2,{id:"testing-the-implementation",children:"Testing the implementation"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0Open a Google Chrome browser window, search the download site for the \u201cPOSTMAN \u2013 REST Client\u201d Google extension, and download it to your browser."}),"\n",(0,s.jsx)(t.p,{children:"Once installed, this extension can be opened easily from a new Google Chrome browser tab. To do this, click the standard \u201cApps\u201d button on the Favorites bar, then click the POSTMAN item in the middle of the screen."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0Open POSTMAN, and specify the following URL:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"http://host-name:port-number/service-uri/method-uri;variable operator value[; variable operator value...]\n"})}),"\n",(0,s.jsx)(t.p,{children:"making sure the URL does not contain any spaces. For example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"http://localhost:8090/mycustomservice/Tours;min=1;max=3\n"})}),"\n",(0,s.jsx)(t.p,{children:'By default when generating a REST method from a SQL Statement, setting the boundary values is implemented via matrix parameters. See " Designing Input Parameters " for details.'}),"\n",(0,s.jsx)(t.p,{children:"3.\xa0Check that your request is about to use the GET protocol (this is the default, displayed to the right of the URL)."}),"\n",(0,s.jsx)(t.p,{children:"4.\xa0Press the Send button."}),"\n",(0,s.jsx)(t.p,{children:"See that the requested subset of tour records is retrieved and displayed in the lower pane."}),"\n",(0,s.jsx)(t.p,{children:"\xa0"})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);