"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[99113],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const s={},c=i.createContext(s);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(c.Provider,{value:n},e.children)}},75243:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcSetRulesServiceConnection","title":"pc:SetRulesServiceConnection","description":"This article is about the pc:SetRulesServiceConnection Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcSetRulesServiceConnection.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcSetRulesServiceConnection","permalink":"/udocs/Repositories/Blend_directives/pcSetRulesServiceConnection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcSetRulesServiceConnection"},"sidebar":"sidebar","previous":{"title":"pc:SetRulesEngineProperty","permalink":"/udocs/Repositories/Blend_directives/pcSetRulesEngineProperty"},"next":{"title":"pc:SqlStatement","permalink":"/udocs/Repositories/Blend_directives/pcSqlStatement"}}');var s=t(74848),c=t(28453);const r={id:"pcSetRulesServiceConnection"},o="pc",a={},l=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"pc",children:["pc",":SetRulesServiceConnection"]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This article is about the ",(0,s.jsxs)(n.strong,{children:["pc",":SetRulesServiceConnection"]}),(0,s.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"pc-1",children:(0,s.jsxs)(n.strong,{children:["pc",":SetRulesServiceConnection"]})}),"\n",(0,s.jsx)(n.p,{children:"Identifies an existing Rules Service connection by an alias, so that you can address it in subsequent directives."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Syntax"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<pc:SetRulesServiceConnection\n     alias="*alias*"\n     port="*port*"\n     application="*application*"\n     user="*user*"\n     {pwd|password}="*password*" />\n'})}),"\n",(0,s.jsxs)(n.p,{children:["All attributes are required. ",(0,s.jsx)(n.strong,{children:"Alias"})," is a name-literal that acts as a handle by which you can address the connection later, as demonstrated in the Example."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<example xmlns:pc="Processing.Command" pc:hideme="false">\n<pc:assign-string-default\n       port = "9157"\n       application="MYAPP"\n       user = "{$application}"\n       pwd = "{$user}"/>\n<pc:SetRulesServiceConnection alias="xyz" port="{$port}" application="{$application}" user="{$user}" pwd="{$pwd}"/>\n<pc:SqlStatement alias="xyz" >\n     <s>select name, position from p_person</s>   \n</pc:SqlStatement>\n</example>\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xa0"})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);