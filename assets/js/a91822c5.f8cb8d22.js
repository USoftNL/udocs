"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[91902],{28453:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>a});var s=o(96540);const t={},r=s.createContext(t);function i(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),s.createElement(r.Provider,{value:e},n.children)}},68380:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_syntax/SQL_conditions","title":"SQL conditions","description":"This article is about SQL conditions as part of the SQL syntax that USoft supports.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_syntax/SQL_conditions.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_syntax","slug":"/Modeller_and_Rules_Engine/SQL_syntax/SQL_conditions","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/SQL_conditions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"SQL_conditions"},"sidebar":"sidebar","previous":{"title":"Group functions","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Group_functions"},"next":{"title":"Logical operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Logical_operators"}}');var t=o(74848),r=o(28453);const i={id:"SQL_conditions"},a="SQL conditions",c={},d=[{value:"<strong>SQL conditions</strong>",id:"sql-conditions-1",level:2}];function l(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"sql-conditions",children:"SQL conditions"})}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsxs)(e.p,{children:["This article is about ",(0,t.jsx)(e.strong,{children:"SQL conditions"})," as part of the ",(0,t.jsx)(e.a,{href:"/Modeller_and_Rules_Engine/SQL_syntax",children:"SQL syntax"})," that USoft supports."]})}),"\n",(0,t.jsx)(e.h2,{id:"sql-conditions-1",children:(0,t.jsx)(e.strong,{children:"SQL conditions"})}),"\n",(0,t.jsx)(e.p,{children:"SQL conditions are used:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"In WHERE and HAVING clauses in queries and subqueries."}),"\n",(0,t.jsx)(e.li,{children:"In ON clauses in join constructs."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:"Syntax"})}),"\n",(0,t.jsx)(e.p,{children:"USoft supports all industry-standard SQL condition constructs. These syntax options are an integral part of the standard SQL language. There are no USoft extensions in this area."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"*condition-list*       ::=  *condition  logical-connector  condition* ...\n\n*condition*            ::=  {     *operand  comparison-operator  operand*    |\n                           NOT( *operand  comparison-operator  operand* )  }\n\n*operand*              ::=  {  *column-expression* | *literal*  }\n\n*comparison-operator*  ::=  {  *math-operator*  |  *sql-operator*  }\n*math-operator*        ::=  {  =  |  !=  |  >  |  >=  |  <  |  <=  |  <>  }\n*sql-operator*         ::=  {  \n                                { LIKE  |  IN  |  EXISTS  |  BETWEEN } |\n                            NOT { LIKE  |  IN  |  EXISTS  |  BETWEEN } |\n\n                            IS NULL |\n                            IS NOT NULL\n                          }\n\n*logical-connector*    ::=  {  AND  |  OR  }\n"})}),"\n",(0,t.jsx)(e.p,{children:"The syntax of sql-operator constructs is not detailed above. These constructs are all different: LIKE calls for a wildcard pattern and has an optional ESCAPE clause, IN calls for an enumeration, EXISTS for a subquery, and BETWEEN for two column expressions connected by AND, while IS NULL is an operator for comparing a value with the NULL value. See SQL operators for details."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:"Example 1"})}),"\n",(0,t.jsx)(e.p,{children:"This condition matches ARISTO products with an ID not higher than 6000 produced after February 1, 2022:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"      product_name = 'ARISTO'\nAND   product_id   <= 6000\nAND   production_date  >  CHAR_TO_DATE( 'DD-MON-YYYY', '01-FEB-2022' )\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:"Example 2"})}),"\n",(0,t.jsx)(e.p,{children:"This condition matches ARISTO products except all ARISTO products from Australia and except all ARISTO products of type Consumer:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"        product_name = 'ARISTO'\nAND NOT ( country = 'AUSTRALIA' OR type = 'CONSUMER' )\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:"Example 3"})}),"\n",(0,t.jsx)(e.p,{children:"This conditions matches all tours to Brazil that do not have a guide:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"t.destination = 'BRAZIL'\nAND NOT EXISTS (\n    SELECT   ''\n    FROM     person  p\n    WHERE    p.person_id = t.guide_id\n)\n"})}),"\n",(0,t.jsx)(e.p,{children:"\xa0"})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}}}]);