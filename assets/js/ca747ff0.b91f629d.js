"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[51527],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}},65486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>S,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Extensions/USXSL_internal_component/USXSLSetXsl","title":"USXSL.SetXsl","description":"This article is about the SetXsl method of the USXSL internal component.","source":"@site/docs/Extensions/USXSL_internal_component/USXSLSetXsl.md","sourceDirName":"Extensions/USXSL_internal_component","slug":"/Extensions/USXSL_internal_component/USXSLSetXsl","permalink":"/udocs/Extensions/USXSL_internal_component/USXSLSetXsl","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"USXSLSetXsl"},"sidebar":"sidebar","previous":{"title":"USXSL.SetXml","permalink":"/udocs/Extensions/USXSL_internal_component/USXSLSetXml"},"next":{"title":"USXSL.Value","permalink":"/udocs/Extensions/USXSL_internal_component/USXSLValue"}}');var i=t(74848),o=t(28453);const l={id:"USXSLSetXsl"},r="USXSL.SetXsl",a={},c=[{value:"<strong>USXSL.SetXsl</strong>",id:"usxslsetxsl-1",level:2},{value:"Limitations",id:"limitations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"usxslsetxsl",children:"USXSL.SetXsl"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This article is about the ",(0,i.jsx)(n.strong,{children:"SetXsl"})," method of the ",(0,i.jsx)(n.a,{href:"/Extensions/USXSL_internal_component",children:"USXSL internal component"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"usxslsetxsl-1",children:(0,i.jsx)(n.strong,{children:"USXSL.SetXsl"})}),"\n",(0,i.jsxs)(n.p,{children:["Associates an alias with a parsed XSL document that is held in-memory after it is first referred to. In subsequent calls to ",(0,i.jsx)(n.strong,{children:"USXSL.Apply"})," and ",(0,i.jsx)(n.strong,{children:"USXSL.Apply2File"}),", you can refer to the XML document by using the alias."]}),"\n",(0,i.jsx)(n.p,{children:"The point of using this method is that, if you need the same XSL document more than once, referring to its parsed version by alias may improve performance."}),"\n",(0,i.jsx)(n.p,{children:"Returns the alias as a string. If the passed XSL document is invalid, an error is returned."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Syntax"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT   USXSL.SetXsl(\n\xa0\xa0\xa0\xa0*alias,\xa0\xa0\xa0xsl-document*\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["where ",(0,i.jsx)(n.em,{children:"alias"})," and ",(0,i.jsx)(n.em,{children:"xsl-document"})," are required."]}),"\n",(0,i.jsxs)(n.p,{children:["The case-sensitive ",(0,i.jsx)(n.em,{children:"alias"})," acts as a handle for identifying the opened file in subsequent calls to USXSL.Apply or USXSL.Apply2File."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"xsl-document"})," is the input XSL document (stylesheet, transformation). If xsl-document is the empty string, the alias-document mapping is removed from the list."]}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.p,{children:["When running multiple Rules Services, a parsed XSL document mapped to an alias by one Rules Engine cannot automatically be referenced through that alias by a second Rules Engine: each engine needs to perform its own operation. To get around this limitation, use the USXSL.SetGlobalXsl method instead. When a Rules Service runs multiple Rules Engines, you can have the first Rules Engine use ",(0,i.jsx)(n.a,{href:"/udocs/Extensions/USXSL_internal_component/USXSLSetGlobalXsl",children:"USXSL.SetGlobalXsl()"})," to map an alias to an XSL document, and subsequent Rules Engines reference that alias."]})]})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);