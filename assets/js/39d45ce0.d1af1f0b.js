"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[71560],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const o={},t=i.createContext(o);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},49565:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcdefinebooleanflags","title":"pc:define-boolean-flags","description":"This article is about the pc:define-boolean-flags Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcdefinebooleanflags.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcdefinebooleanflags","permalink":"/udocs/Repositories/Blend_directives/pcdefinebooleanflags","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcdefinebooleanflags"},"sidebar":"sidebar","previous":{"title":"pc:default","permalink":"/udocs/Repositories/Blend_directives/pcdefault"},"next":{"title":"pc:defs","permalink":"/udocs/Repositories/Blend_directives/pcdefs"}}');var o=s(74848),t=s(28453);const l={id:"pcdefinebooleanflags"},r="pc",c={},d=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"pc",children:["pc",":define-boolean-flags"]})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["This article is about the ",(0,o.jsxs)(n.strong,{children:["pc",":define-boolean-flags"]}),(0,o.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"pc-1",children:(0,o.jsxs)(n.strong,{children:["pc",":define-boolean-flags"]})}),"\n",(0,o.jsx)(n.p,{children:"Adds items to the list of pairs of strings interpreted as boolean true() and boolean false() by USoft Blend flag-based string-to-boolean conversion. By default, this list is composed of the following 2 pairs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"true     false\nyes      no\n"})}),"\n",(0,o.jsxs)(n.p,{children:["There is no return value. You can get the list of items by calling the booleanflags",":Show","() function."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Syntax"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'<pc:define-boolean-flags>\n*flag*\n     ...\n</pc:define-boolean-flags>\n\n*flag*  ::=  \n\n    <flag> true="*true-string*" false="*false-string*" </flag>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Example"})}),"\n",(0,o.jsx)(n.p,{children:"The result of this Example is that the following strings are (case-insensitively) considered by USoft Blend flag-based string-to-boolean conversion:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"true       false\nyes        no\nAccepted   Declined\nApproved   Rejected\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<pc:define-boolean-flags>\n     <flag true="Accepted" false="Declined"/>\n     <flag true="Approved" false="Rejected"/>\n</pc:define-boolean-flags>\n'})}),"\n",(0,o.jsx)(n.p,{children:"\xa0"})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);