"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[71363],{9978:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Continuous_delivery/Delivery_Manager_background_information/Special_folders","title":"Special folders","description":"Delivery Manager distinguishes a number of folders that have a special purpose. This applies only after you initialise a release tree.","source":"@site/docs/Continuous_delivery/Delivery_Manager_background_information/Special_folders.md","sourceDirName":"Continuous_delivery/Delivery_Manager_background_information","slug":"/Continuous_delivery/Delivery_Manager_background_information/Special_folders","permalink":"/udocs/Continuous_delivery/Delivery_Manager_background_information/Special_folders","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Special_folders"},"sidebar":"sidebar","previous":{"title":"Folder paths and file paths","permalink":"/udocs/Continuous_delivery/Delivery_Manager_background_information/Folder_paths_and_file_paths"},"next":{"title":"Folder management principles","permalink":"/udocs/Continuous_delivery/Delivery_Manager_background_information/Folder_management_principles"}}');var s=o(74848),a=o(28453);const i={id:"Special_folders"},l="Special folders",t={},d=[{value:"Previous release folder",id:"previous-release-folder",level:3},{value:"Release folder",id:"release-folder",level:3},{value:"Root folder",id:"root-folder",level:3}];function c(e){const r={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"special-folders",children:"Special folders"})}),"\n",(0,s.jsx)(r.p,{children:"Delivery Manager distinguishes a number of folders that have a special purpose. This applies only after you initialise a release tree."}),"\n",(0,s.jsx)(r.h3,{id:"previous-release-folder",children:"Previous release folder"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"previous release folder"})," is the folder where deliverables of the most recent release prior to the current release were written to. As long as you only have 1 release (the ",(0,s.jsx)(r.em,{children:"initial"})," release), it is the folder where deliverables of the current release are being written to, ie., it equals the ",(0,s.jsx)(r.em,{children:"release folder"})," (see next section)."]}),"\n",(0,s.jsxs)(r.p,{children:['When inputting values of Task Step Parameters of types "File or folder" and "SQL Command", you can refer to the previous release folder by using the ',(0,s.jsx)(r.code,{children:"${previous}"})," predefined source variable once you have initialised a release tree."]}),"\n",(0,s.jsxs)(r.p,{children:["You can view the previous release folder by choosing Define, Source Variables, Predefined, and viewing the value of ",(0,s.jsx)(r.code,{children:"${previous}"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"The previous release folder changes each time you create a new release. It also changes when you revert to the previous release."}),"\n",(0,s.jsx)(r.h3,{id:"release-folder",children:"Release folder"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"release folder"})," is the folder where deliverables are currently written to."]}),"\n",(0,s.jsxs)(r.p,{children:['When inputting values of Task Step Parameters of types "File or folder" and "SQL Command", you can refer to the release folder by using the ',(0,s.jsx)(r.code,{children:"${release}"})," predefined source variable once you have initialised a release tree."]}),"\n",(0,s.jsxs)(r.p,{children:["You can view the release folder by choosing Release, Current Release from the menu. You can also choose Define, Source Variables, Predefined, and view the value of ",(0,s.jsx)(r.code,{children:"${release}"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"The previous release folder changes each time you create a new release. It also changes when you revert to the previous release."}),"\n",(0,s.jsx)(r.h3,{id:"root-folder",children:"Root folder"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"root folder"})," is the parent folder where deliverables of the current release and all the past releases are found. The root folder identifies the release tree. \xa0"]}),"\n",(0,s.jsxs)(r.p,{children:['When inputting values of Task Step Parameters of types "File or folder" and "SQL Command", you can refer to the root folder by using the ',(0,s.jsx)(r.code,{children:"${root}"})," predefined source variable once you have initialised a release tree."]}),"\n",(0,s.jsxs)(r.p,{children:["You can view the root folder by choosing Release, Current Release from the menu. You can also choose Define, Source Variables, Predefined, and view the value of ",(0,s.jsx)(r.code,{children:"${root}"}),"."]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>l});var n=o(96540);const s={},a=n.createContext(s);function i(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);