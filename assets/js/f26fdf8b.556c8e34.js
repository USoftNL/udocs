"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[82139],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(96540);const i={},l=t.createContext(i);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:n},e.children)}},60889:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>x,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Repositories/Blend_functions/xslutiljson2xml","title":"xslutil:json2xml","description":"This article is about the xslutil:json2xml Blend function.","source":"@site/docs/Repositories/Blend_functions/xslutiljson2xml.md","sourceDirName":"Repositories/Blend_functions","slug":"/Repositories/Blend_functions/xslutiljson2xml","permalink":"/udocs/Repositories/Blend_functions/xslutiljson2xml","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"xslutiljson2xml"},"sidebar":"sidebar","previous":{"title":"xslutil:applyTemplate","permalink":"/udocs/Repositories/Blend_functions/xslutilapplyTemplate"},"next":{"title":"xslutil:nodeset","permalink":"/udocs/Repositories/Blend_functions/xslutilnodeset"}}');var i=s(74848),l=s(28453);const o={id:"xslutiljson2xml"},r="xslutil",c={},d=[{value:"<strong>xslutil</strong>",id:"xslutil-1",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"xslutil",children:["xslutil",":json2xml"]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This article is about the ",(0,i.jsxs)(n.strong,{children:["xslutil",":json2xml"]}),(0,i.jsx)(n.a,{href:"/Repositories/Blend_functions",children:" Blend function"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"xslutil-1",children:(0,i.jsxs)(n.strong,{children:["xslutil",":json2xml"]})}),"\n",(0,i.jsx)(n.p,{children:"Converts a JSON fragment to an equivalent XML fragment."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Syntax"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Namespace declaration"})}),"\n",(0,i.jsx)(n.p,{children:"You need to declare this namespace only if you call the function directly from the USCSXSL component but outside Blend. In a Blend context (ublendit.exe, uscsxsl.blend()) the namespace is already declared in the Blend transformation, which is in xsl\\Util\\Batch.1.0.xsl in your USoft installation folder."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'xmlns:xslutil="USoft:XslUtil"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Function call"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"xslutil:json2xml( *json* )\n\n*json*   ::=  { *filepath* | *xpath* }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Pass the required ",(0,i.jsx)(n.em,{children:"json"})," input code:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["As a ",(0,i.jsx)(n.em,{children:"filepath"})," if you want the JSON input to be read from the file pointed at. ",(0,i.jsx)(n.strong,{children:"See Example 1."})]}),"\n",(0,i.jsxs)(n.li,{children:["As an ",(0,i.jsx)(n.em,{children:"xpath"})," expression if\xa0 you want to pass the JSON input inline (that is, inside the Blend script). ",(0,i.jsx)(n.strong,{children:"See Example 2."})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["To convert JSON to XML, prefer the ",(0,i.jsxs)(n.a,{href:"/udocs/Repositories/Blend_directives/pcassignnodesetfromjson",children:["pc",":assign-nodeset-from-json"]})," directive, which stores the XML result in a nodeset variable for further processing."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example 1"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'<example xmlns:pc="Processing.Command">\n\t<pc:assign-string jsonstring = "{path:Combine(\'c:\\usoft\\blend\\JSON\', \'app.config.json\')}"/>\n\t<pc:assign-nodeset xmlresult = "{xslutil:json2xml($jsonstring)}" />\n\t<pc:copy-of select="$xmlresult"/>\n</example>\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example 2"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'<example xmlns:pc="Processing.Command">\n\t<pc:assign-string jsonstring = "{.}">{"myname":"Lakshmi"}</pc:assign-string>\n\t<pc:assign-nodeset xmlresult = "{xslutil:json2xml($jsonstring)}" />\n\t<pc:copy-of select="$xmlresult"/>\n</example>\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);