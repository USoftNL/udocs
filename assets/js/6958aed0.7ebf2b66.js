"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[75589],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(96540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},49107:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_functions/RECORDS","title":"RECORDS","description":"This article has additional information about the RECORDS SQL function.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_functions/RECORDS.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_functions","slug":"/Modeller_and_Rules_Engine/SQL_functions/RECORDS","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/RECORDS","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"RECORDS"},"sidebar":"sidebar","previous":{"title":"OLD","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/OLD"},"next":{"title":"ROLE","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/ROLE"}}');var t=s(74848),o=s(28453);const i={id:"RECORDS"},a="RECORDS",l={},d=[{value:"<strong>RECORDS</strong>",id:"records-1",level:2},{value:"Notes",id:"notes",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"records",children:"RECORDS"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This article has additional information about the ",(0,t.jsx)(n.strong,{children:"RECORDS"})," SQL function.\nFor convertibility of this function, go to ",(0,t.jsx)(n.a,{href:"/udocs/Modeller_and_Rules_Engine/SQL_functions/SQL_functions_NR",children:"SQL functions\xa0 N - R"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"records-1",children:(0,t.jsx)(n.strong,{children:"RECORDS"})}),"\n",(0,t.jsx)(n.p,{children:"Limits the number of records returned in the result set."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"RECORDS( *lower-boundary*, *upper-boundary* ) *select-output-list*\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Lower-boundary"})," and ",(0,t.jsx)(n.em,{children:"upper-boundary"})," are both required and must both evaluate to a positive integer. ",(0,t.jsx)(n.em,{children:"Upper-boundary"})," must be higher than ",(0,t.jsx)(n.em,{children:"lower-boundary"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"If RECORDS is combined with ORDER BY, first the entire result set is built as specified by ORDER BY. Then, a subset of that ordered list is returned as specified by RECORDS."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Example 1"})}),"\n",(0,t.jsx)(n.p,{children:"This example returns a set of 20 records from the employee table."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     RECORDS( 1, 20 ) *\nFROM       employee\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Example 2a"})}),"\n",(0,t.jsx)(n.p,{children:"This example returns records 3, 4 and 5 from the person table after records have been sorted by family name:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     RECORDS( 3, 5 ) *\nFROM       person\nORDER BY   family_name\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Example 2b"})}),"\n",(0,t.jsx)(n.p,{children:"This example shows that arguments of RECORDS may alternatively be passed as host variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"action ResourceFileUpdate( *min: 3 )\naction ResourceFileUpdate( *max: 5 )\n\nSELECT     RECORDS( :min, :max ) *\nFROM       person\nORDER BY   family_name\n"})}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsx)(n.p,{children:"RECORDS is a convertible function resolved by USoft and thus supported on all RDBMS platforms."}),"\n",(0,t.jsx)(n.p,{children:"On SQL Server, you can alternatively use the TOP operator to obtain a specified number of records from the beginning of the result set, for example, the first 4 records:\xa0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     TOP 4 *\nFROM       person\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can alternatively pass the argument to TOP as a host variable:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"action ResourceFileUpdate( *top: 4 )\n\nSELECT     TOP :top *\nFROM       person\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"The TOP operator is not converted by USoft on platforms other than SQL Server."})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);