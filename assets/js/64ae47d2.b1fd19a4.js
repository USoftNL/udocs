"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[39658],{21133:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>o,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Repositories/Blend_directives/pcswitch","title":"pc:switch","description":"This article is about the pc:switch Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcswitch.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcswitch","permalink":"/udocs/Repositories/Blend_directives/pcswitch","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcswitch"},"sidebar":"sidebar","previous":{"title":"pc:Succeeded","permalink":"/udocs/Repositories/Blend_directives/pcSucceeded"},"next":{"title":"pc:tab","permalink":"/udocs/Repositories/Blend_directives/pctab"}}');var c=s(74848),i=s(28453);const r={id:"pcswitch"},d="pc",h={},a=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsxs)(t.h1,{id:"pc",children:["pc",":switch"]})}),"\n",(0,c.jsx)(t.admonition,{type:"note",children:(0,c.jsxs)(t.p,{children:["This article is about the ",(0,c.jsxs)(t.strong,{children:["pc",":switch"]}),(0,c.jsx)(t.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,c.jsx)(t.h2,{id:"pc-1",children:(0,c.jsxs)(t.strong,{children:["pc",":switch"]})}),"\n",(0,c.jsx)(t.p,{children:"Executes different actions depending on the value of a variable."}),"\n",(0,c.jsx)(t.p,{children:"Returns a text string or an XML fragment."}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.em,{children:"Syntax"})}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'<pc:switch select="*variable-reference*">\n   [     <pc:case value="*xpath*"> *content* </pc:case>\n         ...   ]\n         <pc:default> *content* </pc:default>\n</pc:switch>\n'})}),"\n",(0,c.jsxs)(t.p,{children:["The required ",(0,c.jsx)(t.strong,{children:"select"})," attribute could be any XPath expression, but is typically a variable reference to the variable that you want to test the value of."]}),"\n",(0,c.jsxs)(t.p,{children:["Each of the pc",":case"," child elements has a required ",(0,c.jsx)(t.strong,{children:"value"})," attribute. If the value of pc",":switch","'s ",(0,c.jsx)(t.strong,{children:"select"})," attribute matches the value of this attribute, then the child element's ",(0,c.jsx)(t.em,{children:"content"})," is executed. If there are multiple matches, they are all executed, in the document order in which the matching pc",":case"," elements appear."]}),"\n",(0,c.jsxs)(t.p,{children:["If the optional pc",":default"," element is present, its ",(0,c.jsx)(t.em,{children:"content"})," is executed if none of the pc",":each"," elements has a matching value. This happens regardless of whether pc",":case"," elements occur before or after the pc",":default"," element, or both."]}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.em,{children:"Example"})}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-xml",children:'<example xmlns:pc="Processing.Command">\n       <pc:switch select="$x">\n             <pc:case value="john">the name is John</pc:case>\n             <pc:case value="mary"><pc:value-of select="strings:TitleCase($x)"/></pc:case>\n             <pc:case value="mary"> is the name</pc:case>\n             <pc:default><pc:value-of select="$x"/> was not matched</pc:default>\n             <pc:case value="{$y}"> x matches y </pc:case>\n       </pc:switch>\n</example>\n'})}),"\n",(0,c.jsx)(t.p,{children:"The outcome is as follows:"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:(0,c.jsx)(t.strong,{children:"Value of $x"})}),(0,c.jsx)(t.th,{children:(0,c.jsx)(t.strong,{children:"Value of $y"})}),(0,c.jsx)(t.th,{children:(0,c.jsx)(t.strong,{children:"Outcome"})})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"(empty, not supplied)"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"was not matched"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"john"}),(0,c.jsx)(t.td,{children:"mary"}),(0,c.jsx)(t.td,{children:"the name is John"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"mary"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"Mary is the name"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"kajsa"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"kajsa was not matched"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"john"}),(0,c.jsx)(t.td,{children:"john"}),(0,c.jsx)(t.td,{children:"the name is John x matches y"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"johnn"}),(0,c.jsx)(t.td,{}),(0,c.jsx)(t.td,{children:"johnn was not matched"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"johnn"}),(0,c.jsx)(t.td,{children:"johnn"}),(0,c.jsx)(t.td,{children:"x matches y"})]})]})]}),"\n",(0,c.jsx)(t.p,{children:"\xa0"})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>d});var n=s(96540);const c={},i=n.createContext(c);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);