"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[40003],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(96540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}},58309:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Extensions/RDMI_Components/Component_for_exporting_a_data_set_to_a_CSV_file","title":"Component for exporting a data set to a CSV file","description":"The following step-by-step instructions are for creating a .NET component that exports a set of data to a CSV file. This is an example of how to create and use the aggregate protocol.","source":"@site/docs/Extensions/RDMI_Components/Component_for_exporting_a_data_set_to_a_CSV_file.md","sourceDirName":"Extensions/RDMI_Components","slug":"/Extensions/RDMI_Components/Component_for_exporting_a_data_set_to_a_CSV_file","permalink":"/udocs/Extensions/RDMI_Components/Component_for_exporting_a_data_set_to_a_CSV_file","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Component_for_exporting_a_data_set_to_a_CSV_file"},"sidebar":"sidebar","previous":{"title":"Aggregate protocol","permalink":"/udocs/Extensions/RDMI_Components/Aggregate_protocol"},"next":{"title":"Calling a component","permalink":"/udocs/Extensions/RDMI_Components/Calling_a_component"}}');var i=t(74848),r=t(28453);const s={id:"Component_for_exporting_a_data_set_to_a_CSV_file"},a="Component for exporting a data set to a CSV file",l={},c=[{value:"Creating a .NET component for exporting records to a CSV file",id:"creating-a-net-component-for-exporting-records-to-a-csv-file",level:3},{value:"Defining an aggregate protocol for the component",id:"defining-an-aggregate-protocol-for-the-component",level:3},{value:"Testing the solution",id:"testing-the-solution",level:3}];function p(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"component-for-exporting-a-data-set-to-a-csv-file",children:"Component for exporting a data set to a CSV file"})}),"\n",(0,i.jsx)(n.p,{children:"The following step-by-step instructions are for creating a .NET component that exports a set of data to a CSV file. This is an example of how to create and use the aggregate protocol."}),"\n",(0,i.jsx)(n.p,{children:"For simplicity, the .NET code assumes that data received does not contain a comma."}),"\n",(0,i.jsx)(n.p,{children:"The component expects data from the following columns of the SCHEDTOUR table: SCHEDTOUR_ID, DESTINATION, TOUR_TYPE, START_DATE, RETURN_DATE, PRICE."}),"\n",(0,i.jsx)(n.h3,{id:"creating-a-net-component-for-exporting-records-to-a-csv-file",children:"Creating a .NET component for exporting records to a CSV file"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0Choose Define, RDMI, dotNet Components from the USoft Definer menu. The DotNetComponents window opens."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Provide a Name for your new component, in this case: CSV."}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0In the Program Source field, provide the source code of the component:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-language-cs",children:'using System;\nusing System.Text;\nusing System.IO;\n\nclass CSV\n{\n   string csvFileName = null;\n   StringBuilder csv = new StringBuilder();\n\n   public long fileExportExe(Nullable<Int32> id, string destination, string tourType, Nullable<DateTime> startDate, Nullable<DateTime> returnDate, Nullable<Int32> price, string filename)\n   {\n      csvFileName = filename;\n      string newLine = string.Format("{0},{1},{2},{3},{4},{5}", id, destination, tourType, startDate, returnDate, price);\n      csv.AppendLine(newLine);\n      return 1;\n   }\n\n   public long fileExportFetch(out string filename)\n   {\n      filename = csvFileName;\n      File.WriteAllText(filename, csv.ToString());\n      csv.Clear();\n      return 1;\n   }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"4.\xa0Press Commit. USoft compiles this code."}),"\n",(0,i.jsx)(n.p,{children:"5.\xa0Press the Check button. The RDMI interface is generated by USoft."}),"\n",(0,i.jsx)(n.h3,{id:"defining-an-aggregate-protocol-for-the-component",children:"Defining an aggregate protocol for the component"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0In the DotNet Components window, click the Aggregate Protocol Associations tab page."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Fill out the following fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Protocol = EXPORT"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Execute Method = FILEEXPORTEXE"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Fetch Method = FILEEXPORTFETCH"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0Save/commit."}),"\n",(0,i.jsx)(n.h3,{id:"testing-the-solution",children:"Testing the solution"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0Open your client/server application."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0In Sql Command, execute:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"INVOKE    csv.export WITH\nSELECT    schedtour_id\n,         destination\n,         tour_type\n,         start_date\n,         return_date\n,         price\n,         'C:\\Temp\\schedtour.csv'\nFROM      schedtour\n"})}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0See that a file has been created in location:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"C:\\Temp\\schedtour.csv\n"})}),"\n",(0,i.jsx)(n.p,{children:"4.\xa0Open the file in an text editor. See that it contains the input data in a comma-separated-values format."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);