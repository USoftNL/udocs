"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[35193],{25632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Repositories/Blend_functions/pathGetFileName","title":"path:GetFileName","description":"This article is about the path:GetFileName Blend function.","source":"@site/docs/Repositories/Blend_functions/pathGetFileName.md","sourceDirName":"Repositories/Blend_functions","slug":"/Repositories/Blend_functions/pathGetFileName","permalink":"/udocs/Repositories/Blend_functions/pathGetFileName","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pathGetFileName"},"sidebar":"sidebar","previous":{"title":"path:Combine","permalink":"/udocs/Repositories/Blend_functions/pathCombine"},"next":{"title":"path:GetFullPath","permalink":"/udocs/Repositories/Blend_functions/pathGetFullPath"}}');var s=t(74848),a=t(28453);const o={id:"pathGetFileName"},l="path",r={},c=[{value:"<strong>path</strong>",id:"path-1",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"path",children:["path",":GetFileName"]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This article is about the ",(0,s.jsxs)(n.strong,{children:["path",":GetFileName"]}),(0,s.jsx)(n.a,{href:"/Repositories/Blend_functions",children:" Blend function"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"path-1",children:(0,s.jsxs)(n.strong,{children:["path",":GetFileName"]})}),"\n",(0,s.jsx)(n.p,{children:"Strips the path fragment in a full file path and returns only the file name found at the end."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Syntax"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Namespace declaration"})}),"\n",(0,s.jsx)(n.p,{children:"You need to declare this namespace only if you call the function directly from the USCSXSL component but outside Blend. In a Blend context (ublendit.exe, uscsxsl.blend()) the namespace is already declared in the Blend transformation, which is in xsl\\Util\\Batch.1.0.xsl in your USoft installation folder."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'xmlns:path="USoft:Path"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Function call"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"path:GetFileName( *path* )\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The required ",(0,s.jsx)(n.em,{children:"path"})," is a path expression identifying the path that you want to extract the file name from."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"For a full list of Blend functions in the area of path manipulation, use this command line:"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"> usoft-install-dir\\bin64\\ublendit.exe functions ns=path"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example"})}),"\n",(0,s.jsx)(n.p,{children:"This example reports what is the file name found at the end of the path:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<pc:assign-string fullpath="C:\\Users\\P3100014\\Downloads\\Export - 2021-12-23T170520.171.xml"/>\n<pc:ConsoleWrite>\n  The file name is:\n  <pc:value-of select="path:GetFileName($fullpath)"/>\n</pc:ConsoleWrite>\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xa0"})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(96540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);