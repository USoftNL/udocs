"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[13660],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},66368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcvoid","title":"pc:void","description":"This article is about the pc:void Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcvoid.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcvoid","permalink":"/udocs/Repositories/Blend_directives/pcvoid","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcvoid"},"sidebar":"sidebar","previous":{"title":"pc:value-of","permalink":"/udocs/Repositories/Blend_directives/pcvalueof"},"next":{"title":"pc:WinCommand","permalink":"/udocs/Repositories/Blend_directives/pcWinCommand"}}');var s=n(74848),o=n(28453);const r={id:"pcvoid"},c="pc",d={},a=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"pc",children:["pc",":void"]})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This article is about the ",(0,s.jsxs)(t.strong,{children:["pc",":void"]}),(0,s.jsx)(t.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"pc-1",children:(0,s.jsxs)(t.strong,{children:["pc",":void"]})}),"\n",(0,s.jsxs)(t.p,{children:["Nullifies the result value returned by the execution of a script section or the resolution of an attribute.\npc",":void"," is the counterpart of pc",":evaluate",", which does return the result value."]}),"\n",(0,s.jsxs)(t.p,{children:["The content of pc",":void"," is executed without result value. The content of pc",":defs"," is not executed at all."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"Syntax"}),"\n\xa0"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'<pc:void *attribute*="*value*" ... >\n\n*content*\n\n</pc:void>\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can use pc",":void"," if you are interested in having an attribute resolved (as in the Example) but you are not interested in the return value."]}),"\n",(0,s.jsxs)(t.p,{children:["You can use pc",":void"," to surround a directive or an entire script section (a set of directives) that you want to suppress the result value of."]}),"\n",(0,s.jsxs)(t.p,{children:["Often, you do not need to write pc",":void"," explicitly. It is standard behaviour in USoft Blend that the return value of pc",":copy-of"," is automatically suppressed if the script returns (also) other output."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Example"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'<pc:assign-string mystring="HelloUniverse"/>\n<pc:defs><somexml>Hi</somexml></pc:defs>\n<pc:assign-nodeset mydefs="{preceding-sibling::pc:defs/*}"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', 2)"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', 1)"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', \'somestring\')"/>\n<pc:GetVariables/>\n'})}),"\n",(0,s.jsx)(t.p,{children:"\xa0"})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);