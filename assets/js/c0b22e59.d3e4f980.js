"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[44055],{13809:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Repositories/USoft_JSON_format/JSON_representation_of_date_values","title":"JSON representation of date values","description":"In general, the ISO 8601 standard is used for representing date values within JSON documents. A description of the ISO 8601 standard for dates can be found at:","source":"@site/docs/Repositories/USoft_JSON_format/JSON_representation_of_date_values.md","sourceDirName":"Repositories/USoft_JSON_format","slug":"/Repositories/USoft_JSON_format/JSON_representation_of_date_values","permalink":"/udocs/Repositories/USoft_JSON_format/JSON_representation_of_date_values","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"JSON_representation_of_date_values"},"sidebar":"sidebar","previous":{"title":"USoft JSON format","permalink":"/udocs/Repositories/USoft_JSON_format/"},"next":{"title":"Meta-instruction properties in JSON","permalink":"/udocs/Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON"}}');var s=n(74848),i=n(28453);const o={id:"JSON_representation_of_date_values"},d="JSON representation of date values",a={},c=[{value:"JSON Export IO Format",id:"json-export-io-format",level:2},{value:"JSON Import IO Formats",id:"json-import-io-formats",level:2},{value:"Unsupported date formats",id:"unsupported-date-formats",level:2},{value:"Midnight time",id:"midnight-time",level:2},{value:"Period of time",id:"period-of-time",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"json-representation-of-date-values",children:"JSON representation of date values"})}),"\n",(0,s.jsx)(t.p,{children:"In general, the ISO 8601 standard is used for representing date values within JSON documents. A description of the ISO 8601 standard for dates can be found at:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://www.iso.ch/",children:"http://www.iso.ch/"})}),"\n",(0,s.jsx)(t.p,{children:"In the area of exporting and importing JSON documents, USoft supports the following date formats."}),"\n",(0,s.jsx)(t.h2,{id:"json-export-io-format",children:"JSON Export IO Format"}),"\n",(0,s.jsx)(t.p,{children:"When exporting date values to an XML document, this IO format is produced:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"CCYY-MM-DDThh:mm:ss\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Example"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"2008-11-23T20:05:30\n"})}),"\n",(0,s.jsx)(t.h2,{id:"json-import-io-formats",children:"JSON Import IO Formats\xa0"}),"\n",(0,s.jsxs)(t.p,{children:["When importing a JSON document, the ",(0,s.jsx)(t.a,{href:"/udocs/Repositories/USoft_XML_formats/XML_representation_of_date_values",children:"same date value IO formats are recognised as for XML imports"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"unsupported-date-formats",children:"Unsupported date formats"}),"\n",(0,s.jsx)(t.p,{children:"The following data value IO formats are not supported:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Format"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Example"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Description"})})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"hh,h"}),(0,s.jsx)(t.td,{children:"23,3"}),(0,s.jsx)(t.td,{children:"A specific hour of the day and decimal fraction of the hour"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"-mm,m"}),(0,s.jsx)(t.td,{children:"-20,9"}),(0,s.jsx)(t.td,{children:"A specific minute of the hour and a decimal fraction of the minute"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"-mmss,s"}),(0,s.jsx)(t.td,{children:"-2050,5"}),(0,s.jsx)(t.td,{children:"A specific minute and second of the hour and a decimal fraction of the second"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["-mm",":ss",".s"]}),(0,s.jsx)(t.td,{children:"-20:50,5"}),(0,s.jsx)(t.td,{children:"Extended format"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"--ss,s"}),(0,s.jsx)(t.td,{children:"--50,5"}),(0,s.jsx)(t.td,{children:"A specific second of the minute and a decimal fraction of the second"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"HhmmssZ"}),(0,s.jsx)(t.td,{children:"232030Z"}),(0,s.jsx)(t.td,{children:"Time with Coordinated Universal Time (UTC)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"23:20:30Z"}),(0,s.jsx)(t.td,{children:"Extended format"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"HhmmZ"}),(0,s.jsx)(t.td,{children:"2320Z"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["hh",":mmZ"]}),(0,s.jsx)(t.td,{children:"23:20Z"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"HhZ"}),(0,s.jsx)(t.td,{children:"23Z"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"midnight-time",children:"Midnight time"}),"\n",(0,s.jsx)(t.p,{children:"There are two representations of midnight time:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"00:00:00 000000\n\n24:00:00 240000\n"})}),"\n",(0,s.jsx)(t.p,{children:"The Rules Engine only supports '00:00:00' when exporting and importing JSON documents."}),"\n",(0,s.jsx)(t.h2,{id:"period-of-time",children:"Period of time"}),"\n",(0,s.jsx)(t.p,{children:"Period of time is a duration with a start time and an end time. The Rules Engine does not support the period of time IO format."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var r=n(96540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);