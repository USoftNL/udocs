"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[97633],{28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>l});var n=t(96540);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}},59658:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Repositories/Blend_attributes/assignvariable","title":"assign:variable","description":"This article is about the assign:variable Blend attribute.","source":"@site/docs/Repositories/Blend_attributes/assignvariable.md","sourceDirName":"Repositories/Blend_attributes","slug":"/Repositories/Blend_attributes/assignvariable","permalink":"/udocs/Repositories/Blend_attributes/assignvariable","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"assignvariable"},"sidebar":"sidebar","previous":{"title":"Blend attributes","permalink":"/udocs/Repositories/Blend_attributes/"},"next":{"title":"pc:hideme","permalink":"/udocs/Repositories/Blend_attributes/pchideme"}}');var i=t(74848),r=t(28453);const a={id:"assignvariable"},l="assign",o={},c=[{value:"<strong>assign</strong>",id:"assign-1",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsxs)(s.h1,{id:"assign",children:["assign",":variable"]})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["This article is about the ",(0,i.jsxs)(s.strong,{children:["assign",":variable"]}),(0,i.jsx)(s.a,{href:"/Repositories/Blend_attributes",children:" Blend attribute"}),"."]})}),"\n",(0,i.jsx)(s.h2,{id:"assign-1",children:(0,i.jsxs)(s.strong,{children:["assign",":variable"]})}),"\n",(0,i.jsx)(s.p,{children:"Evaluates an XPath expression and stores it in (= assigns it to) a named variable. The variable is global: from any later script section, you can refer to its value by writing $variable. If a variable by the same name is already in use, the value it currently holds is silently overwritten."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Syntax"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'<pc:*directive*\n   assign:*variable* = "*expr*" />\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The required ",(0,i.jsx)(s.em,{children:"variable"})," identifies the variable by name and the required expr is the value you provide for the variable. Expr may be submitted either as a literal or as an XPath expression presented as an attribute value template, ie., surrounded by curly braces (\xa0","\xa0)."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Example"})}),"\n",(0,i.jsx)(s.p,{children:'This example executes a script ( ... ) for each of the "computer" elements found.'}),"\n",(0,i.jsxs)(s.p,{children:['In each interation, the "name" attribute of "computer" is assigned to a variable called "result". This variable value may be referred to as ',(0,i.jsx)(s.strong,{children:"$result"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<pc:each\n   select="env/computers/computer"\n   assign:result="@name"\n\n   ...\n\n/>\n'})}),"\n",(0,i.jsx)(s.p,{children:"\xa0"})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);