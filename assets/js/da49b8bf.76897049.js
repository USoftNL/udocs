"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[49625],{7080:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Extensions/XML_internal_component/XMLSQLExport","title":"XML.SQLExport","description":"This article is about the SQLExport method of the XML internal component.","source":"@site/docs/Extensions/XML_internal_component/XMLSQLExport.md","sourceDirName":"Extensions/XML_internal_component","slug":"/Extensions/XML_internal_component/XMLSQLExport","permalink":"/udocs/Extensions/XML_internal_component/XMLSQLExport","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"XMLSQLExport"},"sidebar":"sidebar","previous":{"title":"XML.SQL2XML","permalink":"/udocs/Extensions/XML_internal_component/XMLSQL2XML"},"next":{"title":"XML.SQLStatementExport","permalink":"/udocs/Extensions/XML_internal_component/XMLSQLStatementExport"}}');var r=n(74848),i=n(28453);const o={id:"XMLSQLExport"},a="XML.SQLExport",l={},d=[{value:"<strong>XML.SQLExport</strong>",id:"xmlsqlexport-1",level:2},{value:"Parameters",id:"parameters",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"xmlsqlexport",children:"XML.SQLExport"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["This article is about the ",(0,r.jsx)(t.strong,{children:"SQLExport"})," method of the ",(0,r.jsx)(t.a,{href:"/Extensions/XML_internal_component",children:"XML internal component"}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"xmlsqlexport-1",children:(0,r.jsx)(t.strong,{children:"XML.SQLExport"})}),"\n",(0,r.jsxs)(t.p,{children:["Exports data to the ",(0,r.jsx)(t.a,{href:"/udocs/Repositories/USoft_XML_formats/MetaRowsFields_document_format",children:"Meta-Rows-Fields document format"})," on the basis of a SELECT statement."]}),"\n",(0,r.jsxs)(t.p,{children:["This export method has the drawback that the result is NOT re-importable with ",(0,r.jsx)(t.strong,{children:"XML.Import"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"This export method has the advantage that it can deal with compound column expressions provided they are aliased. Also, the result contains metadata information. In summary, the result contains data but also information about how this data was queried."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Syntax"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INVOKE      XML.SQLExport WITH\nSELECT      value    parameter-name\n,           ...\n,           expression   alias\n,           ...\nFROM        ...\nWHERE       ...\nGROUP BY    ...\nORDER BY    \u2026\n"})}),"\n",(0,r.jsx)(t.p,{children:"In the SELECT output list, value\xa0 parameter-name pairs and expressions may appear in any order. For possible parameter-names see the Parameters section later in this help topic."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Example 1"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INVOKE    XML.SQLExport WITH\nSELECT    'yes' UseIOFormats\n,         *\nFROM      tour\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Example 2"})}),"\n",(0,r.jsx)(t.p,{children:"The result of this call:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INVOKE      xml.sqlexport with\nSELECT      concat( concat( t.destination, ' ' ), t.tour_type ) tour_label\n,           tp.num_days\nFROM        tour_programme tp\n,           tour t\nRELATE      tp \"IS FOLLOWED BY\" t\nWHERE       t.destination = 'AUSTRALIA'\nGROUP BY    t.destination, t.tour_type, tp.num_days\n"})}),"\n",(0,r.jsx)(t.p,{children:"is this Meta-Rows-Fields document:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:'<SQLXMLExport>\n  <Meta>\n    <OutputExpressions>\n      <Expression alias="tour_label">CONCAT(CONCAT(t.DESTINATION, \'; \';), t.TOUR_TYPE)</Expression>\n      <Column tableName="TOUR_PROGRAMME" tableAlias="tp" name="NUM_DAYS" alias="NUM_DAYS" objectNamePlural="Tour Programmes" prompt="Number of Days"/>\n    </OutputExpressions>\n  </Meta>\n  <Rows>\n    <Row>\n      <Field alias="tour_label">AUSTRALIA ISLAND SUNTANNER</Field>\n      <Field alias="NUM_DAYS">12</Field>\n    </Row>\n    <Row>\n      <Field alias="tour_label">AUSTRALIA UP OR DOWN THE TRACK</Field>\n      <Field alias="NUM_DAYS">10</Field>\n    </Row>\n  </Rows>\n</SQLXMLExport>\n'})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.p,{children:"All parameters are optional, and the parameter names and values are not case-sensitive."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"value"})})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.em,{children:(0,r.jsx)(t.strong,{children:"parameter"})})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Description"})})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ yes\xa0|\xa0no\xa0}"})}),(0,r.jsx)(t.td,{children:"AppendToFile"}),(0,r.jsxs)(t.td,{children:[(0,r.jsxs)("p",{children:[(0,r.jsx)(t.em,{children:"Value"})," is a string and must be quoted, as in the example earlier in this help topic."]}),(0,r.jsx)("p",{children:"If you specify 'yes' for this parameter, the file is appended to. Otherwise, the file is overwritten."})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ yes\xa0|\xa0no\xa0}"})}),(0,r.jsx)(t.td,{children:"TrimSpaces"}),(0,r.jsxs)(t.td,{children:[(0,r.jsxs)("p",{children:[(0,r.jsx)(t.em,{children:"Value"})," is a string and must be quoted, as in the example earlier in this help topic."]}),(0,r.jsx)("p",{children:"If you specify 'yes' for this parameter, any space characters produced during export because of an IO format will be stripped. Otherwise, the spaces remain. This parameter changes the output of:"}),(0,r.jsx)("pre",{children:(0,r.jsxs)("code",{class:"language-sql",children:["INVOKE XML.SqlExport with",(0,r.jsx)("br",{}),"SELECT USFormat.DoubleToChar( 123.22, 'ZZ,ZZZ,ZZ9.99' ) COL1"]})})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ yes\xa0|\xa0no\xa0}"})}),(0,r.jsx)(t.td,{children:"UseIOFormats"}),(0,r.jsxs)(t.td,{children:[(0,r.jsxs)("p",{children:[(0,r.jsx)(t.em,{children:"Value"})," is a string and must be quoted, as in the example earlier in this help topic."]}),(0,r.jsx)("p",{children:"If you specify 'yes' for this parameter, column values in the resulting XML output get the IO format of the corresponding domain. Otherwise, they are written as they are retrieved from the database."})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"output-file-name"})}),(0,r.jsx)(t.td,{children:"WriteOutputTo"}),(0,r.jsxs)(t.td,{children:["Specifies whether the output is to be written directly to a file. It is possible to use a file which has previously been opened using the USFile.Open method. To do this, the alias used in the ",(0,r.jsx)(t.a,{href:"/udocs/Extensions/USFile_internal_component/USFileOpen",children:"USFile.Open"})," method must be specified, preceded by 'USFile.' If no USFile alias is specified, the XML will be written directly to the file specified. If the file exists, it will be overwritten. To prevent this, use the 'Append' parameter. If specified, the method will return the file name."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ yes\xa0|\xa0no\xa0}"})}),(0,r.jsx)(t.td,{children:"XmlDeclaration"}),(0,r.jsxs)(t.td,{children:[(0,r.jsxs)("p",{children:[(0,r.jsx)(t.em,{children:"Value"})," is a string and must be quoted, as in the example earlier in this help topic."]}),(0,r.jsx)("p",{children:"If you specify 'yes' for this parameter, the default Rules Engine encoding is returned in XML processing instructions. Otherwise, no encoding processing instruction is added to the returned XML document."})]})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);