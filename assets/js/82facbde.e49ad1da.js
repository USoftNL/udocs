"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[89364],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},89901:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/Rules_Engine_properties/RowsCommitted","title":"RowsCommitted","description":"This article is about the RowsCommittedRules Engine property.","source":"@site/docs/Modeller_and_Rules_Engine/Rules_Engine_properties/RowsCommitted.md","sourceDirName":"Modeller_and_Rules_Engine/Rules_Engine_properties","slug":"/Modeller_and_Rules_Engine/Rules_Engine_properties/RowsCommitted","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/RowsCommitted","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"RowsCommitted"},"sidebar":"sidebar","previous":{"title":"RecordFactsCacheSize","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/RecordFactsCacheSize"},"next":{"title":"ShowComponentErrors","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/ShowComponentErrors"}}');var o=n(74848),r=n(28453);const i={id:"RowsCommitted"},l="RowsCommitted",d={},c=[{value:"<strong>RowsCommitted</strong>",id:"rowscommitted-1",level:2},{value:"Getting this property",id:"getting-this-property",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"rowscommitted",children:"RowsCommitted"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["This article is about the ",(0,o.jsx)(t.strong,{children:"RowsCommitted"}),(0,o.jsx)(t.a,{href:"/Modeller_and_Rules_Engine/Rules_Engine_properties",children:"Rules Engine property"}),"."]})}),"\n",(0,o.jsx)(t.h2,{id:"rowscommitted-1",children:(0,o.jsx)(t.strong,{children:"RowsCommitted"})}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"RowsCommitted"})," Rules Engine property returns the number of records manipulated (INSERT, UPDATE, DELETE) as part of the most recent commit performed by the Rules Engine."]}),"\n",(0,o.jsx)(t.p,{children:"The return value is 0 (zero) if:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"No transaction was as yet committed within the session."}),"\n",(0,o.jsx)(t.li,{children:"0 is the number of records manipulated as part of the most recent commit."}),"\n",(0,o.jsx)(t.li,{children:"The most recent previous transaction within the session was rolled back."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"getting-this-property",children:"Getting this property"}),"\n",(0,o.jsx)(t.p,{children:"You can get the current value of this property by executing:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sql",children:"SELECT RulesEngine.GetProperty( 'RowsCommitted' )\n"})}),"\n",(0,o.jsx)(t.p,{children:"This entire statement is case-insensitive, including the property name."})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);