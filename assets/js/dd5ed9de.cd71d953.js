"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[73049],{28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>o});var n=r(96540);const d={},t=n.createContext(d);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(t.Provider,{value:s},e.children)}},46370:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Web_and_app_UIs/UDB_DataSourceContainer/udbdsrows","title":"$.udb(ds).rows()","description":"----","source":"@site/docs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrows.md","sourceDirName":"Web_and_app_UIs/UDB_DataSourceContainer","slug":"/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrows","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrows","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"USoft11","permalink":"/udocs/tags/u-soft-11"},{"inline":true,"label":"USoft10","permalink":"/udocs/tags/u-soft-10"}],"version":"current","frontMatter":{"id":"udbdsrows","tags":["USoft11","USoft10"]},"sidebar":"sidebar","previous":{"title":"$.udb(ds).rowCreate()","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowCreate"},"next":{"title":"$.udb(ds).rowSet()","permalink":"/udocs/Web_and_app_UIs/UDB_DataSourceContainer/udbdsrowSet"}}');var d=r(74848),t=r(28453);const i={id:"udbdsrows",tags:["USoft11","USoft10"]},o="$.udb(ds).rows()",a={},c=[{value:"<strong>$.udb(ds).rows()</strong>",id:"udbdsrows-1",level:2},{value:"Passing row selectors",id:"passing-row-selectors",level:2},{value:"Passing keyword and indicator values",id:"passing-keyword-and-indicator-values",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"udbdsrows",children:"$.udb(ds).rows()"})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.code,{children:"USoft 11``{.vs_11}"})}),"\n",(0,d.jsx)(s.admonition,{type:"danger",children:(0,d.jsxs)(s.p,{children:["This article describes the USoft 10 product only.\nIn USoft 11, the web UI API was revised and improved. For full details, go to:\n",(0,d.jsx)(s.a,{href:"/udocs/Web_and_app_UIs/UDB_udb/Revised_web_UI_API_in_USoft_11",children:"Revised web UI API in USoft 11"})]})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.code,{children:"USoft 10``{.vs_10}"})}),"\n",(0,d.jsx)(s.admonition,{type:"note",children:(0,d.jsxs)(s.p,{children:["This article is about the ",(0,d.jsx)(s.strong,{children:"rows()"})," function of the ",(0,d.jsx)(s.a,{href:"/Web_and_app_UIs/UDB_DataSourceContainer",children:"DataSourceContainer object"}),"."]})}),"\n",(0,d.jsx)(s.h2,{id:"udbdsrows-1",children:(0,d.jsx)(s.strong,{children:"$.udb(ds).rows()"})}),"\n",(0,d.jsx)(s.p,{children:"Addresses a record or a set of records of the first data source in the container."}),"\n",(0,d.jsx)(s.p,{children:"Returns a collection of records."}),"\n",(0,d.jsx)(s.admonition,{type:"tip",children:(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Row selectors"}),"\nThe optional arguments passed to .rows() in the syntax block below are ",(0,d.jsx)(s.strong,{children:"row selectors"}),". They allow you to identify one or more specific records."]})}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Syntax"})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb( *ds* ).rows( *index*, *index* )\n$.udb( *ds* ).rows( *keyword*, *indicator* )\n"})}),"\n",(0,d.jsxs)(s.p,{children:["The optional ",(0,d.jsx)(s.em,{children:"ds"})," is a ",(0,d.jsx)(s.a,{href:"/udocs/Web_and_app_UIs/UDB_DataSourceMetaContainer/UDB_DataSourceMetaContainer_object",children:"data source selector"}),"."]}),"\n",(0,d.jsxs)(s.p,{children:["The optional ",(0,d.jsx)(s.em,{children:"index, keyword, indicator"})," are ",(0,d.jsx)(s.em,{children:"row selectors"}),". If you do not pass a row selector, all records in the data source are addressed. If you do pass a row selector, you either pass one or two ",(0,d.jsx)(s.em,{children:"index"})," arguments or you pass a ",(0,d.jsx)(s.em,{children:"keyword"})," argument that possibly requires an ",(0,d.jsx)(s.em,{children:"indicator"})," argument."]}),"\n",(0,d.jsx)(s.h2,{id:"passing-row-selectors",children:"Passing row selectors"}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.em,{children:"Index"})," values are integers or arrays used to identify records in the data source:"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"If you pass a single integer value, the record that corresponds to that index value is addressed."}),"\n",(0,d.jsx)(s.li,{children:"If you pass two integer values, the records corresponding to the first and the second index value are adressed and also all the records in between."}),"\n",(0,d.jsx)(s.li,{children:"If you pass an array of integer values, the records corresponding to the elements in the array are adressed."}),"\n",(0,d.jsx)(s.li,{children:"The index is 0-based: the first item has index 0, not 1."}),"\n"]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Examples"})}),"\n",(0,d.jsx)(s.p,{children:"This example addresses the 5th record:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows(4);\n"})}),"\n",(0,d.jsx)(s.p,{children:"and is short for:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rowSet('current').rows(4);\n"})}),"\n",(0,d.jsx)(s.p,{children:"This example addresses the 5th, 6th and 7th record:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows(4, 6);\n"})}),"\n",(0,d.jsx)(s.p,{children:"This example addresses the records with the specified indices:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rowSet('current').rows([0, 1, 4, 7]);\n"})}),"\n",(0,d.jsx)(s.h2,{id:"passing-keyword-and-indicator-values",children:"Passing keyword and indicator values"}),"\n",(0,d.jsxs)(s.p,{children:["Each ",(0,d.jsx)(s.em,{children:"keyword"})," value is a string that identifies a predefined option. If the Indicator column is empty,\xa0the ",(0,d.jsx)(s.em,{children:"indicator"})," parameter does not apply; otherwise, the indicator stated is required."]}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:(0,d.jsx)(s.strong,{children:"Keyword"})}),(0,d.jsx)(s.th,{children:(0,d.jsx)(s.strong,{children:"Indicator"})}),(0,d.jsx)(s.th,{children:(0,d.jsx)(s.strong,{children:"Description"})})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"current"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"The current record (not the same as 'selected')"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"dataset"}),(0,d.jsx)(s.td,{children:"data set indicator"}),(0,d.jsx)(s.td,{children:"The records in the requested data set"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"condition"}),(0,d.jsx)(s.td,{children:"condition"}),(0,d.jsx)(s.td,{children:"The record(s) that satisfy the condition"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"first"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"The first record"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"id"}),(0,d.jsx)(s.td,{children:"row ID"}),(0,d.jsx)(s.td,{children:"The record with the requested row ID"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"last"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"The last record"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"marked"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"All marked records"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"next"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"The record following the current record"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"previous"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"The record preceding the current record"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"selected"}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"All selected records (not the same as 'current')"})]})]})]}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.em,{children:"Examples"})}),"\n",(0,d.jsx)(s.p,{children:"This example addresses the record following the current record:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows('next');\n"})}),"\n",(0,d.jsx)(s.p,{children:"This example addresses the records in the first data set:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows('dataset', 1);\n"})}),"\n",(0,d.jsx)(s.p,{children:"This example gets records that satisfy the equality condition EMPNO = 10:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows( { EMPNO: \"10\" } );\n"})}),"\n",(0,d.jsx)(s.p,{children:"These examples get records that satisfy more complex conditions:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows('condition', { BIRTH_DATE: \">=01-JAN-1980\" } );\n"})}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows('condition', { BIRTH_DATE: \">=01-JAN-1980&<=01-JAN-2000\" } );\n"})}),"\n",(0,d.jsx)(s.p,{children:"To get all rows where MANAGER is NULL and SALARY is higher than 35000:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:"$.udb('EMP').rows('condition', { MANAGER: \"NULL\", SALARY: \">35000\" } );\n"})}),"\n",(0,d.jsx)(s.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}}}]);