"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[59031],{26711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/Supertypes_and_subtypes/Updating_supertype_and_subtype_data","title":"Updating supertype and subtype data","description":"Existing supertype-subtype record constellations may be updated in three ways:","source":"@site/docs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Updating_supertype_and_subtype_data.md","sourceDirName":"Modeller_and_Rules_Engine/Supertypes_and_subtypes","slug":"/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Updating_supertype_and_subtype_data","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Updating_supertype_and_subtype_data","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Updating_supertype_and_subtype_data"},"sidebar":"sidebar","previous":{"title":"Inserting supertype and subtype data","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Inserting_supertype_and_subtype_data"},"next":{"title":"Deleting supertype and subtype data","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Deleting_supertype_and_subtype_data"}}');var a=n(74848),r=n(28453);const d={id:"Updating_supertype_and_subtype_data"},i="Updating supertype and subtype data",p={},u=[];function o(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"updating-supertype-and-subtype-data",children:"Updating supertype and subtype data"})}),"\n",(0,a.jsx)(t.p,{children:"Existing supertype-subtype record constellations may be updated in three ways:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Supertype values are changed."}),"\n",(0,a.jsx)(t.li,{children:"Subtype values are changed."}),"\n",(0,a.jsx)(t.li,{children:"New subtypes are selected for an existing supertype, or existing subtypes are de-selected."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Subtypes are selected or de-selected for an existing supertype by:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Selecting or clearing subtype indicators (check boxes)."}),"\n",(0,a.jsx)(t.li,{children:"Inserting or deleting records in windows based on the subtype table."}),"\n",(0,a.jsx)(t.li,{children:"Indirectly, by executing one of the following SQL statements:"}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"INSERT INTO *subtype*\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"DELETE FROM *subtype*\n"})}),"\n",(0,a.jsx)(t.p,{children:"Such a statement could be executed from a constraint."}),"\n",(0,a.jsx)(t.p,{children:"These manipulations are treated as UPDATEs to the record constellation. Transitional constraints defined on the record constellation are evaluated if the Fire On Update flag is set."}),"\n",(0,a.jsx)(t.p,{children:"A possible exception is adding new subtype data to an existing supertype constellation. If this new data is inserted through a window based on the subtype, or inserted indirectly through a constraint, it is handled as INSERT rather than UPDATE if the Update Supertype on Insert deployment configuration parameter in the Authorizer is set to No."})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var s=n(96540);const a={},r=s.createContext(a);function d(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);