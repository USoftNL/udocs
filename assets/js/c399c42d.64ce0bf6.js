"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[69108],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},l=i.createContext(s);function o(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:t},e.children)}},44069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Repositories/Blend_functions/pathGetFullPath","title":"path:GetFullPath","description":"This article is about the path:GetFullPath Blend function.","source":"@site/docs/Repositories/Blend_functions/pathGetFullPath.md","sourceDirName":"Repositories/Blend_functions","slug":"/Repositories/Blend_functions/pathGetFullPath","permalink":"/udocs/Repositories/Blend_functions/pathGetFullPath","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pathGetFullPath"},"sidebar":"sidebar","previous":{"title":"path:GetFileName","permalink":"/udocs/Repositories/Blend_functions/pathGetFileName"},"next":{"title":"rulesservice:ReadConfig","permalink":"/udocs/Repositories/Blend_functions/rulesserviceReadConfig"}}');var s=n(74848),l=n(28453);const o={id:"pathGetFullPath"},a="path",r={},c=[{value:"<strong>path</strong>",id:"path-1",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"path",children:["path",":GetFullPath"]})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This article is about the ",(0,s.jsxs)(t.strong,{children:["path",":GetFullPath"]}),(0,s.jsx)(t.a,{href:"/Repositories/Blend_functions",children:" Blend function"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"path-1",children:(0,s.jsxs)(t.strong,{children:["path",":GetFullPath"]})}),"\n",(0,s.jsx)(t.p,{children:"Returns the absolute path leading to a directory specified by a relative path."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Syntax"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Namespace declaration"})}),"\n",(0,s.jsx)(t.p,{children:"You need to declare this namespace only if you call the function directly from the USCSXSL component but outside Blend. In a Blend context (ublendit.exe, uscsxsl.blend()) the namespace is already declared in the Blend transformation, which is in xsl\\Util\\Batch.1.0.xsl in your USoft installation folder."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'xmlns:path="USoft:Path"\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Function call"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"path:GetFullPath( path )\n"})}),"\n",(0,s.jsx)(t.p,{children:"The required path is a path expression identifying the directory that you want the full path of."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"For a full list of Blend functions in the area of path manipulation, use this command line:"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"> usoft-install-dir\\bin64\\ublendit.exe functions ns=path"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Example"})}),"\n",(0,s.jsx)(t.p,{children:"This example writes to the console the full path leading to the current directory."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'<pc:assign-string fullpath="{path:GetFullPath(\'.\')}"/>\n<pc:ConsoleWrite>\n  The full path to the current directory is:\n  <pc:value-of select="$fullpath"></pc:value-of>\n</pc:ConsoleWrite>\n'})}),"\n",(0,s.jsx)(t.p,{children:"\xa0"})]})}function d(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);