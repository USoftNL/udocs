"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[46581],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>p});var s=n(96540);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}},37449:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>_,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/Supertypes_and_subtypes/Relationship_Inheritance_from_supertype_to_subtype_RELATE","title":"Relationship Inheritance from supertype to subtype (RELATE)","description":"If you have defined a relationship between a supertype and another table, you can join any subtypes to that other table using the same relationship.","source":"@site/docs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Relationship_Inheritance_from_supertype_to_subtype_RELATE.md","sourceDirName":"Modeller_and_Rules_Engine/Supertypes_and_subtypes","slug":"/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Relationship_Inheritance_from_supertype_to_subtype_RELATE","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Relationship_Inheritance_from_supertype_to_subtype_RELATE","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Relationship_Inheritance_from_supertype_to_subtype_RELATE"},"sidebar":"sidebar","previous":{"title":"Deleting supertype and subtype data","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Deleting_supertype_and_subtype_data"},"next":{"title":"Constraints on supertypes and subtypes","permalink":"/udocs/Modeller_and_Rules_Engine/Supertypes_and_subtypes/Constraints_on_supertypes_and_subtypes"}}');var r=n(74848),a=n(28453);const o={id:"Relationship_Inheritance_from_supertype_to_subtype_RELATE"},p="Relationship Inheritance from supertype to subtype (RELATE)",i={},u=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"relationship-inheritance-from-supertype-to-subtype-relate",children:"Relationship Inheritance from supertype to subtype (RELATE)"})}),"\n",(0,r.jsx)(t.p,{children:"If you have defined a relationship between a supertype and another table, you can join any subtypes to that other table using the same relationship."}),"\n",(0,r.jsx)(t.p,{children:'Suppose "Sub1" is a subtype of "Super1", and you have a relationship between "Super1" and "Other". In this situation, you can use that same relationship to join "Sub1" to "Other1", because "Sub1" inherits the relationship from its supertype "Super1":'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'SELECT \xa0 \xa0...\nFROM \xa0 \xa0 \xa0Sub1, Other1\nRELATE \xa0 \xa0Sub1 "HAS" Other1\nWHERE \xa0 \xa0 ...\n'})}),"\n",(0,r.jsx)(t.p,{children:"or, if for some reason you use conventional join syntax rather than RELATE:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT \xa0 \xa0...\nFROM \xa0 \xa0 \xa0Sub1, Other1\nWHERE \xa0 \xa0 Sub1.*primary-key* = Other1.*foreign-key*\nAND \xa0 \xa0 \xa0 ...\n"})})]})}function _(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);