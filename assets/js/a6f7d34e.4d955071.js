"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[84857],{28453:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>r});var t=o(96540);const a={},s=t.createContext(a);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),t.createElement(s.Provider,{value:e},n.children)}},40342:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Task_flow/Jobs/Executing_a_Job_from_a_Constraint","title":"Executing a Job from a Constraint","description":"The only way to execute a job from a constraint is to call its job method.","source":"@site/docs/Task_flow/Jobs/Executing_a_Job_from_a_Constraint.md","sourceDirName":"Task_flow/Jobs","slug":"/Task_flow/Jobs/Executing_a_Job_from_a_Constraint","permalink":"/udocs/Task_flow/Jobs/Executing_a_Job_from_a_Constraint","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Executing_a_Job_from_a_Constraint"},"sidebar":"sidebar","previous":{"title":"Executing a Job from another Job","permalink":"/udocs/Task_flow/Jobs/Executing_a_Job_from_another_Job"},"next":{"title":"Invoking a job via Batchrunner","permalink":"/udocs/Task_flow/Jobs/Invoking_a_job_via_Batchrunner"}}');var a=o(74848),s=o(28453);const i={id:"Executing_a_Job_from_a_Constraint"},r="Executing a Job from a Constraint",c={},l=[];function u(n){const e={code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"executing-a-job-from-a-constraint",children:"Executing a Job from a Constraint"})}),"\n",(0,a.jsx)(e.p,{children:"The only way to execute a job from a constraint is to call its job method."}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.em,{children:"Example"})}),"\n",(0,a.jsx)(e.p,{children:"In this example, the SELECT command feeds two values (selected from columns ColumnA and ColumnB) to the job. The job needs to have a matching input parameter set that expects two values, maybe providing default values in case a value is not passed."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",children:"INVOKE \xa0 \xa0 \xa0 \xa0BatchRunner.JobX WITH\nSELECT \xa0 \xa0 \xa0 \xa0ColumnA\n, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ColumnB\nFROM \xa0 \xa0 \xa0 \xa0 \xa0Table1\nWHERE \xa0 \xa0 \xa0 \xa0 ColumnB = ColumnC\nAND \xa0 \xa0 \xa0 \xa0 \xa0 ColumnD = 'N'\n\n"})}),"\n",(0,a.jsx)(e.p,{children:"The following conditions apply to constraints that execute jobs:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"The job (and any subjobs of the job) cannot include action tasks."}),"\n",(0,a.jsx)(e.li,{children:"The job can only be used in an 'invocative' constraint, that is: only if the INVOKE command is at the topmost level of the constraint SQL."}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"The following special behavior applies when a job is called from a constraint:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Any (pre)commit fired from the job will NOT be executed."}),"\n",(0,a.jsx)(e.li,{children:"Record-level commits for import/SQL tasks will NOT be executed."}),"\n",(0,a.jsx)(e.li,{children:"As of USoft 9.x, a batch job triggered from a constraint runs with background authorization."}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"It is possible to pass a literal as part of the INVOKE ... SELECT ... statement, for example:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",children:"INVOKE \xa0 \xa0 \xa0 \xa0BatchRunner.JobY WITH \nSELECT \xa0 \xa0 \xa0 \xa0'P1' ColumnA\n, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'Yes' \"-quiet\" \nFROM \xa0 \xa0 \xa0 \xa0 \xa0Table2 \nWHERE \xa0 \xa0 \xa0 \xa0 Table2.ColumnE = 1\n\n"})}),"\n",(0,a.jsx)(e.p,{children:"\xa0"}),"\n",(0,a.jsx)(e.p,{children:"\xa0"})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}}}]);