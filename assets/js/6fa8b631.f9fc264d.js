"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[88236],{28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var s=o(96540);const l={},t=s.createContext(l);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},50954:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Repositories/Blend_functions/booleanflagsShow","title":"booleanflags:Show","description":"This article is about the booleanflags:Show Blend function.","source":"@site/docs/Repositories/Blend_functions/booleanflagsShow.md","sourceDirName":"Repositories/Blend_functions","slug":"/Repositories/Blend_functions/booleanflagsShow","permalink":"/udocs/Repositories/Blend_functions/booleanflagsShow","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"booleanflagsShow"},"sidebar":"sidebar","previous":{"title":"Blend functions","permalink":"/udocs/Repositories/Blend_functions/"},"next":{"title":"booleanflags:ToBoolean","permalink":"/udocs/Repositories/Blend_functions/booleanflagsToBoolean"}}');var l=o(74848),t=o(28453);const a={id:"booleanflagsShow"},i="booleanflags",r={},c=[{value:"<strong>booleanflags</strong>",id:"booleanflags-1",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsxs)(n.h1,{id:"booleanflags",children:["booleanflags",":Show"]})}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["This article is about the ",(0,l.jsxs)(n.strong,{children:["booleanflags",":Show"]}),(0,l.jsx)(n.a,{href:"/Repositories/Blend_functions",children:" Blend function"}),"."]})}),"\n",(0,l.jsx)(n.h2,{id:"booleanflags-1",children:(0,l.jsxs)(n.strong,{children:["booleanflags",":Show"]})}),"\n",(0,l.jsxs)(n.p,{children:["Shows the set of pairs of string values that are interpreted by flag-based string-to-boolean conversion as boolean true() and boolean false(). You can add items to this set by calling pc",":define-boolean-flags","."]}),"\n",(0,l.jsx)(n.p,{children:"Returns a node set."}),"\n",(0,l.jsx)(n.p,{children:"Blend string-to-boolean conversion is performed by calling the function"}),"\n",(0,l.jsxs)(n.p,{children:["booleanflags",":ToBoolean"]}),"\n",(0,l.jsxs)(n.p,{children:["This conversion is also performed when you call the following directives IF they are executed with the pc",":booleanflags",'="yes" switch:']}),"\n",(0,l.jsxs)(n.p,{children:["pc",":assign-boolean","\npc",":assign-boolean-default"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"Syntax"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"Namespace declaration"})}),"\n",(0,l.jsx)(n.p,{children:"You need to declare this namespace only if you call the function directly from the USCSXSL component but outside Blend. In a Blend context (ublendit.exe, uscsxsl.blend()) the namespace is already declared in the Blend transformation, which is in xsl\\Util\\Batch.1.0.xsl in your USoft installation folder."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'xmlns:booleanflags="USoft:BooleanFlags"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"Function call"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"booleanflags:Show( )\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.em,{children:"Example"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<example xmlns:pc="Processing.Command">\n   <pc:assign-nodeset mylist="{booleanflags:Show()}"/>\n   <pc:copy-of select="$mylist"/>\n</example>\n'})}),"\n",(0,l.jsx)(n.p,{children:"If this Example returns the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<Flags>\n  <Flag true="true" false="false" index="0" />\n  <Flag true="yes"  false="no"    index="1" />\n</Flags>\n'})}),"\n",(0,l.jsx)(n.p,{children:"then USoft Blend's flag-based string-to-boolean conversion will (case-insensitively) interpret the strings true and yes as boolean true(), and the strings false and no as boolean false()."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);