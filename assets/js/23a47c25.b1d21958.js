"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[29924],{19703:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>h,contentTitle:()=>l,default:()=>x,frontMatter:()=>d,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Repositories/Data_flow_control_with_XML_or_JSON/Obsolete_children_on_import","title":"Obsolete children on import","description":"An obsolete child is a child record that is considered to be no longer relevant if new information about the parent and its children is imported.","source":"@site/docs/Repositories/Data_flow_control_with_XML_or_JSON/Obsolete_children_on_import.md","sourceDirName":"Repositories/Data_flow_control_with_XML_or_JSON","slug":"/Repositories/Data_flow_control_with_XML_or_JSON/Obsolete_children_on_import","permalink":"/udocs/Repositories/Data_flow_control_with_XML_or_JSON/Obsolete_children_on_import","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Obsolete_children_on_import"},"sidebar":"sidebar","previous":{"title":"How import XML or JSON is processed","permalink":"/udocs/Repositories/Data_flow_control_with_XML_or_JSON/How_import_XML_or_JSON_is_processed"},"next":{"title":"Generating key values for parent-child data on import","permalink":"/udocs/Repositories/Data_flow_control_with_XML_or_JSON/Generating_key_values_for_parentchild_data_on_import"}}');var t=s(74848),i=s(28453);const d={id:"Obsolete_children_on_import"},l="Obsolete children on import",h={},o=[{value:"Example 1: Child records in XML",id:"example-1-child-records-in-xml",level:3},{value:"Example 2: Empty table wrapper element in XML",id:"example-2-empty-table-wrapper-element-in-xml",level:3},{value:"Example 3: Table is not referred to in XML",id:"example-3-table-is-not-referred-to-in-xml",level:3},{value:"Example 4: relationship-behaviour=&quot;as-reference&quot;",id:"example-4-relationship-behaviouras-reference",level:3}];function c(e){const r={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"obsolete-children-on-import",children:"Obsolete children on import"})}),"\n",(0,t.jsxs)(r.p,{children:["An ",(0,t.jsx)(r.strong,{children:"obsolete child"})," is a child record that is considered to be no longer relevant if new information about the parent and its children is imported."]}),"\n",(0,t.jsx)(r.p,{children:"You can instruct XML.Import and JSON.Import to delete obsolete children when importing new parent-child information. This applies when you pass parent and child records in a USoft multi-table XML or JSON document."}),"\n",(0,t.jsx)(r.p,{children:"Whether or not XML.Import or JSON.Import deletes obsolete children depends on the Type of Relationship of the Relationship between parent and child."}),"\n",(0,t.jsxs)(r.p,{children:["If Type Of Relationship = ",(0,t.jsx)(r.strong,{children:"Reference"})," (the default), child records in the database that do not exist in the XML or JSON are NOT deleted."]}),"\n",(0,t.jsxs)(r.p,{children:["If Type Of Relationship = ",(0,t.jsx)(r.strong,{children:"Composition"}),",****child records in the database that do not exist in the XML or JSON ARE deleted."]}),"\n",(0,t.jsx)(r.p,{children:'A child record is considered "not to exist" (see Example 2) in the XML or JSON only if both of the following apply:'}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"The wrapper element with the child table's Object Name Plural is in the XML or JSON"}),"\n",(0,t.jsx)(r.li,{children:"Inside this wrapper, no record exists with the primary key value(s) of the child record."}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:['There is a processing instruction called "relationship-behaviour" with which you can direct the engine to treat "Composition" relationships as if they were "Reference" relationships. For details, see Example 4 or go to (XML:) " ',(0,t.jsx)(r.a,{href:"/udocs/Repositories/USoft_XML_formats/usoftxml_processing_instruction",children:"usoft-xml processing instruction"}),' "\xa0 or (JSON:) ',(0,t.jsx)(r.a,{href:"/udocs/Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON",children:"Meta-instruction properties in JSON"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["The following examples are imported into this sample database, where the relationship between EMPLOYEE and EMPLOYEE_LANGUAGE_SKILL has Type Of Relationship = ",(0,t.jsx)(r.strong,{children:"Composition"}),":"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"NAME"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"CELINE"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"ANJA"})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE_LANGUAGE_SKILL"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"EMP_ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"LANG"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"NL"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SP"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"NL"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"SP"})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"example-1-child-records-in-xml",children:"Example 1: Child records in XML"}),"\n",(0,t.jsx)(r.p,{children:"This example shows how obsolete children are handled when child records are present in the XML import document:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'<?usoft-xml version="1.0" action="multi-tables-import" use-io-formats="no" verify-original-values="no" return-corrected-records ="yes"?>\n<MultiImport>\n \xa0<Employees>\n \xa0 \xa0<EMPLOYEE ID="101" NAME="SELINA"/>\n \xa0 \xa0<EMPLOYEE ID="103" NAME="LUCA"/>\n \xa0</Employees>\n \xa0<Employee_Language_Skills>\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="101" LANG="NL" />\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="103" LANG="NL" />\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="103" LANG="SP" />\n \xa0</Employee_Language_Skills>\n</MultiImport>\n\n'})}),"\n",(0,t.jsx)(r.p,{children:"The result of importing this document will be:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"NAME"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SELINA"}),(0,t.jsx)(r.td,{children:"The NAME is updated."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"ANJA"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"LUCA"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE_LANGUAGE_SKILL"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"EMP_ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"LANG"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"Record 101, SP is deleted."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"example-2-empty-table-wrapper-element-in-xml",children:"Example 2: Empty table wrapper element in XML"}),"\n",(0,t.jsx)(r.p,{children:'This example shows how an empty table wrapper in the XML document has the meaning "children do not exist". Obsolete children are deleted. Contrast with Example 3:'}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'<?usoft-xml version="1.0" action="multi-tables-import" use-io-formats="no" verify-original-values="no" return-corrected-records ="yes"?>\n<MultiImport>\n \xa0<Employees>\n \xa0 \xa0<EMPLOYEE ID="101" NAME="SELINA"/>\n \xa0 \xa0<EMPLOYEE ID="103" NAME="LUCA"/>\n \xa0</Employees>\n \xa0<Employee_Language_Skills/>\n</MultiImport>\n\n'})}),"\n",(0,t.jsx)(r.p,{children:"The result of importing this document will be:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"NAME"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SELINA"}),(0,t.jsx)(r.td,{children:"The NAME is updated."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"ANJA"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"LUCA"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE_LANGUAGE_SKILL"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"EMP_ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"LANG"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"Record 101, NL is deleted."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"Record 101, SP is deleted."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"Record 102, NL is deleted."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{}),(0,t.jsx)(r.td,{children:"Record 102, SP is deleted."})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"example-3-table-is-not-referred-to-in-xml",children:"Example 3: Table is not referred to in XML"}),"\n",(0,t.jsx)(r.p,{children:"This example how an XML document with NO reference to a table does not affect child records. Existing children are not considered obsolete, and consequently are not dropped. Contrast with Example 2:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'<?usoft-xml version="1.0" action="multi-tables-import" use-io-formats="no" verify-original-values="no" return-corrected-records ="yes"?>\n<MultiImport>\n \xa0<Employees>\n \xa0 \xa0<EMPLOYEE ID="101" NAME="SELINA"/>\n \xa0 \xa0<EMPLOYEE ID="103" NAME="LUCA"/>\n \xa0</Employees>\n</MultiImport>\n\n'})}),"\n",(0,t.jsx)(r.p,{children:"The result of importing this document will be:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"NAME"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SELINA"}),(0,t.jsx)(r.td,{children:"The NAME is updated."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"ANJA"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"LUCA"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE_LANGUAGE_SKILL"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"EMP_ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"LANG"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{children:"Record not in XML, but preserved."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{children:"Record not in XML, but preserved."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{children:"Record not in XML, but preserved."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{children:"Record not in XML, but preserved."})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"example-4-relationship-behaviouras-reference",children:'Example 4: relationship-behaviour="as-reference"'}),"\n",(0,t.jsxs)(r.p,{children:["This example shows how obsolete children in a composition relationship can be preserved by instruction XML.Import, in the ",(0,t.jsx)(r.strong,{children:"relationship-behaviour"})," processing instruction at the top, to treat the relationship as a reference relationship during the import. Contrast with Example 1."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'<?usoft-xml version="1.0" action="multi-tables-import" relationship-behaviour="as-reference"\n \xa0 \xa0use-io-formats="no" verify-original-values="no" return-corrected-records ="yes"?>\n<MultiImport>\n \xa0<Employees>\n \xa0 \xa0<EMPLOYEE ID="101" NAME="SELINA"/>\n \xa0 \xa0<EMPLOYEE ID="103" NAME="LUCA"/>\n \xa0</Employees>\n \xa0<Employee_Language_Skills>\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="101" LANG="NL" />\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="103" LANG="NL" />\n \xa0 \xa0<EMPLOYEE_LANGUAGE_SKILL EMP_ID="103" LANG="SP" />\n \xa0</Employee_Language_Skills>\n</MultiImport>\n\n'})}),"\n",(0,t.jsx)(r.p,{children:"The result of importing this document will be:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"NAME"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SELINA"}),(0,t.jsx)(r.td,{children:"The NAME is updated"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"ANJA"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"LUCA"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Table: EMPLOYEE_LANGUAGE_SKILL"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"EMP_ID"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"LANG"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Comments"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{children:"."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"101"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{children:"Record not in XML, but preserved."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"102"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"NL"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"103"}),(0,t.jsx)(r.td,{children:"SP"}),(0,t.jsx)(r.td,{children:"A new record is inserted."})]})]})]})]})}function x(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>l});var n=s(96540);const t={},i=n.createContext(t);function d(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);