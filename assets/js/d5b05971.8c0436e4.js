"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[52254],{3943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Transaction_checks","title":"Transaction checks","description":"Transaction checks are checks applied to manipulated records when the transaction commits, that is, at a later time than the store-record events for these records. This later evaluation time is necessary because, to do the check, any corrections to other records must have taken place first.","source":"@site/docs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Transaction_checks.md","sourceDirName":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine","slug":"/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Transaction_checks","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Transaction_checks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Transaction_checks"},"sidebar":"sidebar","previous":{"title":"Chained corrections","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Chained_corrections"},"next":{"title":"Cascade-to-other corrections","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Cascadetoother_corrections"}}');var a=n(74848),r=n(28453);const c={id:"Transaction_checks"},i="Transaction checks",o={},d=[{value:"Effect of transaction checks",id:"effect-of-transaction-checks",level:2}];function h(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"transaction-checks",children:"Transaction checks"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Transaction checks"})," are checks applied to manipulated records when the transaction commits, that is, at a ",(0,a.jsx)(t.em,{children:"later"})," time than the store-record events for these records. This later evaluation time is necessary because, to do the check, any corrections to ",(0,a.jsx)(t.em,{children:"other"})," records must have taken place first."]}),"\n",(0,a.jsx)(t.p,{children:"The transaction commits only if all transaction checks are passed. This is also expressed by saying that transaction checks occur in the pre-commit phase of a commit event."}),"\n",(0,a.jsx)(t.p,{children:"The following types of table constraint are evaluated as transaction checks:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Restrictive, non-transitional, multi-record constraints."}),"\n",(0,a.jsx)(t.li,{children:"Restrictive, non-transitional, single-record constraints that are deferred (= that have the Deferred = Until Commit setting)."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Transaction checks contrast with row checks."}),"\n",(0,a.jsx)(t.p,{children:"A transaction check may be optimised by using a transaction checklist compiled during store-record events."}),"\n",(0,a.jsx)(t.p,{children:"Transaction checks are listed in BenchMark profiler output with Reason = CONSTRAINT_TEST."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"Example"})}),"\n",(0,a.jsx)(t.p,{children:'A business rule "A passenger cannot participate at the same time in 2 different tours that overlap on the calendar." is implemented by a restrictive multi-record constraint:'}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'SELECT \xa0 \xa0\'\'\nFROM \xa0 \xa0 \xa0passenger p\n, \xa0 \xa0 \xa0 \xa0 tour t1\n, \xa0 \xa0 \xa0 \xa0 tour t2\nRELATE \xa0 \xa0p "PARTICIPATES_IN" t1\n, \xa0 \xa0 \xa0 \xa0 p "PARTICIPATES_IN" t2\nWHERE \xa0 \xa0 t2.start_date > t1.start_date \nAND \xa0 \xa0 \xa0 t2.start_date < t1.end_date \n'})}),"\n",(0,a.jsx)(t.p,{children:"This constraint is evaluated as a transaction check. This happens each time that a PASSENGER is (re)assigned to a tour, and also each time that the startdate or enddate of a TOUR changes."}),"\n",(0,a.jsx)(t.h2,{id:"effect-of-transaction-checks",children:"Effect of transaction checks"}),"\n",(0,a.jsx)(t.p,{children:"An evaluated transaction check has an effect if the constraint's SELECT query applied to the application data being committed returns 1 or more rows. The effect is that processing is blocked and the constraint message defined for the table constraint is returned. The transaction is not committed."})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(96540);const a={},r=s.createContext(a);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);