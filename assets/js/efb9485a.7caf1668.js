"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[61591],{28453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>c});var n=i(96540);const t={},o=n.createContext(t);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:r},e.children)}},66423:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"Repositories/Blend_directives/pcCopyDirectory","title":"pc:CopyDirectory","description":"This article is about the pc:CopyDirectory Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcCopyDirectory.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcCopyDirectory","permalink":"/udocs/Repositories/Blend_directives/pcCopyDirectory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcCopyDirectory"},"sidebar":"sidebar","previous":{"title":"pc:copy-of","permalink":"/udocs/Repositories/Blend_directives/pccopyof"},"next":{"title":"pc:CopyFile","permalink":"/udocs/Repositories/Blend_directives/pcCopyFile"}}');var t=i(74848),o=i(28453);const s={id:"pcCopyDirectory"},c="pc",d={},p=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"pc",children:["pc",":CopyDirectory"]})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["This article is about the ",(0,t.jsxs)(r.strong,{children:["pc",":CopyDirectory"]}),(0,t.jsx)(r.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,t.jsx)(r.h2,{id:"pc-1",children:(0,t.jsxs)(r.strong,{children:["pc",":CopyDirectory"]})}),"\n",(0,t.jsx)(r.p,{children:"Copies a folder to a destination (another folder) on the file system. Directory contents and descendent folders are also copied."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"Syntax"}),"\n\xa0"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'<pc:CopyDirectory\n     source="*folder-path*"\n     destination="*folder-path*"\n     overwrite="*overwrite*" />\n\n*overwrite*  ::=  { yes | no }\n'})}),"\n",(0,t.jsxs)(r.p,{children:["The required ",(0,t.jsx)(r.strong,{children:"source"})," identifies the folder to be copied. The required ",(0,t.jsx)(r.strong,{children:"destination"})," identifies the destination folder."]}),"\n",(0,t.jsx)(r.p,{children:'If overwrite="yes" is passed, then any existing content in the destination folder is silently overwritten.'}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.em,{children:"Example"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<pc:CopyDirectory source="{$sourcedir}" destination="{$serverdir}" overwrite="yes">\n   <pc:Succeeded>\n      <pc:ConsoleWrite>Server deployed to <pc:value-of select="$serverdir"/>.</pc:ConsoleWrite>   \n   </pc:Succeeded>   \n</pc:CopyDirectory>  \n'})}),"\n",(0,t.jsx)(r.p,{children:"\xa0"})]})}function a(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);