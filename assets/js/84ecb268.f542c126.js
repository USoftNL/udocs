"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[32601],{468:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_syntax/Mathematical_operators","title":"Mathematical operators","description":"This article is about mathematical operators as part of the SQL syntax that USoft supports.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_syntax/Mathematical_operators.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_syntax","slug":"/Modeller_and_Rules_Engine/SQL_syntax/Mathematical_operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Mathematical_operators","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Mathematical_operators"},"sidebar":"sidebar","previous":{"title":"Comparison operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Comparison_operators"},"next":{"title":"SQL operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/SQL_operators"}}');var s=a(74848),r=a(28453);const o={id:"Mathematical_operators"},i="Mathematical operators",l={},d=[{value:"<strong>Mathematical operators</strong>",id:"mathematical-operators-1",level:2},{value:"Calculations with non-number values",id:"calculations-with-non-number-values",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"mathematical-operators",children:"Mathematical operators"})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This article is about ",(0,s.jsx)(t.strong,{children:"mathematical operators"})," as part of the ",(0,s.jsx)(t.a,{href:"/Modeller_and_Rules_Engine/SQL_syntax",children:"SQL syntax"})," that USoft supports."]})}),"\n",(0,s.jsx)(t.h2,{id:"mathematical-operators-1",children:(0,s.jsx)(t.strong,{children:"Mathematical operators"})}),"\n",(0,s.jsx)(t.p,{children:"A mathematical operator applies a basic arithmetic calculation to the values represented to its left and right."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Syntax"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"*value  math-operator  value*\n"})}),"\n",(0,s.jsx)(t.p,{children:"The following 4 mathematical operators are supported:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"+"})}),(0,s.jsx)(t.td,{children:"addition"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"-"})}),(0,s.jsx)(t.td,{children:"subtraction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"*"})}),(0,s.jsx)(t.td,{children:"multiplication"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/"})}),(0,s.jsx)(t.td,{children:"division"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Parentheses may be used to indicate order of evaluation."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"( 2 / 5 ) * 100"})}),(0,s.jsx)(t.td,{children:"2 is first divided by 5. The outcome is multiplied by 100. The outcome is 40."})]})})]}),"\n",(0,s.jsx)(t.p,{children:"If you omit parentheses, multiplication and dividion take precedence over addition and subtraction, but USoft recommends you ALWAYS write parentheses for readability."}),"\n",(0,s.jsx)(t.h2,{id:"calculations-with-non-number-values",children:"Calculations with non-number values"}),"\n",(0,s.jsx)(t.p,{children:"Mathematical operators are mostly used with number values, where they take their full arithmetic meaning.\nOn some RDBMSs, you can add days to a date by adding a numerical value, where 1 = a 24-hour day. Likewise, you can use the '-' operator to subtract 2 date values. The result is the time difference, expressed as a number, where 1 = a 24-hour day. USoft recommends that you use functions for date calculations instead."}),"\n",(0,s.jsx)(t.p,{children:"On MS SQL Server, the '+' operator may be used to concatenate 2 string values. This is RDBMS-specific. USoft recommends you use the equivalent CONCAT function if you can. It has the advantage of being convertible, but the drawback that it takes 2 input values only."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var n=a(96540);const s={},r=n.createContext(s);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);