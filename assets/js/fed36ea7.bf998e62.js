"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[60044],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(r.Provider,{value:n},e.children)}},78079:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"Repositories/Blend_functions/stringsREReplace","title":"strings:REReplace","description":"This article is about the strings:REReplace Blend function.","source":"@site/docs/Repositories/Blend_functions/stringsREReplace.md","sourceDirName":"Repositories/Blend_functions","slug":"/Repositories/Blend_functions/stringsREReplace","permalink":"/udocs/Repositories/Blend_functions/stringsREReplace","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"stringsREReplace"},"sidebar":"sidebar","previous":{"title":"strings:ReplaceVariables","permalink":"/udocs/Repositories/Blend_functions/stringsReplaceVariables"},"next":{"title":"strings:StartsWith","permalink":"/udocs/Repositories/Blend_functions/stringsStartsWith"}}');var i=s(74848),r=s(28453);const c={id:"stringsREReplace"},a="strings",l={},o=[{value:"<strong>strings</strong>",id:"strings-1",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"strings",children:["strings",":REReplace"]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This article is about the ",(0,i.jsxs)(n.strong,{children:["strings",":REReplace"]}),(0,i.jsx)(n.a,{href:"/Repositories/Blend_functions",children:" Blend function"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"strings-1",children:(0,i.jsxs)(n.strong,{children:["strings",":REReplace"]})}),"\n",(0,i.jsx)(n.p,{children:"Within a specified string, replaces each occurrence of a substring matching a specified regular expression pattern by a specified alternative."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Syntax"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Namespace declaration"})}),"\n",(0,i.jsx)(n.p,{children:"You need to declare this namespace only if you call the function directly from the USCSXSL component but outside Blend. In a Blend context (ublendit.exe, uscsxsl.blend()) the namespace is already declared in the Blend transformation, which is in xsl\\Util\\Batch.1.0.xsl in your USoft installation folder."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'xmlns:strings="USoft:Strings"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Function call"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"strings:REReplace( *string, regexp-pattern, alternative* )\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Each of the 3 arguments (",(0,i.jsx)(n.em,{children:"string, regexp-pattern, alternative"}),") are required."]}),"\n",(0,i.jsxs)(n.p,{children:["If there are multiples substrings matching ",(0,i.jsx)(n.em,{children:"regexp-pattern,"})," the replacement takes place each time."]}),"\n",(0,i.jsxs)(n.p,{children:["if no substrings match ",(0,i.jsx)(n.em,{children:"regexp-pattern,"})," then ",(0,i.jsx)(n.em,{children:"string"})," is returned unaffected."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example"})}),"\n",(0,i.jsx)(n.p,{children:"This example filters special characters and takes advantage of regexp's escape mechanism:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"<root xmlns:pc=\"Processing.Command\" xmlns:assign=\"Processing.Command.Assign\">\n\t<example>\n\t\t<pc:value-of select=\"strings:REReplace('My\\Value\\','\\\\|,|/|\\^|~|@|&|\\||-|\\(|\\)|\\[|\\]|\\{|\\}|\\*|\\?|=|\\+|\\.|,|%','')\"/>\n\t</example>\n</root>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The result value is the input ",(0,i.jsx)(n.strong,{children:"My\\Value\\"})," but without the backslash characters:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"MyValue\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you want to do a simple replacement for which you do not require a regexp pattern, use ",(0,i.jsxs)(n.a,{href:"/udocs/Repositories/Blend_functions/stringsReplace",children:["strings",":Replace","()"]})," instead."]})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);