"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[66706],{28453:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>c});var t=i(96540);const n={},s=t.createContext(n);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(s.Provider,{value:r},e.children)}},90249:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Repositories/Blend_directives/pcDeleteDirectories","title":"pc:DeleteDirectories","description":"This article is about the pc:DeleteDirectories Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcDeleteDirectories.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcDeleteDirectories","permalink":"/udocs/Repositories/Blend_directives/pcDeleteDirectories","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcDeleteDirectories"},"sidebar":"sidebar","previous":{"title":"pc:defs","permalink":"/udocs/Repositories/Blend_directives/pcdefs"},"next":{"title":"pc:DeleteFile","permalink":"/udocs/Repositories/Blend_directives/pcDeleteFile"}}');var n=i(74848),s=i(28453);const o={id:"pcDeleteDirectories"},c="pc",d={},l=[{value:"<strong>pc</strong>",id:"pc-1",level:2},{value:"Errors",id:"errors",level:2}];function a(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsxs)(r.h1,{id:"pc",children:["pc",":DeleteDirectories"]})}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["This article is about the ",(0,n.jsxs)(r.strong,{children:["pc",":DeleteDirectories"]}),(0,n.jsx)(r.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,n.jsx)(r.h2,{id:"pc-1",children:(0,n.jsxs)(r.strong,{children:["pc",":DeleteDirectories"]})}),"\n",(0,n.jsx)(r.p,{children:"Deletes one or more specified directories and their contents and (if specified) their subdirectories."}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.em,{children:"Syntax"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'<pc:DeleteDirectories>\n     <Directory dirpath="*folderpath*" recursive="*recursive*"/>\n     ...\n</pc:DeleteDirectories>\n\n*recursive*  :=  { yes | no }\n'})}),"\n",(0,n.jsxs)(r.p,{children:["The required ",(0,n.jsx)(r.strong,{children:"folderpath"})," is a folderpath identifying, in each case, the folder to be deleted."]}),"\n",(0,n.jsx)(r.p,{children:'If recursive="yes" is passed, then files and subdirectories contained by the folder (if any) are automatically deleted along with the folder itself.'}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.em,{children:"Example"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<pc:DeleteDirectories>\n     <Directory dirpath="{$serverdir}" recursive="yes"/>\n     <Directory dirpath="{path:Combine($serverdir, \'..\', \'help\')}" />\n</pc:DeleteDirectories>\n'})}),"\n",(0,n.jsx)(r.h2,{id:"errors",children:"Errors"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"If folderpath is not found on the file system, the operation fails and returns the error message:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Could not find a part of the path folderpath.\n"})}),"\n",(0,n.jsx)(r.p,{children:"In this case, if you have other <Directory> elements for which the folderpath is found, those directories are deleted, and the error message reads:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Deleted *n* directories. Could not find a part of the path *folderpath*.\n"})}),"\n",(0,n.jsx)(r.p,{children:"To test ahead of time whether a directory exists, you can write:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:"...\n<pc:assign-nodeset dirfound=\"{directories:DirectoryContent($mydir, '*', '0', '', '')}\" />   \n<pc:if-then test=\"$mydir/Directory\">\n  <pc:DeleteDirectories>\n    <Directory dirpath=\"{$mydir}\" />\n  </pc:DeleteDirectories>\n</pc:if-then>\n\u2026\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"2",children:["\n",(0,n.jsx)(r.li,{children:'If recursive="no" (the default), and the folder contains at least one file or subdirectory, then the operation fails and returns the error message:'}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"The directory is not empty.\n"})}),"\n",(0,n.jsx)(r.p,{children:"In this case, if you have other <Directory> elements, the delete operation fails also for those other elements."}),"\n",(0,n.jsx)(r.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);