"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[9406],{28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var s=t(96540);const o={},i=s.createContext(o);function a(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),s.createElement(i.Provider,{value:e},n.children)}},28897:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_syntax/Function_calls","title":"Function calls","description":"This article is about function calls as part of the SQL syntax that USoft supports.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_syntax/Function_calls.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_syntax","slug":"/Modeller_and_Rules_Engine/SQL_syntax/Function_calls","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Function_calls","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Function_calls"},"sidebar":"sidebar","previous":{"title":"SQL operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/SQL_operators"},"next":{"title":"SQL functions","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions"}}');var o=t(74848),i=t(28453);const a={id:"Function_calls"},l="Function calls",r={},c=[{value:"<strong>Function calls</strong>",id:"function-calls-1",level:2},{value:"Method invocations",id:"method-invocations",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"function-calls",children:"Function calls"})}),"\n",(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsxs)(e.p,{children:["This article is about ",(0,o.jsx)(e.strong,{children:"function calls"})," as part of the ",(0,o.jsx)(e.a,{href:"/Modeller_and_Rules_Engine/SQL_syntax",children:"SQL syntax"})," that USoft supports."]})}),"\n",(0,o.jsx)(e.h2,{id:"function-calls-1",children:(0,o.jsx)(e.strong,{children:"Function calls"})}),"\n",(0,o.jsx)(e.p,{children:"Column expressions may contain functions calls. A function call is signalled by the required presence of parentheses around the column name or literal. The function name is the name immediately preceding the opening parenthesis:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sql",children:"*function-name*( { *column* | *literal* } [ , *argument* ... ] )\n"})}),"\n",(0,o.jsx)(e.p,{children:"Functions expect 0, 1 or multiple arguments, which may be required or optional depending on the function. Function arguments are separated by commas. Functions may be nested."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.em,{children:"Example"})}),"\n",(0,o.jsx)(e.p,{children:"In this example, the UPPER(\xa0) function converts retrieved values from the NAME column to all-uppercase. The result is passed as the first argument of the SUBSTR(\xa0) function, which in this case takes 2 arguments, the input string and the number 5, which causes it to return the input string from position 5 onward."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sql",children:"SELECT     SUBSTRING( UPPER( name ), 5 )\n"})}),"\n",(0,o.jsxs)(e.p,{children:["This example returns the string ",(0,o.jsx)(e.strong,{children:"SON"})," if the retrieved name is ",(0,o.jsx)(e.strong,{children:"Johnson"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"method-invocations",children:"Method invocations"}),"\n",(0,o.jsx)(e.p,{children:"Invocations of methods of RDMI components are a special case of function call. These invocations are signalled by the presence of a full-stop separator (\xa0.\xa0) in the function name:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sql",children:"*component.method*( { *column* | *literal* } )\n"})}),"\n",(0,o.jsx)(e.p,{children:"These invocations can alternatively be expressed by an INVOKE ... WITH SELECT statement."})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);