"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[21767],{2269:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Startup_constraints","title":"Startup constraints","description":"You can write constraints that are evaluated when a Rules Engine is started. This happens for example when you start an application, run a batch job, or connect to the USoft Remote Rules Serice. This allows you to define a restrictive rule that prevents a user from starting a USoft application after a certain time, or a productive rule that keeps track of which users use the application and at what time.","source":"@site/docs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Startup_constraints.md","sourceDirName":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine","slug":"/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Startup_constraints","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Startup_constraints","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Startup_constraints"},"sidebar":"sidebar","previous":{"title":"Lock and commit management","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Lock_and_commit_management"},"next":{"title":"Time constraints","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Time_constraints"}}');var s=t(74848),i=t(28453);const r={id:"Startup_constraints"},o="Startup constraints",c={},l=[];function d(e){const n={admonition:"admonition",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"startup-constraints",children:"Startup constraints"})}),"\n",(0,s.jsx)(n.p,{children:"You can write constraints that are evaluated when a Rules Engine is started. This happens for example when you start an application, run a batch job, or connect to the USoft Remote Rules Serice. This allows you to define a restrictive rule that prevents a user from starting a USoft application after a certain time, or a productive rule that keeps track of which users use the application and at what time."}),"\n",(0,s.jsx)(n.p,{children:"To use this mechanism:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open the Definer."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"From the menu, select Tools, Rules Engine Parameters."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Query for the Parameter Setting with name STARTUP_EVENT."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Change the Value to True."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This causes a default generated table called T_EVENT to be generated in your repository."}),"\n",(0,s.jsx)(n.p,{children:"When a Rules Engine is started, a record with a generated unique session id and the 'STARTUP' event value is inserted in the T_EVENT application table. This table contains two columns:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SESSION_ID"}),"\n",(0,s.jsx)(n.li,{children:"EVENT"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"These two columns make up the primary key and are based on the SHORT_TEXT domain."}),"\n",(0,s.jsx)(n.p,{children:"If a restrictive constraint that is defined on T_EVENT is evaluated, the constraint message will be displayed, and you cannot use the application. The application can only be closed."}),"\n",(0,s.jsx)(n.p,{children:"To be able to use startup constraints:"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"In a production environment, make sure that background INSERT rights have been defined on the T_EVENT table."})}),"\n",(0,s.jsx)(n.p,{children:"The generated unique session identifier can also be used in other SQL statements. For this, you can use the SESSION_ID() USoft function with no parameters. This function returns the SESSION_ID value that was inserted in the T_EVENT table when the Rules Engine was started."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(96540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);