"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[74411],{14652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_properties","title":"Release properties","description":"Each release in Delivery Manager has a set of release properties. To view properties of the current, select Release, Current Release from the menu.","source":"@site/docs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_properties.md","sourceDirName":"Continuous_delivery/Understanding_USoft_Delivery_Manager","slug":"/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_properties","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_properties","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Release_properties"},"sidebar":"sidebar","previous":{"title":"Release trees","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_trees"},"next":{"title":"Release management: Deliver phase","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Deliver_phase"}}');var s=n(74848),a=n(28453);const r={id:"Release_properties"},l="Release properties",o={},d=[{value:"Release frame ID",id:"release-frame-id",level:3},{value:"Root folder",id:"root-folder",level:3},{value:"Release version",id:"release-version",level:3},{value:"Previous release version",id:"previous-release-version",level:3},{value:"Release folder",id:"release-folder",level:3},{value:"Created",id:"created",level:3},{value:"Last used",id:"last-used",level:3},{value:"Current Y/N",id:"current-yn",level:3},{value:"Initial Y/N",id:"initial-yn",level:3},{value:"Put current registry Y/N",id:"put-current-registry-yn",level:3},{value:"Include attachments Y/N",id:"include-attachments-yn",level:3},{value:"Copy deliverables to next release Y/N",id:"copy-deliverables-to-next-release-yn",level:3},{value:"Files blocked",id:"files-blocked",level:3},{value:"Folders blocked",id:"folders-blocked",level:3},{value:"Packing slip base",id:"packing-slip-base",level:3},{value:"Packing slip XSL",id:"packing-slip-xsl",level:3},{value:"Packing slip output",id:"packing-slip-output",level:3},{value:"Include packing slip Y/N",id:"include-packing-slip-yn",level:3}];function h(e){const t={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"release-properties",children:"Release properties"})}),"\n",(0,s.jsxs)(t.p,{children:["Each release in Delivery Manager has a set of ",(0,s.jsx)(t.em,{children:"release properties"}),". To view properties of the current, select Release, Current Release from the menu."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Some release properties may be changed at all times."}),"\n",(0,s.jsx)(t.li,{children:"Others may be changed only at the time when you create a new release, or only when you (re-)initialise the release tree."}),"\n",(0,s.jsx)(t.li,{children:"Most properties of the current release are automatically copied to the new release when you perform the Create New Release routine."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The release properties are:"}),"\n",(0,s.jsx)(t.h3,{id:"release-frame-id",children:"Release frame ID"}),"\n",(0,s.jsx)(t.p,{children:"A meaningless ID that serves to identify release versions uniquely and is generated by Delivery Manager."}),"\n",(0,s.jsx)(t.h3,{id:"root-folder",children:"Root folder"}),"\n",(0,s.jsx)(t.p,{children:"The folder path that identifies the root folder as seen from the machine(s) that you deliver from."}),"\n",(0,s.jsxs)(t.p,{children:["You can refer to this folder path by using the ",(0,s.jsx)(t.code,{children:"${root}"})," source variable."]}),"\n",(0,s.jsx)(t.h3,{id:"release-version",children:"Release version"}),"\n",(0,s.jsx)(t.p,{children:'The name of the current release version,which is automatically also the name of the current version of the top-level application. When you call a release action, this will cause deliverables to be included in this version. This happens by placing the deliverables in the release folder on the file system (see also the "Release folder" property below).'}),"\n",(0,s.jsx)(t.h3,{id:"previous-release-version",children:"Previous release version"}),"\n",(0,s.jsx)(t.p,{children:"The name of the most recent previous release version (if any), which is automatically also the name of the most recent previous version of the top-level application and the name of the previous release folder."}),"\n",(0,s.jsx)(t.p,{children:'This property is used for comparison purposes. When you call an action that releases data (metadata, authdata or appdata), Delivery Manager attempts to perform a data comparison and writes the result to a file containing "diff" in its name. This allows you to see the differences with the same file in the previous version. If the previous version was the initial version, comparison is with an empty set. The result of such a comparison is that all data currently present are data added in the current release.'}),"\n",(0,s.jsx)(t.p,{children:"You can revert to the previous release version."}),"\n",(0,s.jsxs)(t.p,{children:["You can refer to the subfolder of the root folder that has the previous release version name by using the ",(0,s.jsx)(t.code,{children:"${previous}"})," source variable."]}),"\n",(0,s.jsx)(t.h3,{id:"release-folder",children:"Release folder"}),"\n",(0,s.jsx)(t.p,{children:'The folder path leading from the machine(s) from which you deliver to the folder where deliverables are currently written to. "Release folder" is the combination of "Root folder" and "Release version". If "Root folder" is :'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\\\\fs\\Releases\\TRAVEL \n"})}),"\n",(0,s.jsx)(t.p,{children:'and "Application version" is :'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"1.0\n"})}),"\n",(0,s.jsx)(t.p,{children:'Then "Release folder" is :'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\\\\fs\\Releases\\TRAVEL\\1.0\n"})}),"\n",(0,s.jsxs)(t.p,{children:['You can refer to "Release folder" by using the ',(0,s.jsx)(t.code,{children:"${release}"})," source variable."]}),"\n",(0,s.jsx)(t.h3,{id:"created",children:"Created"}),"\n",(0,s.jsx)(t.p,{children:"The date and time when the current release was created."}),"\n",(0,s.jsx)(t.h3,{id:"last-used",children:"Last used"}),"\n",(0,s.jsx)(t.p,{children:"The date and time when Delivery Manager last wrote deliverables to the current release folder through the execution of a release action."}),"\n",(0,s.jsx)(t.h3,{id:"current-yn",children:"Current Y/N"}),"\n",(0,s.jsx)(t.p,{children:"An indicator that the release is the current release and that its release folder is the folder where deliverables are currently written to. Exactly 1 release known to Delivery Manager has Current = Yes at any one time."}),"\n",(0,s.jsx)(t.h3,{id:"initial-yn",children:"Initial Y/N"}),"\n",(0,s.jsx)(t.p,{children:'An indicator that the release is the first release in the current release tree. Exactly 1 release known to Delivery Manager has Initial = Yes at any one time. If the current release is the initial release, when performing comparison actions, Delivery Manager knows not to expect a previous version of data and performs a comparison with an empty set of data instead. The result of such a comparison is all data currently present: all this data is considered to have been "added" in the initial release.'}),"\n",(0,s.jsx)(t.h3,{id:"put-current-registry-yn",children:"Put current registry Y/N"}),"\n",(0,s.jsx)(t.p,{children:'If this indicator is set to Yes, the XML document in the Registries window (choose Define, Registries from the menu) that has Current = Yes (if any) is writtten to the release folder as a file named "registry.xml", overwriting any other file by that name in that folder.'}),"\n",(0,s.jsx)(t.h3,{id:"include-attachments-yn",children:"Include attachments Y/N"}),"\n",(0,s.jsx)(t.p,{children:"If this indicator is set to Yes, attachments are written to sections of the current release folder if you have defined attachments for that section and whenever you release deliverables to that section."}),"\n",(0,s.jsx)(t.p,{children:"If this indicator is set to No, attachments are NOT output for any of the sections."}),"\n",(0,s.jsx)(t.h3,{id:"copy-deliverables-to-next-release-yn",children:"Copy deliverables to next release Y/N"}),"\n",(0,s.jsx)(t.p,{children:"If this indicator is set to No (the default), when you transition to the next release, NO deliverables are automatically copied to the new release folder."}),"\n",(0,s.jsx)(t.p,{children:"If this indicator is set to Yes, when you transition to the next release, all the deliverables of the current release are automatically copied to the new release folder as a starting set of deliverables, with the exception of deliverables that are release-specific by definition:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The \\scripts section"}),"\n",(0,s.jsx)(t.li,{children:'Files in the \\metadata section that have "diff" or "initial" in their name'}),"\n",(0,s.jsx)(t.li,{children:'Files in the \\appdata section that have "diff" or "initial" in their name'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Also, any files and folders that are blocked for the release (as explained in the sections below) are excluded from the copy operation."}),"\n",(0,s.jsx)(t.p,{children:'Setting "Copy deliverables to next release" = Yes is attractive if you want to see a complete set of deliverables in the current release folder at all times.'}),"\n",(0,s.jsx)(t.p,{children:'Setting "Copy deliverables to next release" = No is attractive when you release often and you do not want large volumes of data to be copied to each new release folder. It is also attractive if you have releases that differ only slightly from the previous release, and you want to see at a glance where the differences are by only having the differing deliverables in the new release folder. The drawback of this way of working is that a release folder distributed on a target machine does not contain all the deliverables. If you work in this way with multiple subsequent releases, it becomes increasingly unclear for operators on target machines to know what actions to perform in order to assemble a correct and complete set of deliverables.'}),"\n",(0,s.jsx)(t.h3,{id:"files-blocked",children:"Files blocked"}),"\n",(0,s.jsx)(t.p,{children:'This list of relative filepaths has an effect only if you set "Copy deliverables to next release" = Yes. Files placed in this list and that have Blocked = Yes are NOT copied automatically to the new release folder when you transition to a new release. Make sure each entry is a relative path leading from the release folder to an individual file. Entries that do not meet this condition are ignored. Make sure each entry starts with a single backslash (\xa0\\\xa0).'}),"\n",(0,s.jsx)(t.h3,{id:"folders-blocked",children:"Folders blocked"}),"\n",(0,s.jsx)(t.p,{children:'This list of relative folderpaths has an effect only if you set "Copy deliverables to next release" = Yes. Folders placed in this list and that have Blocked = Yes are NOT copied automatically to the new release folder when you transition to a new release. Make sure each entry is a relative path leading from the release folder to an individual folder. Entries that do not meet this condition are ignored. Make sure each entry starts with a single backslash (\xa0\\\xa0).'}),"\n",(0,s.jsx)(t.h3,{id:"packing-slip-base",children:"Packing slip base"}),"\n",(0,s.jsx)(t.p,{children:'A standard version of the document named "packing-slip.xml" that is output to the release folder if you have set "Include packing slip" = Yes.'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'If you leave "Packing slip XSL" empty, then "Packing slip base" equals "Packing slip output" and shows the document that is output.'}),"\n",(0,s.jsx)(t.li,{children:'If you specify a value for "Packing slip XSL", "Packing slip base" shows the document that the XSL transformation is applied to. "Packing slip output" shows the result.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'"Packing slip base" is updated :'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'When you run a task step that executes a "Release..." action.'}),"\n",(0,s.jsx)(t.li,{children:'When you press the Refresh button on the "Packing slip" tab of the Current Release window.'}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"packing-slip-xsl",children:"Packing slip XSL"}),"\n",(0,s.jsx)(t.p,{children:"An optional reference to an XSL transformation stored in Delivery Manager as custom XSL."}),"\n",(0,s.jsx)(t.p,{children:'This field allows you to tailor the contents of the "Packing slip base" document to your needs.'}),"\n",(0,s.jsx)(t.p,{children:'If you specify "Packing slip XSL", each time you run a task step that executes a "Release..." action, and each time you press the Refresh button on the "Packing slip" tab of the Current Release window, the referenced XSL transformation is applied to "Packing slip base" just before the document is actually released.'}),"\n",(0,s.jsx)(t.p,{children:'In the "Packing slip output" field, you can view the result of the transformation.'}),"\n",(0,s.jsx)(t.h3,{id:"packing-slip-output",children:"Packing slip output"}),"\n",(0,s.jsx)(t.p,{children:'The document named "packing-slip.xml" that is output to the release folder if you have set "Include packing slip" = Yes.'}),"\n",(0,s.jsx)(t.p,{children:'"Packing slip output" is updated :'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'When you run a task step that executes a "Release..." action.'}),"\n",(0,s.jsx)(t.li,{children:'When you press the Refresh button on the "Packing slip" tab of the Current Release window.'}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"include-packing-slip-yn",children:"Include packing slip Y/N"}),"\n",(0,s.jsx)(t.p,{children:'If this indicator is set to Yes, the XML document shown in the "Packing slip output" field is written to the current release folder when you run any release task.'}),"\n",(0,s.jsx)(t.p,{children:'If this indicator is set to No, there will be no "packing-slip.xml" document in the release folder after you run a release task.'})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);