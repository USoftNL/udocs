"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[10167],{28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>c});var n=o(96540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},55727:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"Extensions/RDMI_Components/Components_Standard_protocol","title":"Components: Standard protocol","description":"The standard protocol is the default way of interacting with an RDMI component. The RDMI component is treated as a procedure that you call by (optionally) passing a single set of values as input parameters (if applicable). The input data may consist of hard-coded values or values found in a single row in a table.","source":"@site/docs/Extensions/RDMI_Components/Components_Standard_protocol.md","sourceDirName":"Extensions/RDMI_Components","slug":"/Extensions/RDMI_Components/Components_Standard_protocol","permalink":"/udocs/Extensions/RDMI_Components/Components_Standard_protocol","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Components_Standard_protocol"},"sidebar":"sidebar","previous":{"title":"How many times a called component is executed?","permalink":"/udocs/Extensions/RDMI_Components/How_many_times_a_called_component_is_executed"},"next":{"title":"Query protocol, component table","permalink":"/udocs/Extensions/RDMI_Components/Query_protocol_component_table"}}');var s=o(74848),a=o(28453);const r={id:"Components_Standard_protocol"},c="Components: Standard protocol",d={},i=[{value:"How the standard protocol works",id:"how-the-standard-protocol-works",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"components-standard-protocol",children:"Components: Standard protocol"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"standard protocol"})," is the default way of interacting with an RDMI component. The RDMI component is treated as a procedure that you call by (optionally) passing a single set of values as input parameters (if applicable). The input data may consist of hard-coded values or values found in a single row in a table."]}),"\n",(0,s.jsx)(t.p,{children:"The method typically returns a regular return value. In addition, possibly, it returns one or more output parameters."}),"\n",(0,s.jsx)(t.h2,{id:"how-the-standard-protocol-works",children:"How the standard protocol works"}),"\n",(0,s.jsx)(t.p,{children:"When you call a method using the standard protocol through an INVOKE ... WITH SELECT ... statement, the values from the record(s) retrieved by the SELECT (if any) are passed as input parameters to the method."}),"\n",(0,s.jsx)(t.p,{children:"Such an RDMI call is implemented by going through these steps:"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0Fetch a record from the SELECT."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0Create the RDMI component."}),"\n",(0,s.jsx)(t.p,{children:"3.\xa0Execute the method and catch any Out parameters. Return the record to the calling application."}),"\n",(0,s.jsx)(t.p,{children:"4.\xa0Destroy the component."}),"\n",(0,s.jsx)(t.p,{children:"5.\xa0Fetch the next record from the SELECT, etc."}),"\n",(0,s.jsx)(t.p,{children:"In this process, the component is destroyed and re-created for each record in the SELECT."}),"\n",(0,s.jsx)(t.p,{children:"If the INVOKE clause is used without a WITH clause, of if you call the component using function call syntax, then you only have a single set of input values. The loop of steps 1 and 5 does not apply. Steps 2, 3 and 4 apply only once."})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);