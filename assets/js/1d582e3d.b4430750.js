"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[3949],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(96540);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}},55104:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcifnotthen","title":"pc:if-not-then","description":"This article is about the pc:if-not-then Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcifnotthen.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcifnotthen","permalink":"/udocs/Repositories/Blend_directives/pcifnotthen","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcifnotthen"},"sidebar":"sidebar","previous":{"title":"pc:if","permalink":"/udocs/Repositories/Blend_directives/pcif"},"next":{"title":"pc:if-then","permalink":"/udocs/Repositories/Blend_directives/pcifthen"}}');var s=t(74848),o=t(28453);const c={id:"pcifnotthen"},r="pc",d={},l=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"pc",children:["pc",":if-not-then"]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This article is about the ",(0,s.jsxs)(n.strong,{children:["pc",":if-not-then"]}),(0,s.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"Subjects a script section to the reverse of a condition. If the condition is NOT met, the section is executed, otherwise it is not."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Syntax"}),"\n\xa0"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<pc:if-not-then test="*xpath >> boolean*">\n\n*conditional-content*\n\n</pc:if-not-then>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The required ",(0,s.jsx)(n.strong,{children:"test"})," evaluates to a boolean. Only if it evaluates to false() according to the rules of the xslutil",":test","() Blend function is conditional-content processed."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Examples"})}),"\n",(0,s.jsxs)(n.p,{children:["The element ",(0,s.jsx)(n.code,{children:"<PrintThis/>"})," is written to standard output in:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<pc:if-not-then test="1=2">\n  <PrintThis/>\n</pc:if-not-then>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The element ",(0,s.jsx)(n.code,{children:"<PrintThis/>"})," is NOT written to standard output in:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<pc:if-not-then test="1=1">\n <PrintThis/>\n</pc:if-not-then>\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xa0"})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);