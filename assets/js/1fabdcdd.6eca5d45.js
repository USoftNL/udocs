"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[42624],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}},61063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcReadXmlFiles","title":"pc:ReadXmlFiles","description":"This article is about the pc:ReadXmlFiles Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcReadXmlFiles.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcReadXmlFiles","permalink":"/udocs/Repositories/Blend_directives/pcReadXmlFiles","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcReadXmlFiles"},"sidebar":"sidebar","previous":{"title":"pc:ReadXmlFile","permalink":"/udocs/Repositories/Blend_directives/pcReadXmlFile"},"next":{"title":"pc:ReplaceVariables","permalink":"/udocs/Repositories/Blend_directives/pcReplaceVariables"}}');var s=n(74848),r=n(28453);const l={id:"pcReadXmlFiles"},o="pc",a={},c=[{value:"<strong>pc</strong>",id:"pc-1",level:2},{value:"Errors",id:"errors",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"pc",children:["pc",":ReadXmlFiles"]})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This article is about the ",(0,s.jsxs)(t.strong,{children:["pc",":ReadXmlFiles"]}),(0,s.jsx)(t.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"pc-1",children:(0,s.jsxs)(t.strong,{children:["pc",":ReadXmlFiles"]})}),"\n",(0,s.jsx)(t.p,{children:"Attempts to parse the contents of a specified set of files as XML. If successful, returns that XML content as a node set."}),"\n",(0,s.jsx)(t.p,{children:'If not successful, an error is returned. See the "Errors" section.'}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Syntax"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'<pc:ReadXmlFiles filepath="*file-path*">\n     <file filepath="*file-path*"/>\n     <file .../>\n     ...\n</pc:ReadXmlFiles>\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In each of the ",(0,s.jsx)(t.strong,{children:"file"})," child elements, the required ",(0,s.jsx)(t.strong,{children:"filepath"})," points to the file to be read. If ",(0,s.jsx)(t.strong,{children:"filepath"})," is a relative filepath, the path is relative to the current working directory."]}),"\n",(0,s.jsxs)(t.p,{children:["In the pc",":ReadXmlFiles"," parent element, ",(0,s.jsx)(t.strong,{children:"filepath"})," is optional. In this position, ",(0,s.jsx)(t.strong,{children:"filepath"})," must point to a directory rather than to a file, and the filepath values in the child nodes must be relative paths. The latter are interpreted relative to the directory that filepath in the parent element points to."]}),"\n",(0,s.jsxs)(t.p,{children:["The name ",(0,s.jsx)(t.strong,{children:"file"})," used for the child elements could be any valid XML element name. This type of element is only a pretext for getting a filepath attribute where you can specify one of the files to be read."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Example"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'<pc:ReadXmlFiles filepath="c:\\definerData">\n\n     <file filepath="definerData1.xml"\n          assign:doc1_tables="documentRoot/t_table/*"\n          assign:doc1_constraints="documentRoot/t_constraints/*" />\n     <file filepath="definerData5.xml" assign:myVariable="."/>\n\n</pc:ReadXmlFiles>\n'})}),"\n",(0,s.jsx)(t.h2,{id:"errors",children:"Errors"}),"\n",(0,s.jsx)(t.p,{children:"If one of the files does not contain valid XML, an <Error> element is returned such as the following:\n<Error>The '<this>' start tag on line 2 position 4 does not match the end tag of 'that'.</Error>"})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);