"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[77177],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}},49733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"Repositories/Blend_directives/pctext","title":"pc:text","description":"This article is about the pc:text Blend directive.","source":"@site/docs/Repositories/Blend_directives/pctext.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pctext","permalink":"/udocs/Repositories/Blend_directives/pctext","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pctext"},"sidebar":"sidebar","previous":{"title":"pc:terminate","permalink":"/udocs/Repositories/Blend_directives/pcterminate"},"next":{"title":"pc:textmsg","permalink":"/udocs/Repositories/Blend_directives/pctextmsg"}}');var i=n(74848),r=n(28453);const c={id:"pctext"},o="pc",d={},p=[{value:"<strong>pc</strong>",id:"pc-1",level:2},{value:"Attributes",id:"attributes",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"pc",children:["pc",":text"]})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["This article is about the ",(0,i.jsxs)(t.strong,{children:["pc",":text"]}),(0,i.jsx)(t.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"pc-1",children:(0,i.jsxs)(t.strong,{children:["pc",":text"]})}),"\n",(0,i.jsx)(t.p,{children:"Concatenates all the text nodes found in its contents (including whitespace characters) and returns the result as a string."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Syntax"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"<pc:text>\n*contents*\n</pc:text>\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsxs)(t.p,{children:["pc",":text"," does not support the disable-output-escaping attribute, unlike pc",":value-of"," (and XSLT's <xsl",":text","> and <xsl",":value-of",">)."]})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Example"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<pc:text>\n   <d att="text1">text2</d>  <e>text3</e>\n   text4\n</pc:text>\n'})}),"\n",(0,i.jsx)(t.p,{children:"The return value is:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"text2text3\n   text4\n"})}),"\n",(0,i.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsxs)(t.p,{children:["The pc",":text"," directive supports the pc",":if"," attribute."]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);