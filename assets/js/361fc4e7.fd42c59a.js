"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[79580],{10674:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Services/Event_processing/Event_production_Example_3_Queue_service_that_processes_output_events","title":"Event production Example 3: Queue service that processes output events","description":"The following step-by-step instructions are for sending an output event from a Travel Agency model. The example is of an asynchronous output processing pattern.","source":"@site/docs/Services/Event_processing/Event_production_Example_3_Queue_service_that_processes_output_events.md","sourceDirName":"Services/Event_processing","slug":"/Services/Event_processing/Event_production_Example_3_Queue_service_that_processes_output_events","permalink":"/udocs/Services/Event_processing/Event_production_Example_3_Queue_service_that_processes_output_events","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Event_production_Example_3_Queue_service_that_processes_output_events"},"sidebar":"sidebar","previous":{"title":"Event production Example 2: Job that processes queued output events","permalink":"/udocs/Services/Event_processing/Event_production_Example_2_Job_that_processes_queued_output_events"},"next":{"title":"Server configuration","permalink":"/udocs/Services/Server_configuration"}}');var r=s(74848),i=s(28453);const o={id:"Event_production_Example_3_Queue_service_that_processes_output_events"},c="Event production Example 3: Queue service that processes output events",h={},a=[{value:"Creating a queue service for processing messages in a queue table",id:"creating-a-queue-service-for-processing-messages-in-a-queue-table",level:2},{value:"Creating a REST service that picks up output events",id:"creating-a-rest-service-that-picks-up-output-events",level:2},{value:"Creating a constraint that sends a message",id:"creating-a-constraint-that-sends-a-message",level:2},{value:"Publishing the solution",id:"publishing-the-solution",level:2},{value:"Testing the implementation",id:"testing-the-implementation",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"event-production-example-3-queue-service-that-processes-output-events",children:"Event production Example 3: Queue service that processes output events"})}),"\n",(0,r.jsx)(t.p,{children:"The following step-by-step instructions are for sending an output event from a Travel Agency model. The example is of an asynchronous output processing pattern."}),"\n",(0,r.jsx)(t.p,{children:"The output events have previously been stored as XML messages in a queue table named OUTPUT_QUEUE_SCHEDTOUR. See Example: Model and rules for creating output events."}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-queue-service-for-processing-messages-in-a-queue-table",children:"Creating a queue service for processing messages in a queue table"}),"\n",(0,r.jsx)(t.p,{children:"To create a queue service for processing messages in a queue table:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0In Service Definer, create a SQL statement that selects the xml from the output queue table. Set the following values:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Statement name"}),(0,r.jsx)(t.td,{children:"PROCESS_QUEUE_SCHEDTOUR"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Application Name"}),(0,r.jsx)(t.td,{children:"TRAVEL"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Statement:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'INVOKE   BatchRunner.PROCESS_QUEUE_SCHEDTOUR WITH \nSELECT   :id      "MESSAGE_ID"\n,        \'True\'   "-quiet"\n'})}),"\n",(0,r.jsx)(t.p,{children:"Save work. Click the Check button to have your SQL syntax checked. If it is correct, the Correct = Yes flag is set."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Choose Services, New Queue Service from the menu. In the dialog, set the following values:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Queue Service Name"}),(0,r.jsx)(t.td,{children:"send_schedtour"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Application Name"}),(0,r.jsx)(t.td,{children:"TRAVEL"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Queue Table Name"}),(0,r.jsx)(t.td,{children:"OUTPUT_QUEUE_SCHEDTOUR"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Selection Connection Name"}),(0,r.jsx)(t.td,{children:"output_queue_select"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Processing Connection Name"}),(0,r.jsx)(t.td,{children:"output_queue_process"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Process Statement Name"}),(0,r.jsx)(t.td,{children:"PROCESS_QUEUE_SCHEDTOUR"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Press OK. Notice that the following are offered in the Catalog on the left-hand side for inspection:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["A Service(Other) named ",(0,r.jsx)(t.strong,{children:"send_schedtour"}),". \xa0"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Two Connections named ",(0,r.jsx)(t.strong,{children:"output_queue_select"})," and ",(0,r.jsx)(t.strong,{children:"output_queue_process"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Both connections have a default rules service added, using port 7777. Change the port number as needed. Both connections may use the same port but they also may use different ports."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"You can also used the same connection name for Selection Connection Name and Process Connection Name. For administration reasons it might be easier to use different names, that may in fact use the Rules Service."}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-rest-service-that-picks-up-output-events",children:"Creating a REST service that picks up output events"}),"\n",(0,r.jsx)(t.p,{children:"In Service Definer, create a REST service that will receive a signal from the Rules Engine when a new output event is added to the queue table:"}),"\n",(0,r.jsx)(t.p,{children:'1.\xa0In Service Definer, open a custom REST Service that is exposed by a Server, or create a new REST Service. For details, read the "Setting up your own REST service" help topic.'}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Click on the Fields tab. Add a new field with the following values:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Name"}),(0,r.jsx)(t.td,{children:"schedtour_event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Type"}),(0,r.jsx)(t.td,{children:"com.usoft.uservice.server.Event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Annotation"}),(0,r.jsx)(t.td,{children:'@com.usoft.uservice.server.EventInject(name="OUTPUT_QUEUE_SCHEDTOUR")'})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["The value of the ",(0,r.jsx)(t.strong,{children:"name"})," property in the Annotation must be the name of the queue table used for output events."]}),"\n",(0,r.jsx)(t.p,{children:"3.\xa0On the Methods tab of this REST service, define a method with the following values:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Method Name"}),(0,r.jsx)(t.td,{children:"schedtour_event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Relative URI Path"}),(0,r.jsx)(t.td,{children:"/schedtour_event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"REST HTTP Verb"}),(0,r.jsx)(t.td,{children:"POST"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Implementation:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"schedtour_event.signal();\n"})}),"\n",(0,r.jsx)(t.p,{children:"4.\xa0Check the REST service."}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-constraint-that-sends-a-message",children:"Creating a constraint that sends a message"}),"\n",(0,r.jsx)(t.p,{children:"The next step is to define a constraint that sends a message in response to a signal from the queue service."}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0In Definer, create a constraint with the following SQL Statement:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INVOKE \xa0 http.send WITH \nSELECT \xa0 'http://localhost:8090/travel/schedtour_event'\n, \xa0 \xa0 \xa0 \xa0id\nFROM \xa0 \xa0 output_queue_schedtour\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"where http.send****is an RDMI method that sends an HTTP POST request to the REST service that picks up output events. This is the service that exposes the schedtour_event method."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Check the constraint."}),"\n",(0,r.jsx)(t.h2,{id:"publishing-the-solution",children:"Publishing the solution"}),"\n",(0,r.jsx)(t.p,{children:"To publish the queue service:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0Choose Define, Servers, and retrieve the record of the Server in which you want to expose the queue service, or create a new Server."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Associate the new queue service with this Server."}),"\n",(0,r.jsx)(t.p,{children:"3.\xa0On the Server Properties tab, add the following properties:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"send_schedtour#USoftPassword. Set the value to a user password known in Authorizer."}),"\n",(0,r.jsx)(t.li,{children:"send_schedtour#USoftUser. Set the value to a user name known in Authorizer."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"4.\xa0With input focus on the Server record, choose Publish and Restart from the menu."}),"\n",(0,r.jsx)(t.p,{children:"To publish the service that picks up the output events:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0Choose Define, Servers, and retrieve the record of the Server for output events, or create a new Server."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Associate with this Server the REST Service that picks up the output events. This is the service that contains the schedtour_event method."}),"\n",(0,r.jsx)(t.p,{children:"3.\xa0With input focus on the Server record, choose Publish, Publish and Restart from the menu."}),"\n",(0,r.jsx)(t.h2,{id:"testing-the-implementation",children:"Testing the implementation"}),"\n",(0,r.jsx)(t.p,{children:"To test the implementation:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0Check that, after starting the Server, messages in the queue table that had not been processed (Status field is NONE) are now processed successfully, or processed with error."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Via the client/server GUI, add a new record to the OUTPUT_QUEUE_SCHEDTOUR queue table. Check that the record is processed automatically."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);