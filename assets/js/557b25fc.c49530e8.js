"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[25564],{837:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Web_and_app_UIs/UDB_udb/udbcommit","title":"$.udb.commit()","description":"----","source":"@site/docs/Web_and_app_UIs/UDB_udb/udbcommit.md","sourceDirName":"Web_and_app_UIs/UDB_udb","slug":"/Web_and_app_UIs/UDB_udb/udbcommit","permalink":"/udocs/Web_and_app_UIs/UDB_udb/udbcommit","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"USoft11","permalink":"/udocs/tags/u-soft-11"},{"inline":true,"label":"USoft10","permalink":"/udocs/tags/u-soft-10"}],"version":"current","frontMatter":{"id":"udbcommit","tags":["USoft11","USoft10"]},"sidebar":"sidebar","previous":{"title":"$.udb.closePage()","permalink":"/udocs/Web_and_app_UIs/UDB_udb/udbclosePage"},"next":{"title":"$.udb.currentEmbeddedPageName()","permalink":"/udocs/Web_and_app_UIs/UDB_udb/udbcurrentEmbeddedPageName"}}');var i=n(74848),o=n(28453);const a={id:"udbcommit",tags:["USoft11","USoft10"]},d="$.udb.commit()",r={},c=[{value:"<strong>$.udb.commit()</strong>",id:"udbcommit-1",level:2},{value:"Fast dependent commits: waitPending, timeout",id:"fast-dependent-commits-waitpending-timeout",level:2},{value:"Related events",id:"related-events",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"udbcommit",children:"$.udb.commit()"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"USoft 11``{.vs_11}"})}),"\n",(0,i.jsx)(t.admonition,{type:"danger",children:(0,i.jsxs)(t.p,{children:["This article describes the USoft 10 product only.\nIn USoft 11, the web UI API was revised and improved. For full details, go to:\n",(0,i.jsx)(t.a,{href:"/udocs/Web_and_app_UIs/UDB_udb/Revised_web_UI_API_in_USoft_11",children:"Revised web UI API in USoft 11"})]})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"USoft 10``{.vs_10}"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["This article is about the ",(0,i.jsx)(t.strong,{children:"commit()"})," function of the ",(0,i.jsx)(t.a,{href:"/Web_and_app_UIs/UDB_udb",children:"udb object"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"udbcommit-1",children:(0,i.jsx)(t.strong,{children:"$.udb.commit()"})}),"\n",(0,i.jsx)(t.p,{children:"Commits data manipulations (INSERT, UPDATE, DELETE)."}),"\n",(0,i.jsxs)(t.p,{children:["Returns a Promise object or the 'this' object. From USoft 10.0.1I, returns a ",(0,i.jsx)(t.a,{href:"/udocs/Web_and_app_UIs/JavaScript/Promises_for_asynchronous_Javascript",children:"udbPromise"})," instead of a Promise object."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Syntax"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:".commit( *options* )\n\n*options*       ::=  {\n    quiet:  *quiet*,\n    waitState:  *wait-state*,\n    promise:  *promise*,\n    success:  *success-function*,\n    error:  *error-function*,\n\n    waitPending: *wait-pending*,\n    timeout:     *timeout*\n}\n\n*quiet*         ::=  { true | false }\n*wait-state*    ::=  { true | false }\n*promise*       ::=  { true | false }\n\n*wait-pending*  ::=  { true | false } \n*timeout*       ::=  { 20   | *integer* }\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Options"})," is a struct that can have the following items, all of which are optional."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Quiet"})," is a boolean determining whether a message is displayed if an error occurs. The default is false, meaning that an error is displayed by default."]}),"\n",(0,i.jsx)(t.p,{children:"*Wait-state\xa0*automatically adds a loading icon to the application window while this function is being executed. This is especially useful if the server needs an unusually long time to complete."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Promise"}),"\xa0determines the return value of this function. If ",(0,i.jsx)(t.em,{children:"promise"})," has the value 'true' (the default), a Promise object is returned. If ",(0,i.jsx)(t.em,{children:"promise"})," has the value 'false', the \u2018this\u2019 object is returned instead."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Success-function"})," is a function called after the operation has successfully completed."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"Error-function"})," is a function called if an error occurs."]}),"\n",(0,i.jsxs)(t.p,{children:["For the optional ",(0,i.jsx)(t.strong,{children:"waitPending"})," and ",(0,i.jsx)(t.strong,{children:"timeout"}),' options, see the "Fast dependent commits\u201d section below.']}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Example"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"$.udb.commit({ quiet: true})\n    .then(function(){\n             alert('Commit successfully completed.');\n      });\n"})}),"\n",(0,i.jsx)(t.h2,{id:"fast-dependent-commits-waitpending-timeout",children:"Fast dependent commits: waitPending, timeout"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["This section applies only to ",(0,i.jsx)(t.em,{children:"dependent"})," commits. They are commits that attempt to manipulate the same data."]})}),"\n",(0,i.jsx)(t.p,{children:"It is possible that a web page performs commits very closely after one another, as when you have checkboxes in a form and you have scripted that commits must happen as soon as the user changes the checkbox value."}),"\n",(0,i.jsxs)(t.p,{children:["If a web page performs 2 dependent commits with minimal time in between, it can happen that the second commit fails and raises a warning message that the first commit is busy. You can set ",(0,i.jsx)(t.em,{children:"wait-pending"})," to true to cause the second commit to wait until the first has finished, instead of raising this message. You can set ",(0,i.jsx)(t.em,{children:"timeout"})," (in seconds; default is 20) to determine the maximum time that the second commit is allowed to wait. If you set ",(0,i.jsx)(t.em,{children:"wait-pending"})," to false, the second commit will never wait: in this situation, it will always fail if it depends on another earlier commit that has not finished."]}),"\n",(0,i.jsx)(t.h2,{id:"related-events",children:"Related events"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Event"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Applies to"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Occurs when"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/udocs/Web_and_app_UIs/UDB_Events/beforecommit",children:"beforecommit"})}),(0,i.jsx)(t.td,{children:"Page objects"}),(0,i.jsx)(t.td,{children:"Before each commit action"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/udocs/Web_and_app_UIs/UDB_Events/postcommit",children:"postcommit"})}),(0,i.jsx)(t.td,{children:"Page objects"}),(0,i.jsx)(t.td,{children:"After each commit action"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var s=n(96540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);