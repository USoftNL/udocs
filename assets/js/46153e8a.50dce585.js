"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[9630],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const s={},c=i.createContext(s);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(c.Provider,{value:n},e.children)}},38447:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcignorewhitespace","title":"pc:ignorewhitespace","description":"This article is about the pc:ignorewhitespace Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcignorewhitespace.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcignorewhitespace","permalink":"/udocs/Repositories/Blend_directives/pcignorewhitespace","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcignorewhitespace"},"sidebar":"sidebar","previous":{"title":"pc:if-then","permalink":"/udocs/Repositories/Blend_directives/pcifthen"},"next":{"title":"pc:indent","permalink":"/udocs/Repositories/Blend_directives/pcindent"}}');var s=t(74848),c=t(28453);const r={id:"pcignorewhitespace"},o="pc",p={},d=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"pc",children:["pc",":ignorewhitespace"]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This article is about the ",(0,s.jsxs)(n.strong,{children:["pc",":ignorewhitespace"]}),(0,s.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"pc-1",children:(0,s.jsxs)(n.strong,{children:["pc",":ignorewhitespace"]})}),"\n",(0,s.jsx)(n.p,{children:"Strips, from the output of the parent element and all its descendent elements, all whitespace-only nodes (newlines, tabs, spaces) that can be identified as irrelevant. These include whitespace-only nodes in the source XML of your input script, but not whitespace specifically produced as part of the output of your script."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Syntax"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<*element* pc:ignorewhitespace="{ yes | no }"\n\n*content*\n\n</*element*>\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xa0"})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);