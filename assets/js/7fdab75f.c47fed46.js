"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[30761],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},59331:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Field_corrections_and_field_checks","title":"Field corrections and field checks","description":"Field corrections and field checks are corrections and checks applied to a column value being processed.","source":"@site/docs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Field_corrections_and_field_checks.md","sourceDirName":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine","slug":"/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Field_corrections_and_field_checks","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Field_corrections_and_field_checks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Field_corrections_and_field_checks"},"sidebar":"sidebar","previous":{"title":"Update-on-self corrections","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Updateonself_corrections"},"next":{"title":"Preconditions and postconditions","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Preconditions_and_postconditions"}}');var s=t(74848),o=t(28453);const a={id:"Field_corrections_and_field_checks"},c="Field corrections and field checks",d={},r=[{value:"Effect of field corrections and field checks",id:"effect-of-field-corrections-and-field-checks",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"field-corrections-and-field-checks",children:"Field corrections and field checks"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Field corrections"})," and ",(0,s.jsx)(n.strong,{children:"field checks"})," are corrections and checks applied to a column value being processed."]}),"\n",(0,s.jsx)(n.p,{children:"They are performed as soon as the user or the application has finished supplying or changing the column value, ie., in the pre-field phase of a field-validation event."}),"\n",(0,s.jsx)(n.p,{children:"Productive domain constraints are evaluated as field corrections. (Example 1.)"}),"\n",(0,s.jsx)(n.p,{children:"Restrictive domain constraints are evaluated as field checks. (Example 2.)"}),"\n",(0,s.jsx)(n.p,{children:"Domain constraints are NOT (re-)evaluated as a result of other productive domain constraints having an effect on the column value. They are also NOT evaluated as a result of their own effect. In other words, domain constraints do not have the recursive behaviour that is characteristic of table constraints."}),"\n",(0,s.jsx)(n.p,{children:"You can set the evaluation order between domain constraints on the same domain by setting the Position in Checking Order domain constraint attribute."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example 1"})}),"\n",(0,s.jsxs)(n.p,{children:["A business rule saying that a column value must always be a multiple of 0.5 is implemented as a productive domain constraint with the following expression for the ",(0,s.jsx)(n.strong,{children:"Make Sure That"})," attribute:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ROUND (DOMAIN * 2) / 2\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is evaluated as a field correction each time a field-validation event occurs for a column based on the domain associated with the domain constraint."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Example 2"})}),"\n",(0,s.jsxs)(n.p,{children:["A business rule saying that a column value must not contain colons or semicolons is implemented as a restrictive domain constraint with the following condition for the ",(0,s.jsx)(n.strong,{children:"Do Not Allow That"})," attribute:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:" \xa0 \xa0INSTR(DOMAIN,':') <> 0\nOR  INSTR(DOMAIN,';') <> 0\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is evaluated as a field check each time a field-validation event occurs for a column based on the domain associated with the domain constraint."}),"\n",(0,s.jsx)(n.p,{children:"\xa0"}),"\n",(0,s.jsx)(n.h2,{id:"effect-of-field-corrections-and-field-checks",children:"Effect of field corrections and field checks"}),"\n",(0,s.jsxs)(n.p,{children:["An evaluated field correction has the effect of changing any column value to the outcome of evaluating the expression in the ",(0,s.jsx)(n.strong,{children:"Make Sure That"})," attribute."]}),"\n",(0,s.jsxs)(n.p,{children:["In a field check, if the column value being checked does not satisfy the ",(0,s.jsx)(n.strong,{children:"Do Not Allow That"})," condition, processing is blocked and the constraint message defined for the domain constraint is returned. The attempted manipulation of the column value does not take place. If the field-validation event was raised by the user interactively attempting to leave a field, then this navigation is blocked and she remains in the field."]}),"\n",(0,s.jsx)(n.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);