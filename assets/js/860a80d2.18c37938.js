"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[86958],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var n=s(96540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}},43646:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Authorisation_and_access/Roles/Testing_roles_and_menus","title":"Testing roles and menus","description":"This help topic is an overview of different ways in which you can switch between different users, roles and menus in Development.","source":"@site/docs/Authorisation_and_access/Roles/Testing_roles_and_menus.md","sourceDirName":"Authorisation_and_access/Roles","slug":"/Authorisation_and_access/Roles/Testing_roles_and_menus","permalink":"/udocs/Authorisation_and_access/Roles/Testing_roles_and_menus","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Testing_roles_and_menus"},"sidebar":"sidebar","previous":{"title":"First Menu Pages of roles","permalink":"/udocs/Authorisation_and_access/Roles/First_Menu_Pages_of_roles"},"next":{"title":"Schemas and extension properties","permalink":"/udocs/Authorisation_and_access/Roles/Schemas_and_extension_properties"}}');var r=s(74848),o=s(28453);const i={id:"Testing_roles_and_menus"},a="Testing roles and menus",l={},c=[{value:"Method 1: Varying user-role associations",id:"method-1-varying-user-role-associations",level:3},{value:"Method 2: Varying the user&#39;s default role",id:"method-2-varying-the-users-default-role",level:3},{value:"Method 3: Runtime role switch",id:"method-3-runtime-role-switch",level:3},{value:"Method 4: Runtime user switch",id:"method-4-runtime-user-switch",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"testing-roles-and-menus",children:"Testing roles and menus"})}),"\n",(0,r.jsx)(t.p,{children:"This help topic is an overview of different ways in which you can switch between different users, roles and menus in Development."}),"\n",(0,r.jsx)(t.p,{children:"This is useful if you want to test the effect of roles and First Menu Pages that you are in the process of defining."}),"\n",(0,r.jsx)(t.p,{children:"The easiest way to test the effect of roles and menus is by using the default USoft client/server (Windows) application that you can automatically run from repository. To test First Menu Pages defined in USoft Web Designer, you need to set up a web server and test by running a browser-based default application locally."}),"\n",(0,r.jsx)(t.h3,{id:"method-1-varying-user-role-associations",children:"Method 1: Varying user-role associations"}),"\n",(0,r.jsx)(t.p,{children:"You can test different roles by having a test user associated with a different role each time. To switch from role A to role B, remove the record in USoft Authorizer that associates the test user with role A, then introduce a record that associates this user with role B."}),"\n",(0,r.jsx)(t.h3,{id:"method-2-varying-the-users-default-role",children:"Method 2: Varying the user's default role"}),"\n",(0,r.jsx)(t.p,{children:"You can also test different roles by giving a test user multiple roles and then varying the Default flag. A user has exactly 1 default role at any time. To switch from role A to role B, set Default = No in the record that associates the test user with role A, then set the Default = Yes in the record that associates the test user with role B."}),"\n",(0,r.jsx)(t.h3,{id:"method-3-runtime-role-switch",children:"Method 3: Runtime role switch"}),"\n",(0,r.jsx)(t.p,{children:"You can also test different roles by calling the SetUserGroup method of the RulesEngine internal component. To switch to a role called ROLE_B at runtime, call:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"select \xa0 \xa0 RulesEngine.SetRole( 'ROLE_B' )\n\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"When logged in, you can find out which role currently determines your access rights by executing:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"select \xa0 \xa0 role()\n\n"})}),"\n",(0,r.jsx)(t.h3,{id:"method-4-runtime-user-switch",children:"Method 4: Runtime user switch"}),"\n",(0,r.jsx)(t.p,{children:"You can also test different roles by having a separate test user for each different role, and then switching to a different runtime user by calling:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"select \xa0 \xa0 RulesEngine.SetUser( 'user', 'password', '' )\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"For example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"select \xa0 \xa0 RulesEngine.SetUser( 'ROLE_B_USER', 'ROLE_B_PASSWORD', '' )\n\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"You can find out the user as whom you are currently logged in:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"select \xa0 \xa0 user\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"\xa0"}),"\n",(0,r.jsx)(t.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);