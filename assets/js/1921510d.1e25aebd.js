"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[24176],{28453:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>a});var n=o(96540);const r={},s=n.createContext(r);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:t},e.children)}},55317:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"Desktop_UIs/ActiveX_Support/How_to_create_ActiveX_Control_Columns","title":"How to create ActiveX Control Columns","description":"In the Windows Designer, you can create ActiveX Control Columns. These controls have the look and feel of an imported ActiveX control while interacting with a column value stored for each record. The control must have a bindable property if this is to work.","source":"@site/docs/Desktop_UIs/ActiveX_Support/How_to_create_ActiveX_Control_Columns.md","sourceDirName":"Desktop_UIs/ActiveX_Support","slug":"/Desktop_UIs/ActiveX_Support/How_to_create_ActiveX_Control_Columns","permalink":"/udocs/Desktop_UIs/ActiveX_Support/How_to_create_ActiveX_Control_Columns","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"How_to_create_ActiveX_Control_Columns"},"sidebar":"sidebar","previous":{"title":"How to insert an ActiveX object","permalink":"/udocs/Desktop_UIs/ActiveX_Support/How_to_insert_an_ActiveX_object"},"next":{"title":"ActiveX Control property dialogs","permalink":"/udocs/Desktop_UIs/ActiveX_Support/ActiveX_Control_property_dialogs"}}');var r=o(74848),s=o(28453);const c={id:"How_to_create_ActiveX_Control_Columns"},a="How to create ActiveX Control Columns",l={},i=[];function u(e){const t={h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"how-to-create-activex-control-columns",children:"How to create ActiveX Control Columns"})}),"\n",(0,r.jsx)(t.p,{children:"In the Windows Designer, you can create ActiveX Control Columns. These controls have the look and feel of an imported ActiveX control while interacting with a column value stored for each record. The control must have a bindable property if this is to work."}),"\n",(0,r.jsx)(t.p,{children:"To create an ActiveX Control Column, for instance, an ActiveX Calendar look and feel for a DATE database column:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0On the Controls tab page of the , expand the Column Display, OLE Container, and ActiveX Control Column nodes."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0From the list, select the ActiveX Control Column you want to use and place the cursor on it. If it is not there, copy or download it onto your machine first, and re-start the Windows Designer."}),"\n",(0,r.jsx)(t.p,{children:'3.\xa0From the catalog, make a new ssublcass for the control and rename the new subclass to a manageable name, for instance, "MyCalendarColumn".'}),"\n",(0,r.jsx)(t.p,{children:"4.\xa0Open the window class containing the ActiveX control column. If you want ALL fields based on a particular DATE column to have the Calendar look and feel, choose the Base Table class for the table."}),"\n",(0,r.jsx)(t.p,{children:"5.\xa0Select the column."}),"\n",(0,r.jsx)(t.p,{children:'6.\xa0Open the Property Inspector and set the Display Class property to the name of the newly created ActiveX Column Control subclass (e.g. "MyCalendarColumn").'}),"\n",(0,r.jsx)(t.p,{children:"7.\xa0Save."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);