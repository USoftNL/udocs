"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[55826],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(96540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},48438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Modeller_and_Rules_Engine/Rules_Engine_properties/RecordFactsCacheSize","title":"RecordFactsCacheSize","description":"This article is about the RecordFactsCacheSizeRules Engine property.","source":"@site/docs/Modeller_and_Rules_Engine/Rules_Engine_properties/RecordFactsCacheSize.md","sourceDirName":"Modeller_and_Rules_Engine/Rules_Engine_properties","slug":"/Modeller_and_Rules_Engine/Rules_Engine_properties/RecordFactsCacheSize","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/RecordFactsCacheSize","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"RecordFactsCacheSize"},"sidebar":"sidebar","previous":{"title":"RdbmsVersion","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/RdbmsVersion"},"next":{"title":"RowsCommitted","permalink":"/udocs/Modeller_and_Rules_Engine/Rules_Engine_properties/RowsCommitted"}}');var s=n(74848),i=n(28453);const o={id:"RecordFactsCacheSize"},c="RecordFactsCacheSize",a={},d=[{value:"<strong>RecordFactsCacheSize</strong>",id:"recordfactscachesize-1",level:2},{value:"Setting this property",id:"setting-this-property",level:2},{value:"Getting this property",id:"getting-this-property",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"recordfactscachesize",children:"RecordFactsCacheSize"})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This article is about the ",(0,s.jsx)(t.strong,{children:"RecordFactsCacheSize"}),(0,s.jsx)(t.a,{href:"/Modeller_and_Rules_Engine/Rules_Engine_properties",children:"Rules Engine property"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"recordfactscachesize-1",children:(0,s.jsx)(t.strong,{children:"RecordFactsCacheSize"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"RecordFactsCacheSize"}),' Rules Engine property can be used to override the "',(0,s.jsx)(t.a,{href:"/udocs/Authorisation_and_access/Deployment_configurations/Cache_Size",children:"Cache Size"}),'" deployment configuration parameter setting for the current deployment context and for the duration of the current session.']}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"You can set deployment configuration parameters in USoft Authorizer for 3 different deployment contexts: Client/Server, RunBatch, and Rules Service."})}),"\n",(0,s.jsx)(t.p,{children:'This setting is used to specify the maximum number of records stored in cache. For details, see the "Cache Size" topic.'}),"\n",(0,s.jsx)(t.h2,{id:"setting-this-property",children:"Setting this property"}),"\n",(0,s.jsx)(t.p,{children:"You can reset this property by executing:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT RulesEngine.SetProperty( 'RecordFactsCacheSize', '*value*' )\n"})}),"\n",(0,s.jsxs)(t.p,{children:["where the required ",(0,s.jsx)(t.em,{children:"value"})," is either a positive integer or the value -1. In the case of a positive integer, the cache is set to that size. In the case of -1, caching is turned off."]}),"\n",(0,s.jsx)(t.h2,{id:"getting-this-property",children:"Getting this property"}),"\n",(0,s.jsx)(t.p,{children:"You can get the current value of this property by executing:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"SELECT RulesEngine.GetProperty( 'RecordFactsCacheSize' )\n"})}),"\n",(0,s.jsx)(t.p,{children:"The statements are entirely case-insensitive, including the property name."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);