"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[40377],{28453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>d});var n=i(96540);const t={},r=n.createContext(t);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:s},e.children)}},49766:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Repositories/Blend_directives/pcassignstringdefault","title":"pc:assign-string-default","description":"This article is about the pc:assign-string-default Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcassignstringdefault.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcassignstringdefault","permalink":"/udocs/Repositories/Blend_directives/pcassignstringdefault","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcassignstringdefault"},"sidebar":"sidebar","previous":{"title":"pc:assign-string","permalink":"/udocs/Repositories/Blend_directives/pcassignstring"},"next":{"title":"pc:blend","permalink":"/udocs/Repositories/Blend_directives/pcblend"}}');var t=i(74848),r=i(28453);const a={id:"pcassignstringdefault"},d="pc",c={},o=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsxs)(s.h1,{id:"pc",children:["pc",":assign-string-default"]})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["This article is about the ",(0,t.jsxs)(s.strong,{children:["pc",":assign-string-default"]}),(0,t.jsx)(s.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,t.jsx)(s.h2,{id:"pc-1",children:(0,t.jsxs)(s.strong,{children:["pc",":assign-string-default"]})}),"\n",(0,t.jsxs)(s.p,{children:["This directive is the same as ",(0,t.jsxs)(s.a,{href:"/udocs/Repositories/Blend_directives/pcassignstring",children:["pc",":assign-string"]})," for those variables that have not already been instantiated. For variables that have already been instantiated, their existing variable value is NOT overwritten, but it is still converted to a string."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Syntax"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'<pc:assign-string-default\n  [  *variable* = "*expr*" ... ] />\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For each variable, ",(0,t.jsx)(s.em,{children:"variable"})," identifies the variable by name and ",(0,t.jsx)(s.em,{children:"expr"})," is the value you provide for the variable. ",(0,t.jsx)(s.em,{children:"Expr"})," may be submitted either as a literal or as an XPath expression presented as an attribute value template, ie., surrounded by curly braces (\xa0","\xa0)."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Example"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'<pc:assign-string-default\n     username="ADMIN"\n     workingdir="{directories:Get()}"\n     servername="{path:GetFileName(directories:Get())}" />\n'})}),"\n",(0,t.jsx)(s.p,{children:"\xa0"})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);