"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[52017],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var n=s(96540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}},59632:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Services/Event_processing/Event_production_Example_2_Job_that_processes_queued_output_events","title":"Event production Example 2: Job that processes queued output events","description":"The following step-by-step instructions are for creating a job that processes output events.","source":"@site/docs/Services/Event_processing/Event_production_Example_2_Job_that_processes_queued_output_events.md","sourceDirName":"Services/Event_processing","slug":"/Services/Event_processing/Event_production_Example_2_Job_that_processes_queued_output_events","permalink":"/udocs/Services/Event_processing/Event_production_Example_2_Job_that_processes_queued_output_events","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Event_production_Example_2_Job_that_processes_queued_output_events"},"sidebar":"sidebar","previous":{"title":"Event production Example 1: Model and rules for creating output events","permalink":"/udocs/Services/Event_processing/Event_production_Example_1_Model_and_rules_for_creating_output_events"},"next":{"title":"Event production Example 3: Queue service that processes output events","permalink":"/udocs/Services/Event_processing/Event_production_Example_3_Queue_service_that_processes_output_events"}}');var r=s(74848),o=s(28453);const i={id:"Event_production_Example_2_Job_that_processes_queued_output_events"},a="Event production Example 2: Job that processes queued output events",c={},d=[{value:"Creating a job that processes output events",id:"creating-a-job-that-processes-output-events",level:2},{value:"Testing the implementation",id:"testing-the-implementation",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"event-production-example-2-job-that-processes-queued-output-events",children:"Event production Example 2: Job that processes queued output events"})}),"\n",(0,r.jsx)(t.p,{children:"The following step-by-step instructions are for creating a job that processes output events."}),"\n",(0,r.jsx)(t.p,{children:"The events have been stored in a queue table as an XML message. The queue table is called OUTPUT_QUEUE_SCHEDTOUR. \xa0"}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-job-that-processes-output-events",children:"Creating a job that processes output events"}),"\n",(0,r.jsx)(t.p,{children:"Processing a queue must operate row-by-row. The ID field is used as a handle to identify each queue message to be processed. For debugging purposes, if a processing action fails, it is useful to keep error information in the queue table. This gives you the possibility to see what went wrong with a message and reproduce the problem."}),"\n",(0,r.jsx)(t.p,{children:"To create a job processing output events:"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0Define a SQL Task that starts collecting errors:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT \xa0 \xa0RulesEngine.StartCatchingErrors('Yes')\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"Define this SQL Task as a Job Task in a new job called PROCESS_QUEUE_SCHEDTOUR."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Define another SQL Task that processes the next item in the queue:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INVOKE    http.send WITH\nSELECT    'http://travel.com/guideScheduler'\n,         queue.xml_message\nFROM      output_queue_schedtour queue\nWHERE     ID = ( select message_id from IN_PROCESS_MESSAGE )\n"})}),"\n",(0,r.jsx)(t.p,{children:"Add this SQL Task as a Job Task to the PROCESS_QUEUE_SCHEDTOUR job."}),"\n",(0,r.jsxs)(t.p,{children:["'",(0,r.jsx)(t.a,{href:"http://travel.com/guideScheduler",children:"http://travel.com/guideScheduler"}),"' is the URL where the output event must be sent. Use your own address here."]}),"\n",(0,r.jsx)(t.p,{children:"3.\xa0Define another SQL Task that catches any errors encountered during processing the most recent item."}),"\n",(0,r.jsx)(t.p,{children:"First, define an External Set named IN_PROCESS_MESSAGE that will store any caught errors:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Element Name"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Data Type"})})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MESSAGE_ID"}),(0,r.jsx)(t.td,{children:"NUMBER"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ERROR_MSG"}),(0,r.jsx)(t.td,{children:"NCLOB"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Define this External Set as being the Input Parameter Set of the PROCESS_QUEUE_SCHEDTOUR job."}),"\n",(0,r.jsx)(t.p,{children:"Define a SQL Task:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"UPDATE    in_process_message\nSET       error_msg = RulesEngine.GetLastCaughtErrors()\n"})}),"\n",(0,r.jsx)(t.p,{children:"Add this SQL Task as a Job Task to the PROCESS_QUEUE_SCHEDTOUR job."}),"\n",(0,r.jsx)(t.p,{children:"4.\xa0Define a SQL Task that stops collecting errors:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"SELECT \xa0 \xa0RulesEngine.StopCatchingErrors()\n\n"})}),"\n",(0,r.jsx)(t.p,{children:"Add this SQL Task as a Job Task to the PROCESS_QUEUE_SCHEDTOUR job."}),"\n",(0,r.jsx)(t.p,{children:"5.\xa0Define a SQL Task that gets the message status:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"UPDATE    output_queue_schedtour\nSET \n(   \n     status\n,    error_message\n) = \n(\n      SELECT     DECODE( error_msg, null, 'DONE', 'ERROR' )\n      ,          error_msg\n      FROM       in_process_message\n)\nWHERE id = \n(\n    SELECT       message_id \n    FROM         in_process_message\n)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Add this SQL Task as a Job Task to the PROCESS_QUEUE_SCHEDTOUR job."}),"\n",(0,r.jsxs)(t.p,{children:["6.\xa0Set ",(0,r.jsx)(t.strong,{children:"Commit Type"})," and ",(0,r.jsx)(t.strong,{children:"Abort Mode"})," attributes for the individual Job Tasks as follows:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Job Task Executes"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Commit Type"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Abort Mode"})})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SELECT \xa0RulesEngine.StartCatchingErrors('Yes')"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"Abort Job On Error"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"INVOKE \xa0http.send"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"Abort Task On Error"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"UPDATE \xa0in_process_message"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"Abort Task On Error"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SELECT \xa0RulesEngine.StopCatchingErrors()"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"Abort Job On Error"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"UPDATE \xa0input_queue_reservation"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"Abort Job On Error"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"7.\xa0Validate the job."}),"\n",(0,r.jsx)(t.h2,{id:"testing-the-implementation",children:"Testing the implementation"}),"\n",(0,r.jsx)(t.p,{children:"1.\xa0Start the default client/server application."}),"\n",(0,r.jsx)(t.p,{children:"2.\xa0Add some event messages in the queue table with:"}),"\n",(0,r.jsxs)(t.p,{children:["Status: ",(0,r.jsx)(t.strong,{children:"NONE"})]}),"\n",(0,r.jsx)(t.p,{children:"XML Message: (A message in USoft's XML.Export format as applied to the SCHEDTOUR table, for example:)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:'<Scheduled_Tours documentName="Scheduled Tours">\n \xa0<SCHEDTOUR \n     SCHEDTOUR_ID="57" \n     DESTINATION="HOLLAND" \n     TOUR_TYPE="GOLDEN AGE" \n     START_DATE="2018-12-13T12:08:21" \n \xa0 \xa0 RETURN_DATE="2018-12-24T12:08:21" \n     MAX_PART="15"/>\n</Scheduled_Tours>\n\n'})}),"\n",(0,r.jsx)(t.p,{children:"3.\xa0Open SQL Command from the Tools menu and execute:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'INVOKE     BatchRunner.PROCESS_QUEUE_SCHEDTOUR WITH \nSELECT     1      "MESSAGE_ID"\n,         \'True\'  "-quiet"\n'})}),"\n",(0,r.jsx)(t.p,{children:"making sure that 1 is an ID in the OUTPUT_QUEUE_SCHEDTOUR table."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);