"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[13572],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},85644:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"Services/Event_processing/Event_processing_Receiving_events","title":"Event processing: Receiving events","description":"Receiving events is about processing input events. An input event that is in scope for a USoft solution is something that happens in the organisation, is relevant to business conduct, and of which a signal is received by the USoft solution. The signal takes the form of an incoming message.","source":"@site/docs/Services/Event_processing/Event_processing_Receiving_events.md","sourceDirName":"Services/Event_processing","slug":"/Services/Event_processing/Event_processing_Receiving_events","permalink":"/udocs/Services/Event_processing/Event_processing_Receiving_events","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Event_processing_Receiving_events"},"sidebar":"sidebar","previous":{"title":"Event processing best practices","permalink":"/udocs/Services/Event_processing/Event_processing_best_practices"},"next":{"title":"Handling events","permalink":"/udocs/Services/Event_processing/Handling_events"}}');var i=t(74848),r=t(28453);const c={id:"Event_processing_Receiving_events"},o="Event processing: Receiving events",a={},h=[{value:"Creating a queue table",id:"creating-a-queue-table",level:2},{value:"Inserting messages into the queue table",id:"inserting-messages-into-the-queue-table",level:2},{value:"Creating a REST endpoint for receiving events",id:"creating-a-rest-endpoint-for-receiving-events",level:2},{value:"Sending a signal to the queue processing service",id:"sending-a-signal-to-the-queue-processing-service",level:2},{value:"Publishing the solution",id:"publishing-the-solution",level:2},{value:"Testing the implementation",id:"testing-the-implementation",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"event-processing-receiving-events",children:"Event processing: Receiving events"})}),"\n",(0,i.jsxs)(n.p,{children:["Receiving events is about processing ",(0,i.jsx)(n.strong,{children:"input events."})," An input event that is in scope for a USoft solution is something that happens in the organisation, is relevant to business conduct, and of which a signal is received by the USoft solution. The signal takes the form of an incoming message."]}),"\n",(0,i.jsx)(n.p,{children:"Input events may come from various sources that use different standards. USoft provides REST and SOAP services as an entry point for receiving input events. It also provides a mechanism of programming Java-based services for receiving input events."}),"\n",(0,i.jsx)(n.p,{children:"When an input event is received, best practice is to place it in a queue table. With synchronous input processing (where a queue table is not strictly necessary), the input event is processed immediately after. With asynchronous input processing, a separate queue processing service must get a signal that the queue table has new data to be processed."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example"})}),"\n",(0,i.jsx)(n.p,{children:"The following step-by-step instructions are for creating a REST service that receives reservation event messages for a Travel Agency model. These messages are handled asynchronously."}),"\n",(0,i.jsx)(n.p,{children:"To make things easier, the input event data in this example are in USoft's XML.Export format as applied to the Travel Agency's RESERVATION table."}),"\n",(0,i.jsx)(n.p,{children:"This example assumes that you have defined a custom REST service in Service Definer, with an application and a connection associated with it."}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-queue-table",children:"Creating a queue table"}),"\n",(0,i.jsx)(n.p,{children:"To create a queue table for input events:"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0Open USoft Definer. Define a queue table with the name INPUT_QUEUE_RESERVATION."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Add the following columns to this table:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"Column"})}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.strong,{children:"Domain"})})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ID\xa0"}),(0,i.jsx)(n.td,{children:"Generated sequence number."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"STATUS"}),(0,i.jsx)(n.td,{children:"Allowed values: NONE, DONE, ERROR.Default value: NONE"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"XML_MESSAGE"}),(0,i.jsx)(n.td,{children:"Character large object type."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ERROR_MESSAGE"}),(0,i.jsx)(n.td,{children:"Character large object type."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0Create the table in the database."}),"\n",(0,i.jsx)(n.h2,{id:"inserting-messages-into-the-queue-table",children:"Inserting messages into the queue table"}),"\n",(0,i.jsx)(n.p,{children:"Next, define SQL for the insertion of incoming messages into the queue table:"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0In Services Definer, choose Define, SQL Statements from the menu."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Define a SQL Statement with the following values:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Statement name"}),(0,i.jsx)(n.td,{children:"INSERT_QUEUE_RESERVATION"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Application name"}),(0,i.jsx)(n.td,{children:"TRAVEL"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"SQL Statement:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"INSERT INTO input_queue_reservation\n(   \n      xml_message   \n)\nVALUES\n(  \n      :message\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0Save work. Click the Check button to have your SQL syntax checked. If it is correct, the Correct = Yes flag is set."}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-rest-endpoint-for-receiving-events",children:"Creating a REST endpoint for receiving events"}),"\n",(0,i.jsx)(n.p,{children:"To create a REST endpoint for receiving events:"}),"\n",(0,i.jsx)(n.p,{children:'1.\xa0Open a custom REST Service that is exposed by a Server, or create a new one. For details, read the " Setting up your own REST service " help topic.'}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0On the Methods tab of this REST service, define a method with the following values:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Method Name"}),(0,i.jsx)(n.td,{children:"reservation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Relative URI Path"}),(0,i.jsx)(n.td,{children:"/reservations"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"REST HTTP Verb"}),(0,i.jsx)(n.td,{children:"POST"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"Implementation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:' sql(Integer.class, "INSERT_QUEUE_RESERVATION" , new Object[]{ message } );\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0In the Parameters box of this method, define a parameter with the following values:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Seqno"}),(0,i.jsx)(n.td,{children:"1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Name"}),(0,i.jsx)(n.td,{children:"message"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Type"}),(0,i.jsx)(n.td,{children:"String"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Return Parameter"}),(0,i.jsx)(n.td,{children:"unchecked"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"4.\xa0On the Sql Statements tab, add the INSERT_QUEUE_RESERVATION statement to the list."}),"\n",(0,i.jsx)(n.p,{children:"5.\xa0On the Connections tab, identify the connection to the Rules Service that you want to use at runtime by adding this connection to the list."}),"\n",(0,i.jsx)(n.h2,{id:"sending-a-signal-to-the-queue-processing-service",children:"Sending a signal to the queue processing service"}),"\n",(0,i.jsx)(n.p,{children:"A queue processing service allows you to process data from a table in a first-in-first-out order. At times when there is no remaining data to process, the queue service waits for a signal that new data is available See also Example: Queue service for asynchronous input processing"}),"\n",(0,i.jsx)(n.p,{children:"To send a signal to the queue processing service:"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0In the REST service window, click on the Fields tab."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Add a new field with the following values:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Name"}),(0,i.jsx)(n.td,{children:"reservation_event"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Type"}),(0,i.jsx)(n.td,{children:"com.usoft.uservice.server.Event"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"Annotation:"}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'@com.usoft.uservice.server.EventInject(name="INPUT_QUEUE_RESERVATION")\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"The value of the name property in the Annotation must be the name of the queue table."}),"\n",(0,i.jsx)(n.p,{children:"3.\xa0On the Methods tab, in the Implementation field for the method, add following line at the end:"}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:" reservation_event.signal();\n"})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"4.\xa0Check the REST service."}),"\n",(0,i.jsx)(n.h2,{id:"publishing-the-solution",children:"Publishing the solution"}),"\n",(0,i.jsx)(n.p,{children:"To publish the solution:"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0Choose Define, Servers, and retrieve the record of the Server where you expose the service."}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0With input focus on this record, choose Publish, Publish and Restart from the menu."}),"\n",(0,i.jsx)(n.h2,{id:"testing-the-implementation",children:"Testing the implementation"}),"\n",(0,i.jsx)(n.p,{children:"To test the implementation:"}),"\n",(0,i.jsx)(n.p,{children:"1.\xa0Using a REST-specific test tool, send XML POST messages to following URL:"}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"http://localhost:8090/mycustomservice/reservations\n"})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"Messages must follow the restrictions of the XML.Export format on the RESERVATION table"}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Reservations> \xa0 <RESERVATION SCHEDTOUR_ID="53" MADE_BY="14" DEALT_WITH_BY="1"/></Reservations>\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"\xa0"}),"\n",(0,i.jsx)(n.p,{children:"2.\xa0Check in the client/server application that the XML message has been inserted into the INPUT_QUEUE_RESERVATION table."}),"\n",(0,i.jsx)(n.p,{children:"\xa0"})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);