"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[31277],{28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var t=n(96540);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}},83843:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Release_phase","title":"Release management: Release phase","description":"Release is the operation of collecting all the deliverables that constitute a new version of your USoft application. You collect these from one or more development machines (the source environment) in preparation for delivering these to target machines.","source":"@site/docs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Release_phase.md","sourceDirName":"Continuous_delivery/Understanding_USoft_Delivery_Manager","slug":"/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Release_phase","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Release_phase","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Release_management_Release_phase"},"sidebar":"sidebar","previous":{"title":"Release management: Flag for release phase","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_management_Flag_for_release_phase"},"next":{"title":"Release trees","permalink":"/udocs/Continuous_delivery/Understanding_USoft_Delivery_Manager/Release_trees"}}');var s=n(74848),r=n(28453);const i={id:"Release_management_Release_phase"},l="Release management: Release phase",o={},d=[{value:"Other uses of Delivery Manager",id:"other-uses-of-delivery-manager",level:2}];function c(e){const a={em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"release-management-release-phase",children:"Release management: Release phase"})}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.em,{children:"Release"})," is the operation of collecting all the deliverables that constitute a new version of your USoft application. You collect these from one or more development machines (the source environment) in preparation for delivering these to target machines."]}),"\n",(0,s.jsx)(a.p,{children:"By performing a release, you make a definitive decision about exactly which deliverables are part of the version."}),"\n",(0,s.jsxs)(a.p,{children:["USoft Delivery Manager helps you collect deliverables by offering a number of ",(0,s.jsx)(a.em,{children:"release actions"})," that you can easily include in a sequenced release procedure: a ",(0,s.jsx)(a.em,{children:"task"})," containing ",(0,s.jsx)(a.em,{children:"task steps"}),". The name of each release action starts with the word ",(0,s.jsx)(a.strong,{children:"Release..."})," .\xa0"]}),"\n",(0,s.jsx)(a.p,{children:"Delivery Manager collects deliverables in a folder structure on the file system called a release tree."}),"\n",(0,s.jsxs)(a.p,{children:["Each release is characterised by a number of release properties. The most characteristic property of a release is its ",(0,s.jsx)(a.em,{children:"version name."})," The version name**indicates the version of the application that the release is for."]}),"\n",(0,s.jsx)(a.h2,{id:"other-uses-of-delivery-manager",children:"Other uses of Delivery Manager"}),"\n",(0,s.jsx)(a.p,{children:"Releasing deliverables is not the only use of USoft Delivery Manager. Its capabilities are also available outside a release setting. For this reason, it offers non-release counterparts for many actions aimed at releasing deliverables, for example:"}),"\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:(0,s.jsx)(a.strong,{children:"Release action"})}),(0,s.jsx)(a.th,{children:(0,s.jsx)(a.strong,{children:"Non-release counterpart"})})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"Release flat files"}),(0,s.jsx)(a.td,{children:"Create flat files"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"Release metadata"}),(0,s.jsx)(a.td,{children:"Export metadata"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"Release deliverable application data"}),(0,s.jsx)(a.td,{children:"Export deliverable appdataExport all appdata"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"Release publication"}),(0,s.jsx)(a.td,{children:"Publish publication object"})]})]})]}),"\n",(0,s.jsx)(a.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);