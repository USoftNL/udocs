"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[63034],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var i=n(96540);const t={},r=i.createContext(t);function a(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}},66374:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Repositories/Blend_directives/pcassignnodeset","title":"pc:assign-nodeset","description":"This article is about the pc:assign-nodeset Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcassignnodeset.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcassignnodeset","permalink":"/udocs/Repositories/Blend_directives/pcassignnodeset","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcassignnodeset"},"sidebar":"sidebar","previous":{"title":"pc:assign-boolean-default","permalink":"/udocs/Repositories/Blend_directives/pcassignbooleandefault"},"next":{"title":"pc:assign-nodeset-default","permalink":"/udocs/Repositories/Blend_directives/pcassignnodesetdefault"}}');var t=n(74848),r=n(28453);const a={id:"pcassignnodeset"},o="pc",d={},l=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsxs)(s.h1,{id:"pc",children:["pc",":assign-nodeset"]})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["This article is about the ",(0,t.jsxs)(s.strong,{children:["pc",":assign-nodeset"]}),(0,t.jsx)(s.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,t.jsx)(s.h2,{id:"pc-1",children:(0,t.jsxs)(s.strong,{children:["pc",":assign-nodeset"]})}),"\n",(0,t.jsxs)(s.p,{children:["Evaluates an expression, converts the resulting value to a node set using XSLT 1.0 conversion rules, and stores the resulting string in (= assigns the resulting string to) a named variable. The variable is global: from any later script section you can refer to its value by writing ",(0,t.jsx)(s.em,{children:"$variable"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["If a variable by the same name is already instantiated, its value is silently overwritten. This is the difference with pc",":assign-nodeset-default","."]}),"\n",(0,t.jsxs)(s.p,{children:["You have the option to assign multiple variables in a single pc",":assign-nodeset"," directive."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Syntax"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'<pc:assign-nodeset\n     [*variable* = "*expr >> node-set*" ...] />\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For each variable, ",(0,t.jsx)(s.em,{children:"variable"})," identifies the variable by name and ",(0,t.jsx)(s.em,{children:"expr"})," is the value you provide for the variable. ",(0,t.jsx)(s.em,{children:"Expr"})," may be submitted either as a literal or as an XPath expression presented as an attribute value template, ie., surrounded by curly braces (\xa0","\xa0), as shown in Example 1, or a path leading to a valid XML document, as shown in Example 2."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Example 1"})}),"\n",(0,t.jsx)(s.p,{children:"This example assigns to a variable named tables the node set made up of the child elements of the <Tables> child element of the context node."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'<pc:assign-nodeset   tables="{Tables/*}" />\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Example 2"})}),"\n",(0,t.jsx)(s.p,{children:"This example assigns to a variable named registry the contents of an XML document on the file system identified by a path expression."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'<pc:assign-nodeset   registry="..\\registry.xml" />\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"Example 3"})}),"\n",(0,t.jsx)(s.p,{children:"This example assigns to a variable named servers a node set found in the XML document stored in the registry variable."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'<pc:assign-string   registry="{files:XmlFile(\'..\\registry.xml\')}">\n<pc:assign-nodeset  servers="{$registry/Computers/Computer[@name=$thiscomputer]/Servers/Server}" />\n'})}),"\n",(0,t.jsx)(s.p,{children:"\xa0"})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);