"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[37759],{28453:(e,t,d)=>{d.d(t,{R:()=>i,x:()=>l});var n=d(96540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}},62370:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>x,frontMatter:()=>i,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Storerecord_event_overview","title":"Store-record event overview","description":"The table below affords an overview of all the possible constraint validations that could take place at store-record event time.","source":"@site/docs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Storerecord_event_overview.md","sourceDirName":"Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine","slug":"/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Storerecord_event_overview","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Storerecord_event_overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Storerecord_event_overview"},"sidebar":"sidebar","previous":{"title":"Constraint activation events","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Constraint_activation_events"},"next":{"title":"Constraint evaluation order","permalink":"/udocs/Modeller_and_Rules_Engine/Constraints_advanced_and_the_Rules_Engine/Constraint_evaluation_order"}}');var r=d(74848),s=d(28453);const i={id:"Storerecord_event_overview"},l="Store-record event overview",c={},h=[];function o(e){const t={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"store-record-event-overview",children:"Store-record event overview"})}),"\n",(0,r.jsxs)(t.p,{children:["The table below affords an overview of all the possible constraint validations that could take place at ",(0,r.jsx)(t.strong,{children:"store-record event"})," time."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"It shows the default order in which these potential validations take place."}),"\n",(0,r.jsx)(t.li,{children:"It shows the Reason listed for the validation in BenchMark Profiler output."}),"\n",(0,r.jsx)(t.li,{children:"Finally, it shows which validation steps potentially apply when the record manipulation is INSERT, when it is UPDATE, and when it is DELETE."}),"\n"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Order"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Validation"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"Reason inBenchMark Profiler"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"INSERT"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"UPDATE"})}),(0,r.jsx)(t.th,{children:(0,r.jsx)(t.strong,{children:"DELETE"})})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1"}),(0,r.jsx)(t.td,{children:"Lock record and subtype records"}),(0,r.jsx)(t.td,{children:"LOCK_RECORD"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"2"}),(0,r.jsx)(t.td,{children:"Set default values"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"3"}),(0,r.jsx)(t.td,{children:"Foreground authorization"}),(0,r.jsx)(t.td,{children:"AUTHORIZATION"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"4"}),(0,r.jsx)(t.td,{children:"Productive domain constraints"}),(0,r.jsx)(t.td,{children:"DOMAIN_CONSTRAINT"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"5"}),(0,r.jsx)(t.td,{children:"Sequence numbers"}),(0,r.jsx)(t.td,{children:"SEQNO"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"6"}),(0,r.jsx)(t.td,{children:"Update On Self constraints"}),(0,r.jsx)(t.td,{children:"SELECT_FOR_UPDATENEWVALUES"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"7"}),(0,r.jsx)(t.td,{children:"Mandatory columns"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"8"}),(0,r.jsx)(t.td,{children:"Domain constraints"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"9"}),(0,r.jsx)(t.td,{children:"Columns updatable(Yes, No, Only if Null)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"10"}),(0,r.jsx)(t.td,{children:"Restrictive domain constraints"}),(0,r.jsx)(t.td,{children:"DOMAIN_CONSTRAINT"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"11"}),(0,r.jsx)(t.td,{children:"Foreign keys updatable(Yes, No, Only if Null)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"12"}),(0,r.jsx)(t.td,{children:"Unique keys"}),(0,r.jsx)(t.td,{children:"UNIQUE_KEY"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"13"}),(0,r.jsx)(t.td,{children:"Restrictive Update/Delete Rules"}),(0,r.jsx)(t.td,{children:"RESTRICTED"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"14"}),(0,r.jsx)(t.td,{children:"Restrictive, non-transitional,single-record constraints"}),(0,r.jsx)(t.td,{children:"ROW_CONSTRAINT"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"15"}),(0,r.jsx)(t.td,{children:"Restrictive, transitional,single-record constraints"}),(0,r.jsx)(t.td,{children:"ROW_CONSTRAINT"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"16"}),(0,r.jsx)(t.td,{children:"Restrictive, transitional,multi-record constraints"}),(0,r.jsx)(t.td,{children:"ROW_CONSTRAINT"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"17"}),(0,r.jsx)(t.td,{children:"Immediate subtype definitions (totality, exclusivity)"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"18"}),(0,r.jsx)(t.td,{children:"STORE-RECORD,first subtype, then supertype."}),(0,r.jsx)(t.td,{children:"MANIPULATION"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"19"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)("p",{children:"For restrictive, non-transitional, multi-record constraints,"}),(0,r.jsx)("p",{children:"the primary key of the driving table record is determined."}),(0,r.jsx)("p",{children:"In some cases, a constraint key query is needed."})]}),(0,r.jsx)(t.td,{children:"CONSTRAINT_KEYQUERY"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"20"}),(0,r.jsx)(t.td,{children:"Cardinality checks are generated for relationships in which the current record is a child."}),(0,r.jsx)(t.td,{children:"CARDINALITY"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"21"}),(0,r.jsx)(t.td,{children:"Cascading or nullifying Update/Delete Rules"}),(0,r.jsx)(t.td,{children:"CASCADING"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"22"}),(0,r.jsx)(t.td,{children:"Productive, non-transitional multi-record constraints (not deferred)"}),(0,r.jsx)(t.td,{children:"SELECT_FOR_<manip>NEWVALUESor OLD_NEWVALUES"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"23"}),(0,r.jsx)(t.td,{children:"Productive, transitional, multi-record constraints (not deferred)"}),(0,r.jsx)(t.td,{children:"SELECT_FOR_<manip>NEWVALUESor OLD_NEWVALUES"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"}),(0,r.jsx)(t.td,{children:"Y"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"\xa0"})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);