"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[24942],{20490:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_syntax/Comparison_operators","title":"Comparison operators","description":"This article is about comparison operators as part of the SQL syntax that USoft supports.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_syntax/Comparison_operators.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_syntax","slug":"/Modeller_and_Rules_Engine/SQL_syntax/Comparison_operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Comparison_operators","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Comparison_operators"},"sidebar":"sidebar","previous":{"title":"Logical operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Logical_operators"},"next":{"title":"Mathematical operators","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_syntax/Mathematical_operators"}}');var n=s(74848),a=s(28453);const o={id:"Comparison_operators"},i="Comparison operators",l={},d=[{value:"<strong>Comparison operators</strong>",id:"comparison-operators-1",level:2},{value:"NULL values",id:"null-values",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"comparison-operators",children:"Comparison operators"})}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["This article is about ",(0,n.jsx)(r.strong,{children:"comparison operators"})," as part of the ",(0,n.jsx)(r.a,{href:"/Modeller_and_Rules_Engine/SQL_syntax",children:"SQL syntax"})," that USoft supports."]})}),"\n",(0,n.jsx)(r.h2,{id:"comparison-operators-1",children:(0,n.jsx)(r.strong,{children:"Comparison operators"})}),"\n",(0,n.jsx)(r.p,{children:"In a condition with a comparison operator, the expression to the left of the operator is compared to the expression to the right. The outcome is a truth value: True or False."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{}),(0,n.jsx)(r.th,{})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0=\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is equal to ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0!=\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is not equal to ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0>\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is greater than ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0>=\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is greater than or equal to ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0<\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is smaller than ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0<=\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is smaller or equal to ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0<>\xa0expr-b"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is not equal to ",(0,n.jsx)(r.em,{children:"b"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0IS NULL"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is equal to the NULL value"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"expr-a\xa0IS NOT NULL"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"a"})," is not equal to the NULL value"]})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"The != and <> operators are equivalent. They both return True if the expressions evaluate to a different value and False if they evaluate to the same value."}),"\n",(0,n.jsx)(r.p,{children:"A number value is greater than another number value if it is greater in the mathematical sense. A string value is greater than another string value if it is comes last in alphabetical sort order. A date value is greater than another date/time value if it designates a later date/time."}),"\n",(0,n.jsx)(r.h2,{id:"null-values",children:"NULL values"}),"\n",(0,n.jsx)(r.p,{children:"Comparisons with a NULL value evaluate to False, regardless of the mathematical operator."}),"\n",(0,n.jsx)(r.admonition,{type:"warning",children:(0,n.jsx)(r.p,{children:"This is a source of errors when working with relational databases generally, but especially in a USoft context, because comparisons with NULL will cause a constraint not to have an effect.\nBest practice in USoft applications is to keep non-mandatory columns (columns where NULLs are allowed) to an absolute minimum."})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>i});var t=s(96540);const n={},a=t.createContext(n);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);