"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[51638],{20644:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Services/SQL_statements_in_USoft_services/Example_a_REST_Service_for_deleting_data_DELETE","title":"Example: a REST Service for deleting data (DELETE)","description":"In this example, you drop a tour from the catalogue of existing tours that is in the database.","source":"@site/docs/Services/SQL_statements_in_USoft_services/Example_a_REST_Service_for_deleting_data_DELETE.md","sourceDirName":"Services/SQL_statements_in_USoft_services","slug":"/Services/SQL_statements_in_USoft_services/Example_a_REST_Service_for_deleting_data_DELETE","permalink":"/udocs/Services/SQL_statements_in_USoft_services/Example_a_REST_Service_for_deleting_data_DELETE","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Example_a_REST_Service_for_deleting_data_DELETE"},"sidebar":"sidebar","previous":{"title":"Example: a REST Service for returning manipulated data","permalink":"/udocs/Services/SQL_statements_in_USoft_services/Example_a_REST_Service_for_returning_manipulated_data"},"next":{"title":"Organising services","permalink":"/udocs/Services/Organising_services"}}');var s=n(74848),i=n(28453);const a={id:"Example_a_REST_Service_for_deleting_data_DELETE"},o="Example: a REST Service for deleting data (DELETE)",d={},h=[{value:"Defining SQL",id:"defining-sql",level:2},{value:"Generating a REST method based on SQL",id:"generating-a-rest-method-based-on-sql",level:2},{value:"Publishing the solution",id:"publishing-the-solution",level:2},{value:"Testing the implementation",id:"testing-the-implementation",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"example-a-rest-service-for-deleting-data-delete",children:"Example: a REST Service for deleting data (DELETE)"})}),"\n",(0,s.jsx)(t.p,{children:"In this example, you drop a tour from the catalogue of existing tours that is in the database."}),"\n",(0,s.jsx)(t.p,{children:"This example shows how you can quickly generate a REST service from a SQL statement of this type:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"DELETE  FROM tour\nWHERE   destination = :destination\nAND     tour_type = :tour_type\n"})}),"\n",(0,s.jsx)(t.p,{children:"In this particular example, matrix parameters are used, but you have a number of other options when designing input parameters."}),"\n",(0,s.jsx)(t.h2,{id:"defining-sql",children:"Defining SQL"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0In the User Application, in SQL Command, write and test a SQL statement that will drop an existing tour, for example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"DELETE  FROM tour\nWHERE   destination = 'AFRICA'\nAND     tour_type = 'KENYA SAFARI'\n"})}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0In USoft Services Definer, create a variant of this statement that indicates the REST input parameters. To do this, choose Define, SQL Statements from the menu, then create a statement record with the following values:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Statement name"}),(0,s.jsx)(t.td,{children:"DROP_TOUR"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Application name"}),(0,s.jsx)(t.td,{children:"TRAVEL"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Statement ="}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"DELETE  FROM tour\nWHERE   destination = :destination\nAND     tour_type = :tour_type\n"})}),"\n",(0,s.jsx)(t.p,{children:"3.\xa0Save work. Click the Check button to have your SQL syntax checked. If it is correct, the Correct = Yes flag is set."}),"\n",(0,s.jsx)(t.h2,{id:"generating-a-rest-method-based-on-sql",children:"Generating a REST method based on SQL"}),"\n",(0,s.jsx)(t.p,{children:'1.\xa0Define a custom REST service and make sure that this new service is exposed by a Server. For details on how to do these 2 things, step out to help topic " Setting up your own REST service ".'}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0On the Methods tab, create a record for the retrieval method:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Method Name"}),(0,s.jsx)(t.td,{children:"DeleteTour"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Relative URI Path"}),(0,s.jsx)(t.td,{children:"/Tours"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"REST HTTP Verb"}),(0,s.jsx)(t.td,{children:"DELETE"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"\xa0"}),"\n",(0,s.jsx)(t.p,{children:'3.\xa0Press the "Generate from SQL" button.The "Generate Method from SQL Statement" dialog appears.'}),"\n",(0,s.jsx)(t.p,{children:"4.\xa0On the SQL Statements tab, click in the record for the DROP_TOUR statement that you want the REST method to be generated from.The SQL code is now in view in the box on the right. Check that the Correct flag is set to Yes."}),"\n",(0,s.jsx)(t.p,{children:"5.\xa0Press the Generate button."}),"\n",(0,s.jsx)(t.p,{children:"In the REST Services window or tab, values for Signature, Implementation and Parameters are generated."}),"\n",(0,s.jsx)(t.h2,{id:"publishing-the-solution",children:"Publishing the solution"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0Choose Define, Servers, and retrieve the record of the Server where you expose the service."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0With input focus on this record, choose Publish, Publish and Restart from the menu."}),"\n",(0,s.jsx)(t.h2,{id:"testing-the-implementation",children:"Testing the implementation"}),"\n",(0,s.jsx)(t.p,{children:"1.\xa0Open a Google Chrome browser window, search the download site for the \u201cPOSTMAN \u2013 REST Client\u201d Google extension, and download it to your browser."}),"\n",(0,s.jsx)(t.p,{children:"Once installed, this extension can be opened easily from a new Google Chrome browser tab. To do this, click the standard \u201cApps\u201d button on the Favorites bar, then click the POSTMAN item in the middle of the screen."}),"\n",(0,s.jsx)(t.p,{children:"2.\xa0Open POSTMAN, and specify the following URL:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"http://<host-name>:<port-number>/<service-uri>/<method-uri>;<matrix-parameter>=<value>[;<matrix-parameter>=<value>...]\n"})}),"\n",(0,s.jsx)(t.p,{children:"for example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"http://localhost:8090/mycustomservice/Tours;destination=AFRICA;tour_type=KENYA SAFARI\n"})}),"\n",(0,s.jsxs)(t.p,{children:["3.\xa0Set the HTTP verb to ",(0,s.jsx)(t.strong,{children:"DELETE"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"4.\xa0Press the Send button."}),"\n",(0,s.jsx)(t.p,{children:'See that HTTP status code "204 No Content" is returned as a response. In the User Application, check that the record with destination = AFRICA and tour_type = KENYA SAFARI has been correctly deleted.'}),"\n",(0,s.jsx)(t.p,{children:'Another popular design of this type of REST call is to pass back the result data in a response message. For this design, go to help topic " Example: a REST Service for returning manipulated data ".'})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);