"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[60241],{28453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>o});var s=l(96540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}},92114:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Repositories/Blend_directives/pcPowerShell","title":"pc:PowerShell","description":"This article is about the pc:PowerShell Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcPowerShell.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcPowerShell","permalink":"/udocs/Repositories/Blend_directives/pcPowerShell","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcPowerShell"},"sidebar":"sidebar","previous":{"title":"pc:non-breaking-space","permalink":"/udocs/Repositories/Blend_directives/pcnonbreakingspace"},"next":{"title":"pc:processing-instruction","permalink":"/udocs/Repositories/Blend_directives/pcprocessinginstruction"}}');var r=l(74848),t=l(28453);const i={id:"pcPowerShell"},o="pc",a={},c=[{value:"<strong>pc</strong>",id:"pc-1",level:2},{value:"Passing string variables",id:"passing-string-variables",level:2},{value:"Passing node set variables",id:"passing-node-set-variables",level:2},{value:"Return value",id:"return-value",level:2},{value:"Limitations",id:"limitations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"pc",children:["pc",":PowerShell"]})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This article is about the ",(0,r.jsxs)(n.strong,{children:["pc",":PowerShell"]}),(0,r.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"pc-1",children:(0,r.jsxs)(n.strong,{children:["pc",":PowerShell"]})}),"\n",(0,r.jsx)(n.p,{children:"Runs a Powershell command line at the level of the Windows OS. Click here for using this to execute a SQL script stored in a text file."}),"\n",(0,r.jsx)(n.p,{children:'Returns an XML fragment by way of a report. See the "Return value" section at the end of this help topic.'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Syntax"}),"\n\xa0"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<pc:PowerShell[ *variable*="*value*", ... ] >\n\n*powershell-command*\n\n</pc:PowerShell>\n\n*variable*  ::=  *name-literal*\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Variables passed as ",(0,r.jsx)(n.em,{children:'variable="value"'})," arguments of pc",":PowerShell"," are global in the sense that you can keep referring to them in multiple calls to pc",":PowerShell"," within the same Blend script."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:PowerShell> Write-Output "Hello World" </pc:PowerShell>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"passing-string-variables",children:"Passing string variables"}),"\n",(0,r.jsx)(n.p,{children:"You can pass variables of type string to the PowerShell command like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:assign-string somebody="John"/>\n<pc:PowerShell arg1="{$somebody}">Write-Output "Hello $arg1\'s Universe"</pc:PowerShell>\n'})}),"\n",(0,r.jsx)(n.p,{children:"The return value of this example is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<PowerShell><Result> Hello John's Universe </Result></PowerShell>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"passing-node-set-variables",children:"Passing node set variables"}),"\n",(0,r.jsx)(n.p,{children:"You can pass variables of type node set to the PowerShell command like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:assign-nodeset myxml="{$xmldoc1}"/>\n<pc:PowerShell arg1="{$myxml}">Write-Output $arg1.InnerXml</pc:PowerShell>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return value"}),"\n",(0,r.jsx)(n.p,{children:"The return value is an XML fragment that has this syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<PowerShell>\n  <Result> result </Result>\n</PowerShell>\n"})}),"\n",(0,r.jsx)(n.p,{children:"The return value of:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:PowerShell> Write-Output "Hello World" </pc:PowerShell>\n'})}),"\n",(0,r.jsx)(n.p,{children:"is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<PowerShell><Result> Hello World </Result></PowerShell>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(n.p,{children:["The optional ",(0,r.jsx)(n.em,{children:'variable="value"'})," arguments can only be used to pass input to pc",":PowerShell",", not to catch output from the embedded XML that pc",":PowerShell"," returns. As a workaround, you can catch the output in a variable in a separate step, eg., by using pc",":evaluate",". This allows further processing of the output:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:evaluate assign:output_from_powershell=".">\n    <pc:PowerShell> Write-Output "Hello World" </pc:PowerShell>\n</pc:evaluate>\n<pc:copy-of select="$output_from_powershell/Result/text()"/>\n'})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);