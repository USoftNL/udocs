"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[8363],{28453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>r});var i=a(96540);const n={},s=i.createContext(n);function l(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(s.Provider,{value:t},e.children)}},28739:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Continuous_delivery/Delivery_Manager_actions_by_name/Populate_tables_list","title":"Populate tables list","description":"This article is about the Populate tables listDelivery Manager action.","source":"@site/docs/Continuous_delivery/Delivery_Manager_actions_by_name/Populate_tables_list.md","sourceDirName":"Continuous_delivery/Delivery_Manager_actions_by_name","slug":"/Continuous_delivery/Delivery_Manager_actions_by_name/Populate_tables_list","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Populate_tables_list","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Populate_tables_list"},"sidebar":"sidebar","previous":{"title":"Mark up XML attribute","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Mark_up_XML_attribute"},"next":{"title":"Publish publication object","permalink":"/udocs/Continuous_delivery/Delivery_Manager_actions_by_name/Publish_publication_object"}}');var n=a(74848),s=a(28453);const l={id:"Populate_tables_list"},r="Populate tables list",o={},c=[{value:"<strong>Populate tables list</strong>",id:"populate-tables-list-1",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Notes",id:"notes",level:3}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"populate-tables-list",children:"Populate tables list"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This article is about the ",(0,n.jsx)(t.strong,{children:"Populate tables list"}),(0,n.jsx)(t.a,{href:"/Continuous_delivery/Delivery_Manager_actions_by_name",children:"Delivery Manager action"}),"."]})}),"\n",(0,n.jsx)(t.h2,{id:"populate-tables-list-1",children:(0,n.jsx)(t.strong,{children:"Populate tables list"})}),"\n",(0,n.jsx)(t.p,{children:'In Delivery Manager, in "Application Tables", creates or updates a list of database tables and interface tables defined for "Application".'}),"\n",(0,n.jsx)(t.p,{children:'The list of tables is read from repository if "Database account" is specified. It is read from a metadata file if "Database account" is left empty. For details, see Parameters below.'}),"\n",(0,n.jsx)(t.p,{children:"The purpose of this list is that you can specify :"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"which of these application tables are deliverable,"}),"\n",(0,n.jsx)(t.li,{children:"which must be skipped in create-tables scripts, and"}),"\n",(0,n.jsx)(t.li,{children:"for which an ALTER TABLE statement must be generated for it in the create-tables script, as opposed to the default CREATE TABLE statement (the Upgrade Hint setting)."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:'If you re-run "Populate tables list", any previous Deliverable, Skipped, and Upgrade Hint settings remain unaffected.'}),"\n",(0,n.jsx)(t.p,{children:"In the case of the USAUTH application, a first-time suggestion for deliverable tables is made by USoft."}),"\n",(0,n.jsx)(t.p,{children:"To read the table names, the application is automatically opened from repository, except when Application = USERVICE (the Service Definer application delivered by USoft), in which case the application is automatically opened from flat files."}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Name"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Type"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Optional?"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Application"}),(0,n.jsx)(t.td,{children:"Application"}),(0,n.jsx)(t.td,{children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Database account"}),(0,n.jsx)(t.td,{children:"Database account"}),(0,n.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,n.jsx)(t.p,{children:'The "Populate tables list" action lists database tables and interface tables, but not Logical Views and Component Tables.'})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);