"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[56498],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},51756:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>E,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Modeller_and_Rules_Engine/SQL_functions/CASE_DECODE","title":"CASE, DECODE","description":"This article has additional information about the CASE and DECODE SQL functions.","source":"@site/docs/Modeller_and_Rules_Engine/SQL_functions/CASE_DECODE.md","sourceDirName":"Modeller_and_Rules_Engine/SQL_functions","slug":"/Modeller_and_Rules_Engine/SQL_functions/CASE_DECODE","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/CASE_DECODE","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"CASE_DECODE"},"sidebar":"sidebar","previous":{"title":"ADD_DAYS","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/ADD_DAYS"},"next":{"title":"CAST","permalink":"/udocs/Modeller_and_Rules_Engine/SQL_functions/CAST"}}');var t=s(74848),r=s(28453);const l={id:"CASE_DECODE"},a="CASE, DECODE",o={},c=[{value:"<strong>CASE, DECODE</strong>",id:"case-decode-1",level:2},{value:"CASE",id:"case",level:2},{value:"DECODE",id:"decode",level:2},{value:"Example 1: SELECT clause, CASE with conditions",id:"example-1-select-clause-case-with-conditions",level:2},{value:"Example 2a: SELECT clause, CASE with evaluated expression",id:"example-2a-select-clause-case-with-evaluated-expression",level:2},{value:"Example 2b: SELECT clause, DECODE",id:"example-2b-select-clause-decode",level:2},{value:"Example 3: WHERE clause, CASE with conditions",id:"example-3-where-clause-case-with-conditions",level:2},{value:"Example 4: Default NULL values",id:"example-4-default-null-values",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"case-decode",children:"CASE, DECODE"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This article has additional information about the ",(0,t.jsx)(n.strong,{children:"CASE"})," and ",(0,t.jsx)(n.strong,{children:"DECODE"})," SQL functions.\nFor convertibility of this function, go to ",(0,t.jsx)(n.a,{href:"/udocs/Modeller_and_Rules_Engine/SQL_functions/SQL_functions_AC",children:"SQL functions\xa0 A - C"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"case-decode-1",children:(0,t.jsx)(n.strong,{children:"CASE, DECODE"})}),"\n",(0,t.jsx)(n.p,{children:"CASE and DECODE return output values dependent on value comparisons."}),"\n",(0,t.jsx)(n.p,{children:"CASE is a native function on all RDBMSs. DECODE is native on Oracle. DECODE is convertible in USoft for all other platforms. USoft converts DECODE to CASE on non-Oracle platforms."}),"\n",(0,t.jsx)(n.h2,{id:"case",children:"CASE"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Syntax 1"})}),"\n",(0,t.jsx)(n.p,{children:"This syntax applies to CASE only."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CASE\nWHEN *condition* THEN *output-expression*\nWHEN *condition* THEN *output-expression* ...\nELSE *default-output-expression*\nEND\n"})}),"\n",(0,t.jsx)(n.p,{children:"If condition evaluates to true, output-expression is returned. Otherwise, default-output-expression (if any) is returned. Otherwise, NULL is returned."}),"\n",(0,t.jsx)(n.p,{children:"One WHEN clause is required. Further WHEN clauses are optional. If there are multiple WHEN clauses, they are evaluated in the order in which they appear. As soon as a condition applies, the output-expression is returned and further clauses are ignored."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Syntax 2"})}),"\n",(0,t.jsx)(n.p,{children:"This syntax has a DECODE counterpart (see below). The syntax between CASE and DECODE is different but the functionality is otherwise equivalent."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CASE *evaluated-expression*\nWHEN *input-expression* THEN *output-expression*\nWHEN *input-expression* THEN *output-expression* ...\nELSE *default-output-expression*\nEND\n"})}),"\n",(0,t.jsx)(n.p,{children:"If input-expression is equal to evaluated-expression, output-expression is returned. Otherwise, default-output-expression (if any) is returned. Otherwise, NULL is returned."}),"\n",(0,t.jsx)(n.p,{children:"One WHEN clause is required. Further WHEN clauses are optional. If there are multiple WHEN clauses, they are evaluated in the order in which they appear. As soon as input-expression matches evaluated-expression, output-expression is returned and further clauses are ignored."}),"\n",(0,t.jsx)(n.h2,{id:"decode",children:"DECODE"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"DECODE(\n*evaluated-expression*\n,     *input-expression, output-expression*\n,     *input-expression, output-expression*\n,     *default-output-expression*\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If input-expression is equal to evaluated-expression, output-expression is returned. Otherwise, default-output-expression (if any) is returned. Otherwise, NULL is returned."}),"\n",(0,t.jsx)(n.p,{children:"One input-expression, output-expression pair is required. Further pairs are optional. If there are multiple pairs, they are evaluated in the order in which they appear. As soon as input-expression matches evaluated-expression, output-expression is returned and further pairs are ignored."}),"\n",(0,t.jsx)(n.h2,{id:"example-1-select-clause-case-with-conditions",children:"Example 1: SELECT clause, CASE with conditions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     CASE WHEN city = 'BRUSSELS' THEN 'BRUXELLES' ELSE city END\nFROM       person\nWHERE      city LIKE 'B%'\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example result is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"BERLIN\nBIRMINGHAM\nBRISTOL\nBRUXELLES\nBRUXELLES\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-2a-select-clause-case-with-evaluated-expression",children:"Example 2a: SELECT clause, CASE with evaluated expression"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     CASE city WHEN 'BRUSSELS' THEN 'BRUXELLES' ELSE city END\nFROM       person\nWHERE      city LIKE 'B%'\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example result is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"BERLIN\nBIRMINGHAM\nBRISTOL\nBRUXELLES\nBRUXELLES\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-2b-select-clause-decode",children:"Example 2b: SELECT clause, DECODE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     DECODE( city, 'BRUSSELS', 'BRUXELLES', city )\nFROM       person\nWHERE      city LIKE 'B%'\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example result is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"BERLIN\nBIRMINGHAM\nBRISTOL\nBRUXELLES\nBRUXELLES\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-3-where-clause-case-with-conditions",children:"Example 3: WHERE clause, CASE with conditions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     city\nFROM       person\nWHERE      city LIKE 'B%'\nAND        CASE WHEN city = 'BRUSSELS' THEN 'BRUXELLES' ELSE city END = 'BRUXELLES'\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example result is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"BRUSSELS\nBRUSSELS\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-4-default-null-values",children:"Example 4: Default NULL values"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT     NVL( CASE WHEN city = 'BRUSSELS' THEN 'BRUXELLES' END , 'NULL' )\nFROM       person\nWHERE      city LIKE 'B%'\n"})}),"\n",(0,t.jsx)(n.p,{children:"An example result is:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"NULL\nNULL\nNULL\nBRUXELLES\nBRUXELLES\n"})}),"\n",(0,t.jsx)(n.p,{children:"\xa0"})]})}function E(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);