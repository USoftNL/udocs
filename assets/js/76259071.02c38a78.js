"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[36932],{28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>a});var o=n(96540);const r={},i=o.createContext(r);function s(t){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),o.createElement(i.Provider,{value:e},t.children)}},46151:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON","title":"Meta-instruction properties in JSON","description":"A meta-instruction property in a USoft JSON object is an entry that is not part of the JSON data proper. Rather, it gives an instruction about how to view or handle the surrounding data.","source":"@site/docs/Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON.md","sourceDirName":"Repositories/USoft_JSON_format","slug":"/Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON","permalink":"/udocs/Repositories/USoft_JSON_format/Metainstruction_properties_in_JSON","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Metainstruction_properties_in_JSON"},"sidebar":"sidebar","previous":{"title":"JSON representation of date values","permalink":"/udocs/Repositories/USoft_JSON_format/JSON_representation_of_date_values"},"next":{"title":"Data flow control with XML or JSON","permalink":"/udocs/Repositories/Data_flow_control_with_XML_or_JSON"}}');var r=n(74848),i=n(28453);const s={id:"Metainstruction_properties_in_JSON"},a="Meta-instruction properties in JSON",c={},p=[];function l(t){const e={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"meta-instruction-properties-in-json",children:"Meta-instruction properties in JSON"})}),"\n",(0,r.jsxs)(e.p,{children:["A ",(0,r.jsx)(e.strong,{children:"meta-instruction property"})," in a USoft JSON object is an entry that is not part of the JSON data proper. Rather, it gives an instruction about how to view or handle the surrounding data."]}),"\n",(0,r.jsx)(e.p,{children:"Meta-instruction properties stand out because their names start with an at sign (@). This is a suitable distinguishing mark, because it is untypical or impossible in a USoft application to have database column names that start with an at sign."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Syntax"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'"@*key*" : *value*\n\n*key*    ::=  { usoft-json    |\n              Insert | Update | Delete  }\n\n'})}),"\n",(0,r.jsxs)(e.p,{children:["In the property name, '@\u2019 is a literal and ",(0,r.jsx)(e.em,{children:"\u2018key"}),"\u2019**is one of the reserved names 'usoft-json\u2019, 'Insert\u2019, 'Update\u2019, 'Delete\u2019. ",(0,r.jsx)(e.em,{children:"Value"})," is any valid value that a property can be given in JSON. As per normal, if ",(0,r.jsx)(e.em,{children:"value"})," is a literal, it is double-quoted (not shown) if a string or date value, and unquoted if a number value."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Example 1"})}),"\n",(0,r.jsxs)(e.p,{children:["In this example, the ",(0,r.jsx)(e.strong,{children:"@usoft-json"})," meta-instruction property is a top-level element that contains directives on how to treat the data in the remainder of the JSON document. For details on these directives, go to ",(0,r.jsx)(e.a,{href:"/udocs/Repositories/USoft_XML_formats/usoftxml_processing_instruction",children:"usoft-xml processing instruction"}),", which is the XML counterpart of the @usoft-json property."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-language-json",children:'{\n\t"@usoft-json": {\n\t\t"version": "1.0",\n\t\t"action": "multi-tables-import",\n\t\t"use-io-formats": "No",\n\t\t"trim-spaces": "No",\n\t\t"verify-original-values": "no",\n\t\t"return-corrected-records": "c:\\\\temp\\\\json.json",\n\t\t"append-to-file": "No",\n\t\t"overwrite-non-updatables": "No",\n\t\t"relationship-behaviour": "default"\n\t},\n\t"TOUR": [\n\t    {\n\t\t    "TOUR_ID": 50,\n\t\t    "DESTINATION": "PARAGUAY",\n\t\t    "TOUR_TYPE": "SOUTH AM. SPECIAL",\n\t\t    "START_DATE": "2020-05-11T00:00:00",\n\t\t    "RETURN_DATE": "2020-06-04T00:00:00",\n\t\t    "PLAN_DATE": "2019-08-05T16:10:33",\n\t\t    "PRICE": 120,\n\t\t    "MAX_PART": 10,\n\t\t    "GUIDE": 11\n\t    },\n        ...\n    ]\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Example 2"})}),"\n",(0,r.jsxs)(e.p,{children:["In this example, the ",(0,r.jsx)(e.strong,{children:"@Update"})," and ",(0,r.jsx)(e.strong,{children:"@Delete"})," meta-instruction properties allow you to be specific about what operation to apply to the data. These are JSON counterparts of <Update> and <Delete> DML instruction tags in the USoft XML format."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-language-json",children:'INVOKE    JSON.Import WITH\nSELECT    \'{ "PERSON":[\n                "ID":112\n             ,  "FAMILY_NAME":"Smith"\n             ,  "FIRST_NAME":"John"\n             ,  "@Update":{\n                   "FIRST_NAME":"Johnny"\n                }\n             ],\n             "PERSON":[\n                "ID":203\n             ,  "FAMILY_NAME":"Sutcliff"\n             ,  "FIRST_NAME":"Bill"\n             ,  "@Delete":{}\n             ]\n          }\' JSONDocument\n,         \'AllColumns\' VerifyOriginalValues\n'})}),"\n",(0,r.jsx)(e.p,{children:"\xa0"})]})}function u(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}}}]);