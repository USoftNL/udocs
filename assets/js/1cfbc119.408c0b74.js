"use strict";(self.webpackChunkudocs=self.webpackChunkudocs||[]).push([[16661],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},56837:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Repositories/Blend_directives/pcGetVariables","title":"pc:GetVariables","description":"This article is about the pc:GetVariables Blend directive.","source":"@site/docs/Repositories/Blend_directives/pcGetVariables.md","sourceDirName":"Repositories/Blend_directives","slug":"/Repositories/Blend_directives/pcGetVariables","permalink":"/udocs/Repositories/Blend_directives/pcGetVariables","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pcGetVariables"},"sidebar":"sidebar","previous":{"title":"pc:GetRulesEngineProperty","permalink":"/udocs/Repositories/Blend_directives/pcGetRulesEngineProperty"},"next":{"title":"pc:if","permalink":"/udocs/Repositories/Blend_directives/pcif"}}');var r=i(74848),t=i(28453);const a={id:"pcGetVariables"},l="pc",c={},o=[{value:"<strong>pc</strong>",id:"pc-1",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"pc",children:["pc",":GetVariables"]})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This article is about the ",(0,r.jsxs)(n.strong,{children:["pc",":GetVariables"]}),(0,r.jsx)(n.a,{href:"/Repositories/Blend_directives",children:" Blend directive"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"pc-1",children:(0,r.jsxs)(n.strong,{children:["pc",":GetVariables"]})}),"\n",(0,r.jsx)(n.p,{children:"Returns a full list of the names and values of variables currently referenced."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Syntax"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<pc:GetVariables />\n"})}),"\n",(0,r.jsxs)(n.p,{children:['Returns an XML document in the "Processing',":Command",'" namespace with a <pc',":Variables","> document node and, for each variable, a <pc",":Variable","> element with a name attribute that contains the name of the variable, and with the following content:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"For a string variable, a text node representing the current value of the variable."}),"\n",(0,r.jsx)(n.li,{children:"For a node set variable, a literal XML fragment representing the current value of the variable."}),"\n",(0,r.jsx)(n.li,{children:"For a queue variable, a list of <Queue> elements containing queued variable values, in the document order in which the values were enqueued."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:assign-string mystring="HelloUniverse"/>\n<pc:defs><somexml>Hi</somexml></pc:defs>\n<pc:assign-nodeset mydefs="{preceding-sibling::pc:defs/*}"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', 2)"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', 1)"/>\n<pc:void select="variable:Enqueue(\'iamaqueue\', \'somestring\')"/>\n<pc:GetVariables/>\n'})}),"\n",(0,r.jsx)(n.p,{children:"An example result value is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<pc:Variables xmlns:pc="Processing.Command">\n    <pc:Variable name="mystring">HelloUniverse</pc:Variable>\n    <pc:Variable name="mydefs">\n         <somexml>Hi</somexml>\n     </pc:Variable>\n     <pc:Variable name="iamaqueue">\n       <Queue>2</Queue>\n       <Queue>1</Queue>\n       <Queue>somestring</Queue>\n     </pc:Variable>\n</pc:Variables>\n'})}),"\n",(0,r.jsx)(n.p,{children:"\xa0"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);